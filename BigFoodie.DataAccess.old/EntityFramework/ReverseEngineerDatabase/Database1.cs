

//// ------------------------------------------------------------------------------------------------
//// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
//// Created by Simon Hughes (https://about.me/simon.hughes).
//// 
//// Do not make changes directly to this file - edit the template instead.
//// 
//// The following connection settings were used to generate this file:
////     Configuration file:     "BigFoodie.DataAccess\App.config"
////     Connection String Name: "BFDbContext"
////     Connection String:      "Data Source=BFDEVSQL;Initial Catalog=BigFoodieDB;Integrated Security=True;MultipleActiveResultSets=True"
//// ------------------------------------------------------------------------------------------------
//// Database Edition       : Developer Edition (64-bit)
//// Database Engine Edition: Enterprise

//// <auto-generated>
//// ReSharper disable ConvertPropertyToExpressionBody
//// ReSharper disable DoNotCallOverridableMethodsInConstructor
//// ReSharper disable InconsistentNaming
//// ReSharper disable PartialMethodWithSinglePart
//// ReSharper disable PartialTypeWithSinglePart
//// ReSharper disable RedundantNameQualifier
//// ReSharper disable RedundantOverridenMember
//// ReSharper disable UseNameofExpression
//// TargetFrameworkVersion = 4.51
//#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

//namespace BigFoodie.DataAccess.EntityFramework.ReverseEngineerDatabase
//{
//    using System.Linq;

//    // ************************************************************************
//    // Unit of work
//    public interface IMyDbContext : System.IDisposable
//    {
//        System.Data.Entity.DbSet<AdminAcc> AdminAccs { get; set; } // adminAcc
//        System.Data.Entity.DbSet<Adv> Advs { get; set; } // adv
//        System.Data.Entity.DbSet<Advsearch> Advsearches { get; set; } // advsearch
//        System.Data.Entity.DbSet<AppUserInfo> AppUserInfoes { get; set; } // AppUserInfo
//        System.Data.Entity.DbSet<AppUserSetting> AppUserSettings { get; set; } // AppUserSetting
//        System.Data.Entity.DbSet<AppUserToDevice> AppUserToDevices { get; set; } // AppUserToDevice
//        System.Data.Entity.DbSet<Blocklist> Blocklists { get; set; } // blocklist
//        System.Data.Entity.DbSet<Cashreturn> Cashreturns { get; set; } // cashreturn
//        System.Data.Entity.DbSet<Commission> Commissions { get; set; } // commission
//        System.Data.Entity.DbSet<CreditCard> CreditCards { get; set; } // creditCard
//        System.Data.Entity.DbSet<CustomerReview> CustomerReviews { get; set; } // customerReview
//        System.Data.Entity.DbSet<DeliveryAddr> DeliveryAddrs { get; set; } // deliveryAddr
//        System.Data.Entity.DbSet<Deviceinfo> Deviceinfoes { get; set; } // deviceinfo
//        System.Data.Entity.DbSet<Favourite> Favourites { get; set; } // favourites
//        System.Data.Entity.DbSet<Invitefriend> Invitefriends { get; set; } // invitefriend
//        System.Data.Entity.DbSet<MemberCash> MemberCashes { get; set; } // memberCash
//        System.Data.Entity.DbSet<Menu> Menus { get; set; } // menu
//        System.Data.Entity.DbSet<Menubasic> Menubasics { get; set; } // menubasic
//        System.Data.Entity.DbSet<MenuBasicTemplate> MenuBasicTemplates { get; set; } // MenuBasicTemplate
//        System.Data.Entity.DbSet<MenuCat> MenuCats { get; set; } // menuCat
//        System.Data.Entity.DbSet<MenuCatBasicMenu> MenuCatBasicMenus { get; set; } // menuCatBasicMenu
//        System.Data.Entity.DbSet<Menucattemplate> Menucattemplates { get; set; } // menucattemplate
//        System.Data.Entity.DbSet<Menuoptionalcat> Menuoptionalcats { get; set; } // menuoptionalcat
//        System.Data.Entity.DbSet<MenuPrice> MenuPrices { get; set; } // menuPrice
//        System.Data.Entity.DbSet<Menusideorder> Menusideorders { get; set; } // menusideorder
//        System.Data.Entity.DbSet<MultilangMenu> MultilangMenus { get; set; } // multilangMenu
//        System.Data.Entity.DbSet<Newshopregi> Newshopregis { get; set; } // newshopregis
//        System.Data.Entity.DbSet<OnlineUser> OnlineUsers { get; set; } // onlineUser
//        System.Data.Entity.DbSet<Order> Orders { get; set; } // orders
//        System.Data.Entity.DbSet<Ordercomment> Ordercomments { get; set; } // ordercomments
//        System.Data.Entity.DbSet<Ordercz> Orderczs { get; set; } // ordercz
//        System.Data.Entity.DbSet<Orderdelivery> Orderdeliveries { get; set; } // orderdelivery
//        System.Data.Entity.DbSet<Orderitem> Orderitems { get; set; } // orderitem
//        System.Data.Entity.DbSet<Ordernotice> Ordernotices { get; set; } // ordernotice
//        System.Data.Entity.DbSet<Orderoperation> Orderoperations { get; set; } // orderoperation
//        System.Data.Entity.DbSet<Orderpayment> Orderpayments { get; set; } // orderpayment
//        System.Data.Entity.DbSet<PushNoticeQueue> PushNoticeQueues { get; set; } // pushNoticeQueue
//        System.Data.Entity.DbSet<Recommend> Recommends { get; set; } // recommend
//        System.Data.Entity.DbSet<RecPaidAmountInfo> RecPaidAmountInfoes { get; set; } // RecPaidAmountInfo
//        System.Data.Entity.DbSet<ServiceTicket> ServiceTickets { get; set; } // serviceTicket
//        System.Data.Entity.DbSet<Shop> Shops { get; set; } // shop
//        System.Data.Entity.DbSet<ShopDelieveryArea> ShopDelieveryAreas { get; set; } // shopDelieveryArea
//        System.Data.Entity.DbSet<ShopdeliveryCost> ShopdeliveryCosts { get; set; } // shopdeliveryCost
//        System.Data.Entity.DbSet<Shopdiscount> Shopdiscounts { get; set; } // shopdiscount
//        System.Data.Entity.DbSet<ShopExtInfoForApp> ShopExtInfoForApps { get; set; } // ShopExtInfoForApp
//        System.Data.Entity.DbSet<ShopJz> ShopJzs { get; set; } // shopJZ
//        System.Data.Entity.DbSet<ShopJzDetail> ShopJzDetails { get; set; } // shopJZDetail
//        System.Data.Entity.DbSet<ShoppingCart> ShoppingCarts { get; set; } // ShoppingCart
//        System.Data.Entity.DbSet<ShoppingHoliday> ShoppingHolidays { get; set; } // shoppingHoliday
//        System.Data.Entity.DbSet<ShopTicket> ShopTickets { get; set; } // shopTickets
//        System.Data.Entity.DbSet<Shoptransactiondetail> Shoptransactiondetails { get; set; } // shoptransactiondetail
//        System.Data.Entity.DbSet<Shopviewtelrecord> Shopviewtelrecords { get; set; } // shopviewtelrecord
//        System.Data.Entity.DbSet<Shopworktime> Shopworktimes { get; set; } // shopworktime
//        System.Data.Entity.DbSet<Submenu> Submenus { get; set; } // submenu
//        System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; } // sysdiagrams
//        System.Data.Entity.DbSet<SysLog> SysLogs { get; set; } // sysLog
//        System.Data.Entity.DbSet<SysMsg> SysMsgs { get; set; } // sysMsg
//        System.Data.Entity.DbSet<UserCreditInfo> UserCreditInfoes { get; set; } // UserCreditInfo
//        System.Data.Entity.DbSet<UserReg> UserRegs { get; set; } // UserReg
//        System.Data.Entity.DbSet<Userscore> Userscores { get; set; } // userscore
//        System.Data.Entity.DbSet<Voucherinfo> Voucherinfoes { get; set; } // voucherinfo
//        System.Data.Entity.DbSet<VwAppUserProfile> VwAppUserProfiles { get; set; } // vwAppUserProfile
//        System.Data.Entity.DbSet<VwCustomerreview> VwCustomerreviews { get; set; } // vw_customerreview
//        System.Data.Entity.DbSet<VwGetAppDeviceInfo> VwGetAppDeviceInfoes { get; set; } // vwGetAppDeviceInfo
//        System.Data.Entity.DbSet<VwGetAppRestInfo> VwGetAppRestInfoes { get; set; } // vwGetAppRestInfo
//        System.Data.Entity.DbSet<VwGetOrderInfo> VwGetOrderInfoes { get; set; } // vwGetOrderInfo
//        System.Data.Entity.DbSet<VwGetOrderInfoForAdmin> VwGetOrderInfoForAdmins { get; set; } // vwGetOrderInfoForAdmin
//        System.Data.Entity.DbSet<VwGetOrderListForApp> VwGetOrderListForApps { get; set; } // vwGetOrderListForApp
//        System.Data.Entity.DbSet<VwGetShopInfo> VwGetShopInfoes { get; set; } // vwGetShopInfo
//        System.Data.Entity.DbSet<VwGetShopInfo2> VwGetShopInfo2 { get; set; } // vwGetShopInfo2
//        System.Data.Entity.DbSet<VwGetShopJzDetail> VwGetShopJzDetails { get; set; } // vwGetShopJZDetail
//        System.Data.Entity.DbSet<VwGetUserBalanceSummary> VwGetUserBalanceSummaries { get; set; } // vwGetUserBalanceSummary
//        System.Data.Entity.DbSet<VwGetUserFavShopInfo> VwGetUserFavShopInfoes { get; set; } // vwGetUserFavShopInfo
//        System.Data.Entity.DbSet<VwGetUserInfo> VwGetUserInfoes { get; set; } // vwGetUserInfo
//        System.Data.Entity.DbSet<VwOrdersValid> VwOrdersValids { get; set; } // vwOrdersValid
//        System.Data.Entity.DbSet<VwShopOrder> VwShopOrders { get; set; } // vwShopOrders
//        System.Data.Entity.DbSet<VwShopsValid> VwShopsValids { get; set; } // vwShopsValid
//        System.Data.Entity.DbSet<VwSysMsg> VwSysMsgs { get; set; } // vwSysMsg
//        System.Data.Entity.DbSet<VwUser2Device> VwUser2Device { get; set; } // vwUser2Device
//        System.Data.Entity.DbSet<VwUserBalanceSummary> VwUserBalanceSummaries { get; set; } // vwUserBalanceSummary
//        System.Data.Entity.DbSet<VwValidOrder> VwValidOrders { get; set; } // vwValidOrders
//        System.Data.Entity.DbSet<VwValidShop> VwValidShops { get; set; } // vwValidShops
//        System.Data.Entity.DbSet<Vwviewtel> Vwviewtels { get; set; } // vwviewtel

//        int SaveChanges();
//        System.Threading.Tasks.Task<int> SaveChangesAsync();
//        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        
//        // Stored Procedures
//        int AddToBlockList(string orderid, string reason, string operateid);
//        int CancelOrders(string orderid, string isCancelled, System.DateTime? orderCancelledDt, string cancelComments);
//        int DeleAppDevice(int? deviceid);
//        int Deleapprestanduser(int? shopid);
//        int Deletejz(int? jzid);
//        int GetAdvByCondition(string pc, string tn);
//        int GetOrdersByCondition(string sqlwhere);
//        int GetOrdersByUid(int? uid, int? shopid, string dtsql);
//        int GetOrdersByUser(string email, int? shopid, string dtsql);
//        System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode);
//        System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode, out int procResult);
//        int GetShopByTownName(string sn, string tn);
//        int ImportCatFromTempl(int? shopid, string cats);
//        int ImportPlFromTempl(int? shopid, string pls, string plcat);
//        int IsInBlockList(string orderid, out string ret);
//        int JzDetail(System.DateTime? frdt, System.DateTime? todt, int? shopid, decimal? stdcommrate, int? jzid, out string ret);
//        int JzDetailtmp(System.DateTime? frdt, System.DateTime? todt, int? shopid, int? jzid, out string ret);
//        int PfSysPageControl(string tableName, string tableFields, string sqlWhere, string orderFields, int? pageSize, int? pageIndex, out int? totalPage);
//        int PfSysPageControl2000(string tablename, string tableFields, int? pageIndex, int? pageSize, string sqlWhere, string orderFields, bool? intOrder, out int? totalPage);
//        int SpAdminAccAdd(string loginname, string loginpwd, System.DateTime? createtime, string rightcode, string isvalid, string isadmin);
//        int SpAdminAccUpdate(string loginname, string loginpwd, string rightcode, string isvalid, string isadmin);
//        int SpAdvpicAdd(int? advid, string pc, string townname, int? shopid, string shoploginname, System.DateTime? starttime, System.DateTime? endtime, string urllink, string advPic, int? indexno, int? clicknum);
//        int SpAdvsearchAdd(string postcode, int? indexno, string shopid, System.DateTime? startdt, System.DateTime? enddt, System.DateTime? createdt, string createuser);
//        int SpAppUserAdd(int? shopid, string password, string usertype, string username, string status, System.DateTime? createdt, string createuser, string loginstatus, out int? appuserid);
//        int SpAppuserExit(string apptokenstr);
//        int SpAppUserLogin(string loginname, string loginip, string apptokenstr, string devicetoken);
//        int SpAppUserSettingAdd(string operatecode, int? appuserid);
//        int SpDeleteOrder(string orderid);
//        int SpGetMenuInfoOfSets(int? shopid, int? mid, int? catid);
//        SpGetMenuInfosReturnModel SpGetMenuInfos(int? shopid, int? catid);
//        SpGetPlInfoReturnModel SpGetPlInfo(string menutype1, string menutype2, int? shopid);
//        int SpMenuAdd(int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string discountway, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? createDt, string flag, decimal? indexnum, int? mealamt);
//        int SpMenuUpdate(int? mid, int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? updateDt, string flag, decimal? indexnum, int? mealamt);
//        int SpMenuBasicAdd(int? shopid, string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum);
//        int SpMenuBasicDelete(int? basicmenuid, int? shopid);
//        int SpMenuBasicUpdate(int? basicmenuid, int? shopid, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum);
//        int SpMenuBasicTemplateAdd(string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001);
//        int SpMenuBasicTemplateUpdate(int? basicmenuid, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001);
//        int SpMenuCatBasicMenuUpdate(int? catid, int? shopid, string menutype1, string menutype2, string basicmenuids);
//        int SpMenucattemplateAdd(decimal? indexnum, string catname, string catname2, string cat001);
//        int SpMenucattemplateUpdate(int? catid, decimal? indexnum, string catname, string catname2, string cat001);
//        int SpMenuOptionCatAdd(int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc);
//        int SpMenuOptionCatDelete(int? optioncatid, int? shopid);
//        int SpMenuOptionCatUpdate(decimal? optioncatid, int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc);
//        int SpMultilangmenuAdd(string menuname, string name1, string name2, string name3, string name4, string name5, string name6, string name7);
//        int SpOrderdeliveryAdd(string orderid, string addr1, string addr2, string addr3, string townname, string postcode1, string postcode2, string contactname, string tel1, string tel2, System.DateTime? deliverdt, string deliverpeople, string comments);
//        int SpOrderitemAdd(string orderid, int? mid, int? submenuid, string menucode, string menuName, string menuNameE, string menuName2, string menuName2E, int? amount, decimal? price1, decimal? discountprice, decimal? totalprice, string menulogo, string menutype);
//        int SpOrderpaymentAdd(string orderid, string cardnumber, string cardtype, string name1, string name2, System.DateTime? paidtime, System.DateTime? applytime, decimal? paidamount, string isret);
//        int SpOrdersAdd(out string orderId, int? shopid, int? uid, string useremail, string payway, string ispaid, string ticketnumber, int? ticketvalue, string deliveryway, string comments, string orderstatus, System.DateTime? ordercreatedt, string isCancelled, decimal? totalprice1, decimal? discountRate, decimal? afterdiscount, decimal? deliverycharge, decimal? serviceCharge, decimal? creditcardCharge, decimal? tips, string isjz, decimal? totalamount, string userIp, System.DateTime? pickupdt, decimal? commrate, string isnew, decimal? shopcardcharge, decimal? paidwithcredit, string vouchercode);
//        int SpRefreshByDeviceTokenId(string devicetoken);
//        int SpRefreshDeviceDt(string apptokenstr);
//        int SpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt);
//        int SpShopAddDeliveryInfo(int? shopid, string serviceType, string serviceTypeL, string deliveryWay, string deliverytime, string deliveryLastOt, decimal? deliveryMinOrder);
//        int SpShopChangeboard(string board, int? shopid);
//        int SpShopUpdate(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string logo, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string acceptCustomerOpt);
//        int SpShopUpdate2(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder);
//        int SpShopUpdate3(int? shopid, string description, System.DateTime? updateTime, string alias, string orderlang);
//        int SpShopDelieveryAreaAdd(int? shopid, string postcode1, decimal? delieveryCost, string comments, System.DateTime? createDt, string flag1, string bak001);
//        int SpShopDelieveryAreaUpdate(int? did, int? shopid, decimal? delieveryCost, string comments, string flag1, string bak001);
//        int SpShopdiscountUpdate(int? shopid, string board, string discountway, decimal? minorderamt, int? discountrate);
//        int SpShopJz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret);
//        int SpShoppingCartAdd(int? customerId, string customerSessionId, System.DateTime? createdOn, System.DateTime? updateOn, int? shopid, int? productId, int? mainfoodid, string menuOptionIDs, string subProductId, int? quantity);
//        int SpShoppingCartUpdate(int? cartid, int? customerId, string customerSessionId, System.DateTime? updateOn, int? quantity, int? productId, string subProductId, string opt);
//        int SpShopunjz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret);
//        int SpSysLogAdd(string userid, string actstr, System.DateTime? actdt, string priority);
//        int SpUserCreditInfoAdd(int? shopid, int? userid, string moneydirection, decimal? amt, string comment, string orderid, System.DateTime? createdt);
//        int SpUserregChangeCredits(int? sid, int? uid, string act);
//        int SpUserregChangeScore(int? sid, int? uid, string act);
//        System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email);
//        System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email, out int procResult);
//        int SpUserregUpdateutype(string upwd, string utype, int? uid);
//        int SpViewtelAdd(int? shopid, System.DateTime? actdt);
//        int UpCreateShopUser(string utype, string pwd, out int? uid, out string email);
//        int UpCreditCardAdd(int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2);
//        int UpCreditCardDelete(int? cardid, int? uid);
//        System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid);
//        System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid, out int procResult);
//        int UpCreditCardUpdate(int? cardid, int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2);
//        int UpCustomerReviewAdd(int? uid, string email, decimal? rate1, decimal? rate2, decimal? rate3, decimal? rate4, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid, string comment, string replyMsg);
//        int UpCustomerReviewDelete(int? reviewid, int? shopid);
//        int UpCustomerReviewForMealAdd(int? uid, string email, decimal? rate1, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid);
//        int UpDeliveryAddrAdd(out int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile);
//        int UpDeliveryAddrDelete(int? addrid, int? uid);
//        System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid);
//        System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid, out int procResult);
//        System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid);
//        System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid, out int procResult);
//        int UpDeliveryAddrUpdate(int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile);
//        int UpDeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, decimal? freeAmount, decimal? unitRate);
//        int UpFavouritesAdd(out int? fid, int? uid, string ftype, int? shopid, int? mid, System.DateTime? createDt, string flag);
//        int UpFavouritesDelete(int? fid, int? uid);
//        System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid);
//        System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid, out int procResult);
//        UpGetUserEmailReturnModel UpGetUserEmail(string utype);
//        int UpMenuCatAdd(int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? createDt, decimal? indexnum, string logostr);
//        int UpMenuCatDelete(out string logostr, int? shopid, int? catid);
//        int UpMenuCatUpdate(int? catid, int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? modifiedDt, decimal? indexnum, string logostr);
//        int UpOnlineUserAdd(int? uid, string urealname, System.DateTime? loginTime, System.DateTime? lastUpdateTime, string utype);
//        int UpOrderczAdd(System.DateTime? czdt, string orderid, string comments, decimal? amt, string operateid);
//        int UpRecommendAdd(int? recUid, string recName, string shopname, string townname, string deliveryArea, string addr, string tel);
//        int UpRecommendDelete(int? recId);
//        System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId);
//        System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId, out int procResult);
//        int UpServiceTicketAdd(string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string createuser);
//        int UpServiceTicketUpdate(int? ticketid, string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string modifyuser);
//        int UpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string alias);
//        int UpShopBgpicture(int? shopid, string logo);
//        int UpShopChanglogo(int? shopid, string logo);
//        System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid);
//        System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid, out int procResult);
//        int UpShopdeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, int? unitDistance, decimal? unitRate, string isDiscount, int? basicDistance2, decimal? minOrderAmount, decimal? freeAmount);
//        int UpShopdeliveryCostAdd2(int? shopid, string costtype);
//        int UpShoppingHolidayAdd(int? shopid, System.DateTime? fromDt, System.DateTime? toDt);
//        int UpShoppingHolidayDelete(int? holidayid, int? shopid);
//        System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid);
//        System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid, out int procResult);
//        int UpShopworktimeAdd(int? shopid, string monFrToA, string monFrToB, string tuesFrToA, string tuesFrToB, string wedFrToA, string wedFrToB, string thurFrToA, string thurFrToB, string friFrToA, string friFrToB, string satFrToA, string satFrToB, string sunFrToA, string sunFrToB, string wt001, string haslunch);
//        int UpSysMsgAdd(string msgtitle, string msgcontent, System.DateTime? msgdt, int? msgto);
//        int UpSysMsgDelete(int? msgid, int? msgto);
//        System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid);
//        System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid, out int procResult);
//        int UpSysMsgUpdate(int? msgid, int? msgto);
//        int UpUsercreditsAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description);
//        int UpUserRegAdd(out int? uid, string utype, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed);
//        int UpUserregBlockUser(int? uid, string block);
//        int UpUserregChangeemail(int? uid, string newemail);
//        int UpUserregChangepwd(int? uid, string pwd);
//        int UpUserRegDelete(int? uid);
//        System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid);
//        System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid, out int procResult);
//        System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email);
//        System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email, out int procResult);
//        UpUserregGetPwdQuestionReturnModel UpUserregGetPwdQuestion(int? uid, string mail);
//        int UpUserregLockuserByid(int? uid, string islocked);
//        int UpUserRegUpdate(int? uid, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed);
//        int UpUserregUpdatelogintimeIp(string ip, int? uid);
//        int UpUserscoreAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description);
//        int UpUserscoreDelete(int? sid, int? isadmin, int? uid);
//        System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid);
//        System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid, out int procResult);
//        System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid);
//        System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid, out int procResult);
//        int UpdateBasicAddr(int? uid, string username, string mobile);
//        int UpdateOrderStatus(string orderid, string opt);
//        int UpdateReferenceMember(int? uid);
//    }

//    // ************************************************************************
//    // Database context
//    public class MyDbContext : System.Data.Entity.DbContext, IMyDbContext
//    {
//        public System.Data.Entity.DbSet<AdminAcc> AdminAccs { get; set; } // adminAcc
//        public System.Data.Entity.DbSet<Adv> Advs { get; set; } // adv
//        public System.Data.Entity.DbSet<Advsearch> Advsearches { get; set; } // advsearch
//        public System.Data.Entity.DbSet<AppUserInfo> AppUserInfoes { get; set; } // AppUserInfo
//        public System.Data.Entity.DbSet<AppUserSetting> AppUserSettings { get; set; } // AppUserSetting
//        public System.Data.Entity.DbSet<AppUserToDevice> AppUserToDevices { get; set; } // AppUserToDevice
//        public System.Data.Entity.DbSet<Blocklist> Blocklists { get; set; } // blocklist
//        public System.Data.Entity.DbSet<Cashreturn> Cashreturns { get; set; } // cashreturn
//        public System.Data.Entity.DbSet<Commission> Commissions { get; set; } // commission
//        public System.Data.Entity.DbSet<CreditCard> CreditCards { get; set; } // creditCard
//        public System.Data.Entity.DbSet<CustomerReview> CustomerReviews { get; set; } // customerReview
//        public System.Data.Entity.DbSet<DeliveryAddr> DeliveryAddrs { get; set; } // deliveryAddr
//        public System.Data.Entity.DbSet<Deviceinfo> Deviceinfoes { get; set; } // deviceinfo
//        public System.Data.Entity.DbSet<Favourite> Favourites { get; set; } // favourites
//        public System.Data.Entity.DbSet<Invitefriend> Invitefriends { get; set; } // invitefriend
//        public System.Data.Entity.DbSet<MemberCash> MemberCashes { get; set; } // memberCash
//        public System.Data.Entity.DbSet<Menu> Menus { get; set; } // menu
//        public System.Data.Entity.DbSet<Menubasic> Menubasics { get; set; } // menubasic
//        public System.Data.Entity.DbSet<MenuBasicTemplate> MenuBasicTemplates { get; set; } // MenuBasicTemplate
//        public System.Data.Entity.DbSet<MenuCat> MenuCats { get; set; } // menuCat
//        public System.Data.Entity.DbSet<MenuCatBasicMenu> MenuCatBasicMenus { get; set; } // menuCatBasicMenu
//        public System.Data.Entity.DbSet<Menucattemplate> Menucattemplates { get; set; } // menucattemplate
//        public System.Data.Entity.DbSet<Menuoptionalcat> Menuoptionalcats { get; set; } // menuoptionalcat
//        public System.Data.Entity.DbSet<MenuPrice> MenuPrices { get; set; } // menuPrice
//        public System.Data.Entity.DbSet<Menusideorder> Menusideorders { get; set; } // menusideorder
//        public System.Data.Entity.DbSet<MultilangMenu> MultilangMenus { get; set; } // multilangMenu
//        public System.Data.Entity.DbSet<Newshopregi> Newshopregis { get; set; } // newshopregis
//        public System.Data.Entity.DbSet<OnlineUser> OnlineUsers { get; set; } // onlineUser
//        public System.Data.Entity.DbSet<Order> Orders { get; set; } // orders
//        public System.Data.Entity.DbSet<Ordercomment> Ordercomments { get; set; } // ordercomments
//        public System.Data.Entity.DbSet<Ordercz> Orderczs { get; set; } // ordercz
//        public System.Data.Entity.DbSet<Orderdelivery> Orderdeliveries { get; set; } // orderdelivery
//        public System.Data.Entity.DbSet<Orderitem> Orderitems { get; set; } // orderitem
//        public System.Data.Entity.DbSet<Ordernotice> Ordernotices { get; set; } // ordernotice
//        public System.Data.Entity.DbSet<Orderoperation> Orderoperations { get; set; } // orderoperation
//        public System.Data.Entity.DbSet<Orderpayment> Orderpayments { get; set; } // orderpayment
//        public System.Data.Entity.DbSet<PushNoticeQueue> PushNoticeQueues { get; set; } // pushNoticeQueue
//        public System.Data.Entity.DbSet<Recommend> Recommends { get; set; } // recommend
//        public System.Data.Entity.DbSet<RecPaidAmountInfo> RecPaidAmountInfoes { get; set; } // RecPaidAmountInfo
//        public System.Data.Entity.DbSet<ServiceTicket> ServiceTickets { get; set; } // serviceTicket
//        public System.Data.Entity.DbSet<Shop> Shops { get; set; } // shop
//        public System.Data.Entity.DbSet<ShopDelieveryArea> ShopDelieveryAreas { get; set; } // shopDelieveryArea
//        public System.Data.Entity.DbSet<ShopdeliveryCost> ShopdeliveryCosts { get; set; } // shopdeliveryCost
//        public System.Data.Entity.DbSet<Shopdiscount> Shopdiscounts { get; set; } // shopdiscount
//        public System.Data.Entity.DbSet<ShopExtInfoForApp> ShopExtInfoForApps { get; set; } // ShopExtInfoForApp
//        public System.Data.Entity.DbSet<ShopJz> ShopJzs { get; set; } // shopJZ
//        public System.Data.Entity.DbSet<ShopJzDetail> ShopJzDetails { get; set; } // shopJZDetail
//        public System.Data.Entity.DbSet<ShoppingCart> ShoppingCarts { get; set; } // ShoppingCart
//        public System.Data.Entity.DbSet<ShoppingHoliday> ShoppingHolidays { get; set; } // shoppingHoliday
//        public System.Data.Entity.DbSet<ShopTicket> ShopTickets { get; set; } // shopTickets
//        public System.Data.Entity.DbSet<Shoptransactiondetail> Shoptransactiondetails { get; set; } // shoptransactiondetail
//        public System.Data.Entity.DbSet<Shopviewtelrecord> Shopviewtelrecords { get; set; } // shopviewtelrecord
//        public System.Data.Entity.DbSet<Shopworktime> Shopworktimes { get; set; } // shopworktime
//        public System.Data.Entity.DbSet<Submenu> Submenus { get; set; } // submenu
//        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; } // sysdiagrams
//        public System.Data.Entity.DbSet<SysLog> SysLogs { get; set; } // sysLog
//        public System.Data.Entity.DbSet<SysMsg> SysMsgs { get; set; } // sysMsg
//        public System.Data.Entity.DbSet<UserCreditInfo> UserCreditInfoes { get; set; } // UserCreditInfo
//        public System.Data.Entity.DbSet<UserReg> UserRegs { get; set; } // UserReg
//        public System.Data.Entity.DbSet<Userscore> Userscores { get; set; } // userscore
//        public System.Data.Entity.DbSet<Voucherinfo> Voucherinfoes { get; set; } // voucherinfo
//        public System.Data.Entity.DbSet<VwAppUserProfile> VwAppUserProfiles { get; set; } // vwAppUserProfile
//        public System.Data.Entity.DbSet<VwCustomerreview> VwCustomerreviews { get; set; } // vw_customerreview
//        public System.Data.Entity.DbSet<VwGetAppDeviceInfo> VwGetAppDeviceInfoes { get; set; } // vwGetAppDeviceInfo
//        public System.Data.Entity.DbSet<VwGetAppRestInfo> VwGetAppRestInfoes { get; set; } // vwGetAppRestInfo
//        public System.Data.Entity.DbSet<VwGetOrderInfo> VwGetOrderInfoes { get; set; } // vwGetOrderInfo
//        public System.Data.Entity.DbSet<VwGetOrderInfoForAdmin> VwGetOrderInfoForAdmins { get; set; } // vwGetOrderInfoForAdmin
//        public System.Data.Entity.DbSet<VwGetOrderListForApp> VwGetOrderListForApps { get; set; } // vwGetOrderListForApp
//        public System.Data.Entity.DbSet<VwGetShopInfo> VwGetShopInfoes { get; set; } // vwGetShopInfo
//        public System.Data.Entity.DbSet<VwGetShopInfo2> VwGetShopInfo2 { get; set; } // vwGetShopInfo2
//        public System.Data.Entity.DbSet<VwGetShopJzDetail> VwGetShopJzDetails { get; set; } // vwGetShopJZDetail
//        public System.Data.Entity.DbSet<VwGetUserBalanceSummary> VwGetUserBalanceSummaries { get; set; } // vwGetUserBalanceSummary
//        public System.Data.Entity.DbSet<VwGetUserFavShopInfo> VwGetUserFavShopInfoes { get; set; } // vwGetUserFavShopInfo
//        public System.Data.Entity.DbSet<VwGetUserInfo> VwGetUserInfoes { get; set; } // vwGetUserInfo
//        public System.Data.Entity.DbSet<VwOrdersValid> VwOrdersValids { get; set; } // vwOrdersValid
//        public System.Data.Entity.DbSet<VwShopOrder> VwShopOrders { get; set; } // vwShopOrders
//        public System.Data.Entity.DbSet<VwShopsValid> VwShopsValids { get; set; } // vwShopsValid
//        public System.Data.Entity.DbSet<VwSysMsg> VwSysMsgs { get; set; } // vwSysMsg
//        public System.Data.Entity.DbSet<VwUser2Device> VwUser2Device { get; set; } // vwUser2Device
//        public System.Data.Entity.DbSet<VwUserBalanceSummary> VwUserBalanceSummaries { get; set; } // vwUserBalanceSummary
//        public System.Data.Entity.DbSet<VwValidOrder> VwValidOrders { get; set; } // vwValidOrders
//        public System.Data.Entity.DbSet<VwValidShop> VwValidShops { get; set; } // vwValidShops
//        public System.Data.Entity.DbSet<Vwviewtel> Vwviewtels { get; set; } // vwviewtel
        
//        static MyDbContext()
//        {
//            System.Data.Entity.Database.SetInitializer<MyDbContext>(null);
//        }

//        public MyDbContext()
//            : base("Name=BFDbContext")
//        {
//        }

//        public MyDbContext(string connectionString) : base(connectionString)
//        {
//        }

//        public MyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
//        {
//        }

//        protected override void Dispose(bool disposing)
//        {
//            base.Dispose(disposing);
//        }

//        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
//        {
//            var sqlValue = param.SqlValue;
//            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
//            if (nullableValue != null)
//                return nullableValue.IsNull;
//            return (sqlValue == null || sqlValue == System.DBNull.Value);
//        }

//        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
//        {
//            base.OnModelCreating(modelBuilder);

//            modelBuilder.Configurations.Add(new AdminAccConfiguration());
//            modelBuilder.Configurations.Add(new AdvConfiguration());
//            modelBuilder.Configurations.Add(new AdvsearchConfiguration());
//            modelBuilder.Configurations.Add(new AppUserInfoConfiguration());
//            modelBuilder.Configurations.Add(new AppUserSettingConfiguration());
//            modelBuilder.Configurations.Add(new AppUserToDeviceConfiguration());
//            modelBuilder.Configurations.Add(new BlocklistConfiguration());
//            modelBuilder.Configurations.Add(new CashreturnConfiguration());
//            modelBuilder.Configurations.Add(new CommissionConfiguration());
//            modelBuilder.Configurations.Add(new CreditCardConfiguration());
//            modelBuilder.Configurations.Add(new CustomerReviewConfiguration());
//            modelBuilder.Configurations.Add(new DeliveryAddrConfiguration());
//            modelBuilder.Configurations.Add(new DeviceinfoConfiguration());
//            modelBuilder.Configurations.Add(new FavouriteConfiguration());
//            modelBuilder.Configurations.Add(new InvitefriendConfiguration());
//            modelBuilder.Configurations.Add(new MemberCashConfiguration());
//            modelBuilder.Configurations.Add(new MenuConfiguration());
//            modelBuilder.Configurations.Add(new MenubasicConfiguration());
//            modelBuilder.Configurations.Add(new MenuBasicTemplateConfiguration());
//            modelBuilder.Configurations.Add(new MenuCatConfiguration());
//            modelBuilder.Configurations.Add(new MenuCatBasicMenuConfiguration());
//            modelBuilder.Configurations.Add(new MenucattemplateConfiguration());
//            modelBuilder.Configurations.Add(new MenuoptionalcatConfiguration());
//            modelBuilder.Configurations.Add(new MenuPriceConfiguration());
//            modelBuilder.Configurations.Add(new MenusideorderConfiguration());
//            modelBuilder.Configurations.Add(new MultilangMenuConfiguration());
//            modelBuilder.Configurations.Add(new NewshopregiConfiguration());
//            modelBuilder.Configurations.Add(new OnlineUserConfiguration());
//            modelBuilder.Configurations.Add(new OrderConfiguration());
//            modelBuilder.Configurations.Add(new OrdercommentConfiguration());
//            modelBuilder.Configurations.Add(new OrderczConfiguration());
//            modelBuilder.Configurations.Add(new OrderdeliveryConfiguration());
//            modelBuilder.Configurations.Add(new OrderitemConfiguration());
//            modelBuilder.Configurations.Add(new OrdernoticeConfiguration());
//            modelBuilder.Configurations.Add(new OrderoperationConfiguration());
//            modelBuilder.Configurations.Add(new OrderpaymentConfiguration());
//            modelBuilder.Configurations.Add(new PushNoticeQueueConfiguration());
//            modelBuilder.Configurations.Add(new RecommendConfiguration());
//            modelBuilder.Configurations.Add(new RecPaidAmountInfoConfiguration());
//            modelBuilder.Configurations.Add(new ServiceTicketConfiguration());
//            modelBuilder.Configurations.Add(new ShopConfiguration());
//            modelBuilder.Configurations.Add(new ShopDelieveryAreaConfiguration());
//            modelBuilder.Configurations.Add(new ShopdeliveryCostConfiguration());
//            modelBuilder.Configurations.Add(new ShopdiscountConfiguration());
//            modelBuilder.Configurations.Add(new ShopExtInfoForAppConfiguration());
//            modelBuilder.Configurations.Add(new ShopJzConfiguration());
//            modelBuilder.Configurations.Add(new ShopJzDetailConfiguration());
//            modelBuilder.Configurations.Add(new ShoppingCartConfiguration());
//            modelBuilder.Configurations.Add(new ShoppingHolidayConfiguration());
//            modelBuilder.Configurations.Add(new ShopTicketConfiguration());
//            modelBuilder.Configurations.Add(new ShoptransactiondetailConfiguration());
//            modelBuilder.Configurations.Add(new ShopviewtelrecordConfiguration());
//            modelBuilder.Configurations.Add(new ShopworktimeConfiguration());
//            modelBuilder.Configurations.Add(new SubmenuConfiguration());
//            modelBuilder.Configurations.Add(new SysdiagramConfiguration());
//            modelBuilder.Configurations.Add(new SysLogConfiguration());
//            modelBuilder.Configurations.Add(new SysMsgConfiguration());
//            modelBuilder.Configurations.Add(new UserCreditInfoConfiguration());
//            modelBuilder.Configurations.Add(new UserRegConfiguration());
//            modelBuilder.Configurations.Add(new UserscoreConfiguration());
//            modelBuilder.Configurations.Add(new VoucherinfoConfiguration());
//            modelBuilder.Configurations.Add(new VwAppUserProfileConfiguration());
//            modelBuilder.Configurations.Add(new VwCustomerreviewConfiguration());
//            modelBuilder.Configurations.Add(new VwGetAppDeviceInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwGetAppRestInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwGetOrderInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwGetOrderInfoForAdminConfiguration());
//            modelBuilder.Configurations.Add(new VwGetOrderListForAppConfiguration());
//            modelBuilder.Configurations.Add(new VwGetShopInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwGetShopInfo2Configuration());
//            modelBuilder.Configurations.Add(new VwGetShopJzDetailConfiguration());
//            modelBuilder.Configurations.Add(new VwGetUserBalanceSummaryConfiguration());
//            modelBuilder.Configurations.Add(new VwGetUserFavShopInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwGetUserInfoConfiguration());
//            modelBuilder.Configurations.Add(new VwOrdersValidConfiguration());
//            modelBuilder.Configurations.Add(new VwShopOrderConfiguration());
//            modelBuilder.Configurations.Add(new VwShopsValidConfiguration());
//            modelBuilder.Configurations.Add(new VwSysMsgConfiguration());
//            modelBuilder.Configurations.Add(new VwUser2DeviceConfiguration());
//            modelBuilder.Configurations.Add(new VwUserBalanceSummaryConfiguration());
//            modelBuilder.Configurations.Add(new VwValidOrderConfiguration());
//            modelBuilder.Configurations.Add(new VwValidShopConfiguration());
//            modelBuilder.Configurations.Add(new VwviewtelConfiguration());
//        }

//        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
//        {
//            modelBuilder.Configurations.Add(new AdminAccConfiguration(schema));
//            modelBuilder.Configurations.Add(new AdvConfiguration(schema));
//            modelBuilder.Configurations.Add(new AdvsearchConfiguration(schema));
//            modelBuilder.Configurations.Add(new AppUserInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new AppUserSettingConfiguration(schema));
//            modelBuilder.Configurations.Add(new AppUserToDeviceConfiguration(schema));
//            modelBuilder.Configurations.Add(new BlocklistConfiguration(schema));
//            modelBuilder.Configurations.Add(new CashreturnConfiguration(schema));
//            modelBuilder.Configurations.Add(new CommissionConfiguration(schema));
//            modelBuilder.Configurations.Add(new CreditCardConfiguration(schema));
//            modelBuilder.Configurations.Add(new CustomerReviewConfiguration(schema));
//            modelBuilder.Configurations.Add(new DeliveryAddrConfiguration(schema));
//            modelBuilder.Configurations.Add(new DeviceinfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new FavouriteConfiguration(schema));
//            modelBuilder.Configurations.Add(new InvitefriendConfiguration(schema));
//            modelBuilder.Configurations.Add(new MemberCashConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenubasicConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuBasicTemplateConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuCatConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuCatBasicMenuConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenucattemplateConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuoptionalcatConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenuPriceConfiguration(schema));
//            modelBuilder.Configurations.Add(new MenusideorderConfiguration(schema));
//            modelBuilder.Configurations.Add(new MultilangMenuConfiguration(schema));
//            modelBuilder.Configurations.Add(new NewshopregiConfiguration(schema));
//            modelBuilder.Configurations.Add(new OnlineUserConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrdercommentConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderczConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderdeliveryConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderitemConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrdernoticeConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderoperationConfiguration(schema));
//            modelBuilder.Configurations.Add(new OrderpaymentConfiguration(schema));
//            modelBuilder.Configurations.Add(new PushNoticeQueueConfiguration(schema));
//            modelBuilder.Configurations.Add(new RecommendConfiguration(schema));
//            modelBuilder.Configurations.Add(new RecPaidAmountInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new ServiceTicketConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopDelieveryAreaConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopdeliveryCostConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopdiscountConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopExtInfoForAppConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopJzConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopJzDetailConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShoppingCartConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShoppingHolidayConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopTicketConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShoptransactiondetailConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopviewtelrecordConfiguration(schema));
//            modelBuilder.Configurations.Add(new ShopworktimeConfiguration(schema));
//            modelBuilder.Configurations.Add(new SubmenuConfiguration(schema));
//            modelBuilder.Configurations.Add(new SysdiagramConfiguration(schema));
//            modelBuilder.Configurations.Add(new SysLogConfiguration(schema));
//            modelBuilder.Configurations.Add(new SysMsgConfiguration(schema));
//            modelBuilder.Configurations.Add(new UserCreditInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new UserRegConfiguration(schema));
//            modelBuilder.Configurations.Add(new UserscoreConfiguration(schema));
//            modelBuilder.Configurations.Add(new VoucherinfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwAppUserProfileConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwCustomerreviewConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetAppDeviceInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetAppRestInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetOrderInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetOrderInfoForAdminConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetOrderListForAppConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetShopInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetShopInfo2Configuration(schema));
//            modelBuilder.Configurations.Add(new VwGetShopJzDetailConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetUserBalanceSummaryConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetUserFavShopInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwGetUserInfoConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwOrdersValidConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwShopOrderConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwShopsValidConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwSysMsgConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwUser2DeviceConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwUserBalanceSummaryConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwValidOrderConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwValidShopConfiguration(schema));
//            modelBuilder.Configurations.Add(new VwviewtelConfiguration(schema));
//            return modelBuilder;
//        }
        
//        // Stored Procedures
//        public int AddToBlockList(string orderid, string reason, string operateid)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var reasonParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reason", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = reason, Size = 500 };
//            if (reasonParam.Value == null)
//                reasonParam.Value = System.DBNull.Value;

//            var operateidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operateid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = operateid, Size = 50 };
//            if (operateidParam.Value == null)
//                operateidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[ADDToBlockList] @orderid, @reason, @operateid", orderidParam, reasonParam, operateidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int CancelOrders(string orderid, string isCancelled, System.DateTime? orderCancelledDt, string cancelComments)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var isCancelledParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isCancelled", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isCancelled, Size = 1 };
//            if (isCancelledParam.Value == null)
//                isCancelledParam.Value = System.DBNull.Value;

//            var orderCancelledDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderCancelledDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = orderCancelledDt.GetValueOrDefault() };
//            if (!orderCancelledDt.HasValue)
//                orderCancelledDtParam.Value = System.DBNull.Value;

//            var cancelCommentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cancelComments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cancelComments, Size = 300 };
//            if (cancelCommentsParam.Value == null)
//                cancelCommentsParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[CancelOrders] @orderid, @isCancelled, @orderCancelledDT, @cancelComments", orderidParam, isCancelledParam, orderCancelledDtParam, cancelCommentsParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int DeleAppDevice(int? deviceid)
//        {
//            var deviceidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deviceid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = deviceid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!deviceid.HasValue)
//                deviceidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[deleAppDevice] @deviceid", deviceidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int Deleapprestanduser(int? shopid)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[deleapprestanduser] @shopid", shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int Deletejz(int? jzid)
//        {
//            var jzidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@jzid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = jzid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!jzid.HasValue)
//                jzidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[deletejz] @jzid", jzidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int GetAdvByCondition(string pc, string tn)
//        {
//            var pcParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pc, Size = 10 };
//            if (pcParam.Value == null)
//                pcParam.Value = System.DBNull.Value;

//            var tnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tn", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tn, Size = 100 };
//            if (tnParam.Value == null)
//                tnParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[GetAdvByCondition] @pc, @tn", pcParam, tnParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int GetOrdersByCondition(string sqlwhere)
//        {
//            var sqlwhereParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sqlwhere", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sqlwhere, Size = 2000 };
//            if (sqlwhereParam.Value == null)
//                sqlwhereParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[GetOrdersByCondition] @sqlwhere", sqlwhereParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int GetOrdersByUid(int? uid, int? shopid, string dtsql)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var dtsqlParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@dtsql", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = dtsql, Size = 500 };
//            if (dtsqlParam.Value == null)
//                dtsqlParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[GetOrdersByUID] @uid, @shopid, @dtsql", uidParam, shopidParam, dtsqlParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int GetOrdersByUser(string email, int? shopid, string dtsql)
//        {
//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var dtsqlParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@dtsql", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = dtsql, Size = 500 };
//            if (dtsqlParam.Value == null)
//                dtsqlParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[GetOrdersByUser] @email, @shopid, @dtsql", emailParam, shopidParam, dtsqlParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode)
//        {
//            int procResult;
//            return GetShopByPostCode(postcode, out procResult);
//        }

//        public System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode, out int procResult)
//        {
//            var postcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode, Size = 15 };
//            if (postcodeParam.Value == null)
//                postcodeParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<GetShopByPostCodeReturnModel>("EXEC @procResult = [dbo].[GetShopByPostCode] @postcode", postcodeParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int GetShopByTownName(string sn, string tn)
//        {
//            var snParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sn", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sn, Size = 100 };
//            if (snParam.Value == null)
//                snParam.Value = System.DBNull.Value;

//            var tnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tn", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tn, Size = 100 };
//            if (tnParam.Value == null)
//                tnParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[GetShopByTownName] @sn, @tn", snParam, tnParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int ImportCatFromTempl(int? shopid, string cats)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var catsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cats", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cats, Size = 1000 };
//            if (catsParam.Value == null)
//                catsParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[ImportCatFromTempl] @shopid, @cats", shopidParam, catsParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int ImportPlFromTempl(int? shopid, string pls, string plcat)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var plsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pls", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pls, Size = 1000 };
//            if (plsParam.Value == null)
//                plsParam.Value = System.DBNull.Value;

//            var plcatParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@plcat", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = plcat, Size = 1 };
//            if (plcatParam.Value == null)
//                plcatParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[ImportPLFromTempl] @shopid, @pls, @plcat", shopidParam, plsParam, plcatParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int IsInBlockList(string orderid, out string ret)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var retParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ret", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Output, Size = 1 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[IsInBlockList] @orderid, @ret OUTPUT", orderidParam, retParam, procResultParam);
//            if (IsSqlParameterNull(retParam))
//                ret = default(string);
//            else
//                ret = (string) retParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int JzDetail(System.DateTime? frdt, System.DateTime? todt, int? shopid, decimal? stdcommrate, int? jzid, out string ret)
//        {
//            var frdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@frdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = frdt.GetValueOrDefault() };
//            if (!frdt.HasValue)
//                frdtParam.Value = System.DBNull.Value;

//            var todtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@todt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = todt.GetValueOrDefault() };
//            if (!todt.HasValue)
//                todtParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var stdcommrateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@stdcommrate", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = stdcommrate.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!stdcommrate.HasValue)
//                stdcommrateParam.Value = System.DBNull.Value;

//            var jzidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@jzid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = jzid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!jzid.HasValue)
//                jzidParam.Value = System.DBNull.Value;

//            var retParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ret", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 50 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[JZDetail] @frdt, @todt, @shopid, @stdcommrate, @jzid, @ret OUTPUT", frdtParam, todtParam, shopidParam, stdcommrateParam, jzidParam, retParam, procResultParam);
//            if (IsSqlParameterNull(retParam))
//                ret = default(string);
//            else
//                ret = (string) retParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int JzDetailtmp(System.DateTime? frdt, System.DateTime? todt, int? shopid, int? jzid, out string ret)
//        {
//            var frdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@frdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = frdt.GetValueOrDefault() };
//            if (!frdt.HasValue)
//                frdtParam.Value = System.DBNull.Value;

//            var todtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@todt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = todt.GetValueOrDefault() };
//            if (!todt.HasValue)
//                todtParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var jzidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@jzid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = jzid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!jzid.HasValue)
//                jzidParam.Value = System.DBNull.Value;

//            var retParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ret", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 50 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[JZDetailtmp] @frdt, @todt, @shopid, @jzid, @ret OUTPUT", frdtParam, todtParam, shopidParam, jzidParam, retParam, procResultParam);
//            if (IsSqlParameterNull(retParam))
//                ret = default(string);
//            else
//                ret = (string) retParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int PfSysPageControl(string tableName, string tableFields, string sqlWhere, string orderFields, int? pageSize, int? pageIndex, out int? totalPage)
//        {
//            var tableNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tableName", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = tableName, Size = 500 };
//            if (tableNameParam.Value == null)
//                tableNameParam.Value = System.DBNull.Value;

//            var tableFieldsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tableFields", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = tableFields, Size = 5000 };
//            if (tableFieldsParam.Value == null)
//                tableFieldsParam.Value = System.DBNull.Value;

//            var sqlWhereParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sqlWhere", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = sqlWhere, Size = 5000 };
//            if (sqlWhereParam.Value == null)
//                sqlWhereParam.Value = System.DBNull.Value;

//            var orderFieldsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderFields", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = orderFields, Size = 5000 };
//            if (orderFieldsParam.Value == null)
//                orderFieldsParam.Value = System.DBNull.Value;

//            var pageSizeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pageSize", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pageSize.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!pageSize.HasValue)
//                pageSizeParam.Value = System.DBNull.Value;

//            var pageIndexParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pageIndex", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pageIndex.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!pageIndex.HasValue)
//                pageIndexParam.Value = System.DBNull.Value;

//            var totalPageParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@totalPage", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[PF_Sys_PageControl] @tableName, @tableFields, @sqlWhere, @orderFields, @pageSize, @pageIndex, @totalPage OUTPUT", tableNameParam, tableFieldsParam, sqlWhereParam, orderFieldsParam, pageSizeParam, pageIndexParam, totalPageParam, procResultParam);
//            if (IsSqlParameterNull(totalPageParam))
//                totalPage = null;
//            else
//                totalPage = (int) totalPageParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int PfSysPageControl2000(string tablename, string tableFields, int? pageIndex, int? pageSize, string sqlWhere, string orderFields, bool? intOrder, out int? totalPage)
//        {
//            var tablenameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tablename", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = tablename, Size = 200 };
//            if (tablenameParam.Value == null)
//                tablenameParam.Value = System.DBNull.Value;

//            var tableFieldsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tableFields", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = tableFields, Size = 200 };
//            if (tableFieldsParam.Value == null)
//                tableFieldsParam.Value = System.DBNull.Value;

//            var pageIndexParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@PageIndex", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pageIndex.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!pageIndex.HasValue)
//                pageIndexParam.Value = System.DBNull.Value;

//            var pageSizeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pageSize", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pageSize.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!pageSize.HasValue)
//                pageSizeParam.Value = System.DBNull.Value;

//            var sqlWhereParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sqlWhere", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = sqlWhere, Size = 100 };
//            if (sqlWhereParam.Value == null)
//                sqlWhereParam.Value = System.DBNull.Value;

//            var orderFieldsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderFields", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = orderFields, Size = 100 };
//            if (orderFieldsParam.Value == null)
//                orderFieldsParam.Value = System.DBNull.Value;

//            var intOrderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@intOrder", SqlDbType = System.Data.SqlDbType.Bit, Direction = System.Data.ParameterDirection.Input, Value = intOrder.GetValueOrDefault() };
//            if (!intOrder.HasValue)
//                intOrderParam.Value = System.DBNull.Value;

//            var totalPageParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@totalPage", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[PF_Sys_PageControl2000] @tablename, @tableFields, @PageIndex, @pageSize, @sqlWhere, @orderFields, @intOrder, @totalPage OUTPUT", tablenameParam, tableFieldsParam, pageIndexParam, pageSizeParam, sqlWhereParam, orderFieldsParam, intOrderParam, totalPageParam, procResultParam);
//            if (IsSqlParameterNull(totalPageParam))
//                totalPage = null;
//            else
//                totalPage = (int) totalPageParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAdminAccAdd(string loginname, string loginpwd, System.DateTime? createtime, string rightcode, string isvalid, string isadmin)
//        {
//            var loginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginname, Size = 50 };
//            if (loginnameParam.Value == null)
//                loginnameParam.Value = System.DBNull.Value;

//            var loginpwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginpwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginpwd, Size = 100 };
//            if (loginpwdParam.Value == null)
//                loginpwdParam.Value = System.DBNull.Value;

//            var createtimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createtime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createtime.GetValueOrDefault() };
//            if (!createtime.HasValue)
//                createtimeParam.Value = System.DBNull.Value;

//            var rightcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@rightcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = rightcode, Size = 1000 };
//            if (rightcodeParam.Value == null)
//                rightcodeParam.Value = System.DBNull.Value;

//            var isvalidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isvalid", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isvalid, Size = 1 };
//            if (isvalidParam.Value == null)
//                isvalidParam.Value = System.DBNull.Value;

//            var isadminParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isadmin", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isadmin, Size = 1 };
//            if (isadminParam.Value == null)
//                isadminParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_adminAcc_ADD] @loginname, @loginpwd, @createtime, @rightcode, @isvalid, @isadmin", loginnameParam, loginpwdParam, createtimeParam, rightcodeParam, isvalidParam, isadminParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAdminAccUpdate(string loginname, string loginpwd, string rightcode, string isvalid, string isadmin)
//        {
//            var loginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginname, Size = 50 };
//            if (loginnameParam.Value == null)
//                loginnameParam.Value = System.DBNull.Value;

//            var loginpwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginpwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginpwd, Size = 100 };
//            if (loginpwdParam.Value == null)
//                loginpwdParam.Value = System.DBNull.Value;

//            var rightcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@rightcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = rightcode, Size = 1000 };
//            if (rightcodeParam.Value == null)
//                rightcodeParam.Value = System.DBNull.Value;

//            var isvalidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isvalid", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isvalid, Size = 1 };
//            if (isvalidParam.Value == null)
//                isvalidParam.Value = System.DBNull.Value;

//            var isadminParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isadmin", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isadmin, Size = 1 };
//            if (isadminParam.Value == null)
//                isadminParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_adminAcc_Update] @loginname, @loginpwd, @rightcode, @isvalid, @isadmin", loginnameParam, loginpwdParam, rightcodeParam, isvalidParam, isadminParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAdvpicAdd(int? advid, string pc, string townname, int? shopid, string shoploginname, System.DateTime? starttime, System.DateTime? endtime, string urllink, string advPic, int? indexno, int? clicknum)
//        {
//            var advidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@advid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = advid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!advid.HasValue)
//                advidParam.Value = System.DBNull.Value;

//            var pcParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pc, Size = 10 };
//            if (pcParam.Value == null)
//                pcParam.Value = System.DBNull.Value;

//            var townnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@townname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = townname, Size = 50 };
//            if (townnameParam.Value == null)
//                townnameParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var shoploginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shoploginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = shoploginname, Size = 20 };
//            if (shoploginnameParam.Value == null)
//                shoploginnameParam.Value = System.DBNull.Value;

//            var starttimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@starttime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = starttime.GetValueOrDefault() };
//            if (!starttime.HasValue)
//                starttimeParam.Value = System.DBNull.Value;

//            var endtimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@endtime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = endtime.GetValueOrDefault() };
//            if (!endtime.HasValue)
//                endtimeParam.Value = System.DBNull.Value;

//            var urllinkParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@urllink", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = urllink, Size = 300 };
//            if (urllinkParam.Value == null)
//                urllinkParam.Value = System.DBNull.Value;

//            var advPicParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@advPic", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = advPic, Size = 100 };
//            if (advPicParam.Value == null)
//                advPicParam.Value = System.DBNull.Value;

//            var indexnoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexno", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = indexno.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!indexno.HasValue)
//                indexnoParam.Value = System.DBNull.Value;

//            var clicknumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@clicknum", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = clicknum.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!clicknum.HasValue)
//                clicknumParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_advpic_ADD] @advid, @pc, @townname, @shopid, @shoploginname, @starttime, @endtime, @urllink, @advPic, @indexno, @clicknum", advidParam, pcParam, townnameParam, shopidParam, shoploginnameParam, starttimeParam, endtimeParam, urllinkParam, advPicParam, indexnoParam, clicknumParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAdvsearchAdd(string postcode, int? indexno, string shopid, System.DateTime? startdt, System.DateTime? enddt, System.DateTime? createdt, string createuser)
//        {
//            var postcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode, Size = 10 };
//            if (postcodeParam.Value == null)
//                postcodeParam.Value = System.DBNull.Value;

//            var indexnoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexno", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = indexno.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!indexno.HasValue)
//                indexnoParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = shopid, Size = 50 };
//            if (shopidParam.Value == null)
//                shopidParam.Value = System.DBNull.Value;

//            var startdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@startdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = startdt.GetValueOrDefault() };
//            if (!startdt.HasValue)
//                startdtParam.Value = System.DBNull.Value;

//            var enddtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@enddt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = enddt.GetValueOrDefault() };
//            if (!enddt.HasValue)
//                enddtParam.Value = System.DBNull.Value;

//            var createdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createdt.GetValueOrDefault() };
//            if (!createdt.HasValue)
//                createdtParam.Value = System.DBNull.Value;

//            var createuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = createuser, Size = 50 };
//            if (createuserParam.Value == null)
//                createuserParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_advsearch_ADD] @postcode, @indexno, @shopid, @startdt, @enddt, @createdt, @createuser", postcodeParam, indexnoParam, shopidParam, startdtParam, enddtParam, createdtParam, createuserParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAppUserAdd(int? shopid, string password, string usertype, string username, string status, System.DateTime? createdt, string createuser, string loginstatus, out int? appuserid)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var passwordParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@password", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = password, Size = 100 };
//            if (passwordParam.Value == null)
//                passwordParam.Value = System.DBNull.Value;

//            var usertypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@usertype", SqlDbType = System.Data.SqlDbType.NChar, Direction = System.Data.ParameterDirection.Input, Value = usertype, Size = 1 };
//            if (usertypeParam.Value == null)
//                usertypeParam.Value = System.DBNull.Value;

//            var usernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@username", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = username, Size = 100 };
//            if (usernameParam.Value == null)
//                usernameParam.Value = System.DBNull.Value;

//            var statusParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@status", SqlDbType = System.Data.SqlDbType.NChar, Direction = System.Data.ParameterDirection.Input, Value = status, Size = 1 };
//            if (statusParam.Value == null)
//                statusParam.Value = System.DBNull.Value;

//            var createdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createdt.GetValueOrDefault() };
//            if (!createdt.HasValue)
//                createdtParam.Value = System.DBNull.Value;

//            var createuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = createuser, Size = 100 };
//            if (createuserParam.Value == null)
//                createuserParam.Value = System.DBNull.Value;

//            var loginstatusParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginstatus", SqlDbType = System.Data.SqlDbType.NChar, Direction = System.Data.ParameterDirection.Input, Value = loginstatus, Size = 1 };
//            if (loginstatusParam.Value == null)
//                loginstatusParam.Value = System.DBNull.Value;

//            var appuseridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@appuserid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_AppUser_ADD] @shopid, @password, @usertype, @username, @status, @createdt, @createuser, @loginstatus, @appuserid OUTPUT", shopidParam, passwordParam, usertypeParam, usernameParam, statusParam, createdtParam, createuserParam, loginstatusParam, appuseridParam, procResultParam);
//            if (IsSqlParameterNull(appuseridParam))
//                appuserid = null;
//            else
//                appuserid = (int) appuseridParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAppuserExit(string apptokenstr)
//        {
//            var apptokenstrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@apptokenstr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = apptokenstr, Size = 100 };
//            if (apptokenstrParam.Value == null)
//                apptokenstrParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_Appuser_Exit] @apptokenstr", apptokenstrParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAppUserLogin(string loginname, string loginip, string apptokenstr, string devicetoken)
//        {
//            var loginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginname, Size = 100 };
//            if (loginnameParam.Value == null)
//                loginnameParam.Value = System.DBNull.Value;

//            var loginipParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginip", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = loginip, Size = 50 };
//            if (loginipParam.Value == null)
//                loginipParam.Value = System.DBNull.Value;

//            var apptokenstrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@apptokenstr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = apptokenstr, Size = 100 };
//            if (apptokenstrParam.Value == null)
//                apptokenstrParam.Value = System.DBNull.Value;

//            var devicetokenParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@devicetoken", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = devicetoken, Size = 100 };
//            if (devicetokenParam.Value == null)
//                devicetokenParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_AppUser_Login] @loginname, @loginip, @apptokenstr, @devicetoken", loginnameParam, loginipParam, apptokenstrParam, devicetokenParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpAppUserSettingAdd(string operatecode, int? appuserid)
//        {
//            var operatecodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operatecode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = operatecode, Size = 100 };
//            if (operatecodeParam.Value == null)
//                operatecodeParam.Value = System.DBNull.Value;

//            var appuseridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@appuserid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = appuserid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!appuserid.HasValue)
//                appuseridParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_AppUserSetting_ADD] @operatecode, @appuserid", operatecodeParam, appuseridParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpDeleteOrder(string orderid)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_deleteOrder] @orderid", orderidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpGetMenuInfoOfSets(int? shopid, int? mid, int? catid)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var midParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mid.HasValue)
//                midParam.Value = System.DBNull.Value;

//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_GetMenuInfoOfSets] @shopid, @mid, @catid", shopidParam, midParam, catidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public SpGetMenuInfosReturnModel SpGetMenuInfos(int? shopid, int? catid)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;


//            var procResultData = new SpGetMenuInfosReturnModel();
//            var cmd = Database.Connection.CreateCommand();
//            cmd.CommandType = System.Data.CommandType.StoredProcedure;
//            cmd.CommandText = "[dbo].[sp_GetMenuInfos]";
//            cmd.Parameters.Add(shopidParam);
//            cmd.Parameters.Add(catidParam);

//            try
//            {
//                Database.Connection.Open();
//                var reader = cmd.ExecuteReader();
//                var objectContext = ((System.Data.Entity.Infrastructure.IObjectContextAdapter) this).ObjectContext;

//                procResultData.ResultSet1 = objectContext.Translate<SpGetMenuInfosReturnModel.ResultSetModel1>(reader).ToList();
//                reader.NextResult();

//                procResultData.ResultSet2 = objectContext.Translate<SpGetMenuInfosReturnModel.ResultSetModel2>(reader).ToList();
//            }
//            finally
//            {
//                Database.Connection.Close();
//            }
//            return procResultData;
//        }

//        public SpGetPlInfoReturnModel SpGetPlInfo(string menutype1, string menutype2, int? shopid)
//        {
//            var menutype1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype1, Size = 50 };
//            if (menutype1Param.Value == null)
//                menutype1Param.Value = System.DBNull.Value;

//            var menutype2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype2, Size = 50 };
//            if (menutype2Param.Value == null)
//                menutype2Param.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;


//            var procResultData = new SpGetPlInfoReturnModel();
//            var cmd = Database.Connection.CreateCommand();
//            cmd.CommandType = System.Data.CommandType.StoredProcedure;
//            cmd.CommandText = "[dbo].[sp_GetPLInfo]";
//            cmd.Parameters.Add(menutype1Param);
//            cmd.Parameters.Add(menutype2Param);
//            cmd.Parameters.Add(shopidParam);

//            try
//            {
//                Database.Connection.Open();
//                var reader = cmd.ExecuteReader();
//                var objectContext = ((System.Data.Entity.Infrastructure.IObjectContextAdapter) this).ObjectContext;

//                procResultData.ResultSet1 = objectContext.Translate<SpGetPlInfoReturnModel.ResultSetModel1>(reader).ToList();
//                reader.NextResult();

//                procResultData.ResultSet2 = objectContext.Translate<SpGetPlInfoReturnModel.ResultSetModel2>(reader).ToList();
//            }
//            finally
//            {
//                Database.Connection.Close();
//            }
//            return procResultData;
//        }

//        public int SpMenuAdd(int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string discountway, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? createDt, string flag, decimal? indexnum, int? mealamt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var menuCatParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuCat", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuCat, Size = 30 };
//            if (menuCatParam.Value == null)
//                menuCatParam.Value = System.DBNull.Value;

//            var menuNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName, Size = 200 };
//            if (menuNameParam.Value == null)
//                menuNameParam.Value = System.DBNull.Value;

//            var menuName2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName2, Size = 200 };
//            if (menuName2Param.Value == null)
//                menuName2Param.Value = System.DBNull.Value;

//            var menuDescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuDesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuDesc, Size = 500 };
//            if (menuDescParam.Value == null)
//                menuDescParam.Value = System.DBNull.Value;

//            var menuDesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuDesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuDesc2, Size = 500 };
//            if (menuDesc2Param.Value == null)
//                menuDesc2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menutypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = menutype, Size = 1 };
//            if (menutypeParam.Value == null)
//                menutypeParam.Value = System.DBNull.Value;

//            var menulogoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menulogo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menulogo, Size = 100 };
//            if (menulogoParam.Value == null)
//                menulogoParam.Value = System.DBNull.Value;

//            var discountwayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@discountway", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = discountway, Size = 1 };
//            if (discountwayParam.Value == null)
//                discountwayParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 20 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var servicePeriodParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@servicePeriod", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = servicePeriod, Size = 1 };
//            if (servicePeriodParam.Value == null)
//                servicePeriodParam.Value = System.DBNull.Value;

//            var displayweekdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@displayweekday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = displayweekday, Size = 50 };
//            if (displayweekdayParam.Value == null)
//                displayweekdayParam.Value = System.DBNull.Value;

//            var hasSideOrderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@hasSideOrder", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = hasSideOrder, Size = 1 };
//            if (hasSideOrderParam.Value == null)
//                hasSideOrderParam.Value = System.DBNull.Value;

//            var hasPlParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@hasPL", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = hasPl, Size = 1 };
//            if (hasPlParam.Value == null)
//                hasPlParam.Value = System.DBNull.Value;

//            var createDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@CreateDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createDt.GetValueOrDefault() };
//            if (!createDt.HasValue)
//                createDtParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 50 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var mealamtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mealamt", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mealamt.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mealamt.HasValue)
//                mealamtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_menu_ADD] @shopid, @menuCat, @menuName, @menuName2, @menuDesc, @menuDesc2, @price1, @price2, @menutype, @menulogo, @discountway, @menucode, @servicePeriod, @displayweekday, @hasSideOrder, @hasPL, @CreateDT, @flag, @indexnum, @mealamt", shopidParam, menuCatParam, menuNameParam, menuName2Param, menuDescParam, menuDesc2Param, price1Param, price2Param, menutypeParam, menulogoParam, discountwayParam, menucodeParam, servicePeriodParam, displayweekdayParam, hasSideOrderParam, hasPlParam, createDtParam, flagParam, indexnumParam, mealamtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuUpdate(int? mid, int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? updateDt, string flag, decimal? indexnum, int? mealamt)
//        {
//            var midParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mid.HasValue)
//                midParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var menuCatParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuCat", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuCat, Size = 30 };
//            if (menuCatParam.Value == null)
//                menuCatParam.Value = System.DBNull.Value;

//            var menuNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName, Size = 200 };
//            if (menuNameParam.Value == null)
//                menuNameParam.Value = System.DBNull.Value;

//            var menuName2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName2, Size = 200 };
//            if (menuName2Param.Value == null)
//                menuName2Param.Value = System.DBNull.Value;

//            var menuDescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuDesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuDesc, Size = 500 };
//            if (menuDescParam.Value == null)
//                menuDescParam.Value = System.DBNull.Value;

//            var menuDesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuDesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuDesc2, Size = 500 };
//            if (menuDesc2Param.Value == null)
//                menuDesc2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menutypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = menutype, Size = 1 };
//            if (menutypeParam.Value == null)
//                menutypeParam.Value = System.DBNull.Value;

//            var menulogoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menulogo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menulogo, Size = 100 };
//            if (menulogoParam.Value == null)
//                menulogoParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 20 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var servicePeriodParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@servicePeriod", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = servicePeriod, Size = 1 };
//            if (servicePeriodParam.Value == null)
//                servicePeriodParam.Value = System.DBNull.Value;

//            var displayweekdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@displayweekday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = displayweekday, Size = 50 };
//            if (displayweekdayParam.Value == null)
//                displayweekdayParam.Value = System.DBNull.Value;

//            var hasSideOrderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@hasSideOrder", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = hasSideOrder, Size = 1 };
//            if (hasSideOrderParam.Value == null)
//                hasSideOrderParam.Value = System.DBNull.Value;

//            var hasPlParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@hasPL", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = hasPl, Size = 1 };
//            if (hasPlParam.Value == null)
//                hasPlParam.Value = System.DBNull.Value;

//            var updateDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@UpdateDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateDt.GetValueOrDefault() };
//            if (!updateDt.HasValue)
//                updateDtParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 50 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var mealamtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mealamt", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mealamt.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mealamt.HasValue)
//                mealamtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_menu_Update] @mid, @shopid, @menuCat, @menuName, @menuName2, @menuDesc, @menuDesc2, @price1, @price2, @menutype, @menulogo, @menucode, @servicePeriod, @displayweekday, @hasSideOrder, @hasPL, @UpdateDT, @flag, @indexnum, @mealamt", midParam, shopidParam, menuCatParam, menuNameParam, menuName2Param, menuDescParam, menuDesc2Param, price1Param, price2Param, menutypeParam, menulogoParam, menucodeParam, servicePeriodParam, displayweekdayParam, hasSideOrderParam, hasPlParam, updateDtParam, flagParam, indexnumParam, mealamtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuBasicAdd(int? shopid, string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var menutype1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype1, Size = 50 };
//            if (menutype1Param.Value == null)
//                menutype1Param.Value = System.DBNull.Value;

//            var menutype2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype2, Size = 100 };
//            if (menutype2Param.Value == null)
//                menutype2Param.Value = System.DBNull.Value;

//            var mnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname, Size = 100 };
//            if (mnameParam.Value == null)
//                mnameParam.Value = System.DBNull.Value;

//            var mname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname2, Size = 100 };
//            if (mname2Param.Value == null)
//                mname2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menudesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc2, Size = 50 };
//            if (menudesc2Param.Value == null)
//                menudesc2Param.Value = System.DBNull.Value;

//            var menudescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc, Size = 50 };
//            if (menudescParam.Value == null)
//                menudescParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 50 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var menu001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menu001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menu001, Size = 50 };
//            if (menu001Param.Value == null)
//                menu001Param.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuBasic_ADD] @shopid, @menutype1, @menutype2, @mname, @mname2, @price1, @price2, @menudesc2, @menudesc, @menucode, @flag, @menu001, @indexnum", shopidParam, menutype1Param, menutype2Param, mnameParam, mname2Param, price1Param, price2Param, menudesc2Param, menudescParam, menucodeParam, flagParam, menu001Param, indexnumParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuBasicDelete(int? basicmenuid, int? shopid)
//        {
//            var basicmenuidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicmenuid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicmenuid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicmenuid.HasValue)
//                basicmenuidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuBasic_Delete] @basicmenuid, @shopid", basicmenuidParam, shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuBasicUpdate(int? basicmenuid, int? shopid, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum)
//        {
//            var basicmenuidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicmenuid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicmenuid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicmenuid.HasValue)
//                basicmenuidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var mnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname, Size = 100 };
//            if (mnameParam.Value == null)
//                mnameParam.Value = System.DBNull.Value;

//            var mname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname2, Size = 100 };
//            if (mname2Param.Value == null)
//                mname2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menudesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc2, Size = 50 };
//            if (menudesc2Param.Value == null)
//                menudesc2Param.Value = System.DBNull.Value;

//            var menudescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc, Size = 50 };
//            if (menudescParam.Value == null)
//                menudescParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 50 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var menu001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menu001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menu001, Size = 50 };
//            if (menu001Param.Value == null)
//                menu001Param.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuBasic_Update] @basicmenuid, @shopid, @mname, @mname2, @price1, @price2, @menudesc2, @menudesc, @menucode, @flag, @menu001, @indexnum", basicmenuidParam, shopidParam, mnameParam, mname2Param, price1Param, price2Param, menudesc2Param, menudescParam, menucodeParam, flagParam, menu001Param, indexnumParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuBasicTemplateAdd(string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001)
//        {
//            var menutype1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype1, Size = 50 };
//            if (menutype1Param.Value == null)
//                menutype1Param.Value = System.DBNull.Value;

//            var menutype2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype2, Size = 100 };
//            if (menutype2Param.Value == null)
//                menutype2Param.Value = System.DBNull.Value;

//            var mnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname, Size = 100 };
//            if (mnameParam.Value == null)
//                mnameParam.Value = System.DBNull.Value;

//            var mname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname2, Size = 100 };
//            if (mname2Param.Value == null)
//                mname2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menudesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc2, Size = 50 };
//            if (menudesc2Param.Value == null)
//                menudesc2Param.Value = System.DBNull.Value;

//            var menudescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc, Size = 50 };
//            if (menudescParam.Value == null)
//                menudescParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 50 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var menu001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menu001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menu001, Size = 50 };
//            if (menu001Param.Value == null)
//                menu001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuBasicTemplate_ADD] @menutype1, @menutype2, @mname, @mname2, @price1, @price2, @menudesc2, @menudesc, @menucode, @flag, @menu001", menutype1Param, menutype2Param, mnameParam, mname2Param, price1Param, price2Param, menudesc2Param, menudescParam, menucodeParam, flagParam, menu001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuBasicTemplateUpdate(int? basicmenuid, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001)
//        {
//            var basicmenuidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicmenuid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicmenuid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicmenuid.HasValue)
//                basicmenuidParam.Value = System.DBNull.Value;

//            var mname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@mname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mname2, Size = 100 };
//            if (mname2Param.Value == null)
//                mname2Param.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var price2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price2", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = price2.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!price2.HasValue)
//                price2Param.Value = System.DBNull.Value;

//            var menudesc2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc2, Size = 50 };
//            if (menudesc2Param.Value == null)
//                menudesc2Param.Value = System.DBNull.Value;

//            var menudescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menudesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menudesc, Size = 50 };
//            if (menudescParam.Value == null)
//                menudescParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 50 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var menu001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menu001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menu001, Size = 50 };
//            if (menu001Param.Value == null)
//                menu001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuBasicTemplate_Update] @basicmenuid, @mname2, @price1, @price2, @menudesc2, @menudesc, @menucode, @flag, @menu001", basicmenuidParam, mname2Param, price1Param, price2Param, menudesc2Param, menudescParam, menucodeParam, flagParam, menu001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuCatBasicMenuUpdate(int? catid, int? shopid, string menutype1, string menutype2, string basicmenuids)
//        {
//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var menutype1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype1, Size = 50 };
//            if (menutype1Param.Value == null)
//                menutype1Param.Value = System.DBNull.Value;

//            var menutype2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menutype2, Size = 50 };
//            if (menutype2Param.Value == null)
//                menutype2Param.Value = System.DBNull.Value;

//            var basicmenuidsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicmenuids", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = basicmenuids, Size = 3000 };
//            if (basicmenuidsParam.Value == null)
//                basicmenuidsParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_menuCatBasicMenu_Update] @catid, @shopid, @menutype1, @menutype2, @basicmenuids", catidParam, shopidParam, menutype1Param, menutype2Param, basicmenuidsParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenucattemplateAdd(decimal? indexnum, string catname, string catname2, string cat001)
//        {
//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 7, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var catnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catname, Size = 100 };
//            if (catnameParam.Value == null)
//                catnameParam.Value = System.DBNull.Value;

//            var catname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@catname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catname2, Size = 100 };
//            if (catname2Param.Value == null)
//                catname2Param.Value = System.DBNull.Value;

//            var cat001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@cat001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cat001, Size = 50 };
//            if (cat001Param.Value == null)
//                cat001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_menucattemplate_ADD] @indexnum, @catname, @catname2, @cat001", indexnumParam, catnameParam, catname2Param, cat001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenucattemplateUpdate(int? catid, decimal? indexnum, string catname, string catname2, string cat001)
//        {
//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 7, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var catnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catname, Size = 100 };
//            if (catnameParam.Value == null)
//                catnameParam.Value = System.DBNull.Value;

//            var catname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@catname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catname2, Size = 100 };
//            if (catname2Param.Value == null)
//                catname2Param.Value = System.DBNull.Value;

//            var cat001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@cat001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cat001, Size = 50 };
//            if (cat001Param.Value == null)
//                cat001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_menucattemplate_Update] @catid, @indexnum, @catname, @catname2, @cat001", catidParam, indexnumParam, catnameParam, catname2Param, cat001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuOptionCatAdd(int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var optionnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optionname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optionname, Size = 100 };
//            if (optionnameParam.Value == null)
//                optionnameParam.Value = System.DBNull.Value;

//            var optionname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@optionname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optionname2, Size = 100 };
//            if (optionname2Param.Value == null)
//                optionname2Param.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var optiondescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optiondesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optiondesc, Size = 300 };
//            if (optiondescParam.Value == null)
//                optiondescParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuOptionCat_ADD] @shopid, @optionname, @optionname2, @flag, @indexnum, @optiondesc", shopidParam, optionnameParam, optionname2Param, flagParam, indexnumParam, optiondescParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuOptionCatDelete(int? optioncatid, int? shopid)
//        {
//            var optioncatidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optioncatid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = optioncatid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!optioncatid.HasValue)
//                optioncatidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuOptionCat_Delete] @optioncatid, @shopid", optioncatidParam, shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMenuOptionCatUpdate(decimal? optioncatid, int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc)
//        {
//            var optioncatidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optioncatid", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = optioncatid.GetValueOrDefault(), Precision = 18, Scale = 1 };
//            if (!optioncatid.HasValue)
//                optioncatidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var optionnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optionname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optionname, Size = 100 };
//            if (optionnameParam.Value == null)
//                optionnameParam.Value = System.DBNull.Value;

//            var optionname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@optionname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optionname2, Size = 100 };
//            if (optionname2Param.Value == null)
//                optionname2Param.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var optiondescParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@optiondesc", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = optiondesc, Size = 300 };
//            if (optiondescParam.Value == null)
//                optiondescParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_MenuOptionCat_Update] @optioncatid, @shopid, @optionname, @optionname2, @flag, @indexnum, @optiondesc", optioncatidParam, shopidParam, optionnameParam, optionname2Param, flagParam, indexnumParam, optiondescParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpMultilangmenuAdd(string menuname, string name1, string name2, string name3, string name4, string name5, string name6, string name7)
//        {
//            var menunameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuname, Size = 100 };
//            if (menunameParam.Value == null)
//                menunameParam.Value = System.DBNull.Value;

//            var name1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name1, Size = 100 };
//            if (name1Param.Value == null)
//                name1Param.Value = System.DBNull.Value;

//            var name2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name2, Size = 100 };
//            if (name2Param.Value == null)
//                name2Param.Value = System.DBNull.Value;

//            var name3Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name3", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name3, Size = 100 };
//            if (name3Param.Value == null)
//                name3Param.Value = System.DBNull.Value;

//            var name4Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name4", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name4, Size = 100 };
//            if (name4Param.Value == null)
//                name4Param.Value = System.DBNull.Value;

//            var name5Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name5", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name5, Size = 100 };
//            if (name5Param.Value == null)
//                name5Param.Value = System.DBNull.Value;

//            var name6Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name6", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name6, Size = 100 };
//            if (name6Param.Value == null)
//                name6Param.Value = System.DBNull.Value;

//            var name7Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name7", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name7, Size = 100 };
//            if (name7Param.Value == null)
//                name7Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_multilangmenu_ADD] @menuname, @name1, @name2, @name3, @name4, @name5, @name6, @name7", menunameParam, name1Param, name2Param, name3Param, name4Param, name5Param, name6Param, name7Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpOrderdeliveryAdd(string orderid, string addr1, string addr2, string addr3, string townname, string postcode1, string postcode2, string contactname, string tel1, string tel2, System.DateTime? deliverdt, string deliverpeople, string comments)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var addr2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr2, Size = 100 };
//            if (addr2Param.Value == null)
//                addr2Param.Value = System.DBNull.Value;

//            var addr3Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr3", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr3, Size = 100 };
//            if (addr3Param.Value == null)
//                addr3Param.Value = System.DBNull.Value;

//            var townnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@townname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = townname, Size = 100 };
//            if (townnameParam.Value == null)
//                townnameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 10 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 10 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var contactnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactname, Size = 50 };
//            if (contactnameParam.Value == null)
//                contactnameParam.Value = System.DBNull.Value;

//            var tel1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel1, Size = 50 };
//            if (tel1Param.Value == null)
//                tel1Param.Value = System.DBNull.Value;

//            var tel2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel2, Size = 50 };
//            if (tel2Param.Value == null)
//                tel2Param.Value = System.DBNull.Value;

//            var deliverdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deliverdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = deliverdt.GetValueOrDefault() };
//            if (!deliverdt.HasValue)
//                deliverdtParam.Value = System.DBNull.Value;

//            var deliverpeopleParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deliverpeople", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = deliverpeople, Size = 50 };
//            if (deliverpeopleParam.Value == null)
//                deliverpeopleParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 300 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_orderdelivery_ADD] @orderid, @addr1, @addr2, @addr3, @townname, @postcode1, @postcode2, @contactname, @tel1, @tel2, @deliverdt, @deliverpeople, @comments", orderidParam, addr1Param, addr2Param, addr3Param, townnameParam, postcode1Param, postcode2Param, contactnameParam, tel1Param, tel2Param, deliverdtParam, deliverpeopleParam, commentsParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpOrderitemAdd(string orderid, int? mid, int? submenuid, string menucode, string menuName, string menuNameE, string menuName2, string menuName2E, int? amount, decimal? price1, decimal? discountprice, decimal? totalprice, string menulogo, string menutype)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var midParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mid.HasValue)
//                midParam.Value = System.DBNull.Value;

//            var submenuidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@submenuid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = submenuid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!submenuid.HasValue)
//                submenuidParam.Value = System.DBNull.Value;

//            var menucodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menucode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menucode, Size = 20 };
//            if (menucodeParam.Value == null)
//                menucodeParam.Value = System.DBNull.Value;

//            var menuNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName, Size = 200 };
//            if (menuNameParam.Value == null)
//                menuNameParam.Value = System.DBNull.Value;

//            var menuNameEParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuNameE", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuNameE, Size = 500 };
//            if (menuNameEParam.Value == null)
//                menuNameEParam.Value = System.DBNull.Value;

//            var menuName2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName2, Size = 200 };
//            if (menuName2Param.Value == null)
//                menuName2Param.Value = System.DBNull.Value;

//            var menuName2EParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menuName2E", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuName2E, Size = 500 };
//            if (menuName2EParam.Value == null)
//                menuName2EParam.Value = System.DBNull.Value;

//            var amountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@amount", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = amount.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!amount.HasValue)
//                amountParam.Value = System.DBNull.Value;

//            var price1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@price1", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = price1.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!price1.HasValue)
//                price1Param.Value = System.DBNull.Value;

//            var discountpriceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@discountprice", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = discountprice.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!discountprice.HasValue)
//                discountpriceParam.Value = System.DBNull.Value;

//            var totalpriceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@totalprice", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = totalprice.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!totalprice.HasValue)
//                totalpriceParam.Value = System.DBNull.Value;

//            var menulogoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menulogo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menulogo, Size = 100 };
//            if (menulogoParam.Value == null)
//                menulogoParam.Value = System.DBNull.Value;

//            var menutypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@menutype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = menutype, Size = 1 };
//            if (menutypeParam.Value == null)
//                menutypeParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_orderitem_ADD] @orderid, @mid, @submenuid, @menucode, @menuName, @menuNameE, @menuName2, @menuName2E, @amount, @price1, @discountprice, @totalprice, @menulogo, @menutype", orderidParam, midParam, submenuidParam, menucodeParam, menuNameParam, menuNameEParam, menuName2Param, menuName2EParam, amountParam, price1Param, discountpriceParam, totalpriceParam, menulogoParam, menutypeParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpOrderpaymentAdd(string orderid, string cardnumber, string cardtype, string name1, string name2, System.DateTime? paidtime, System.DateTime? applytime, decimal? paidamount, string isret)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var cardnumberParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardnumber", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cardnumber, Size = 50 };
//            if (cardnumberParam.Value == null)
//                cardnumberParam.Value = System.DBNull.Value;

//            var cardtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = cardtype, Size = 1 };
//            if (cardtypeParam.Value == null)
//                cardtypeParam.Value = System.DBNull.Value;

//            var name1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name1, Size = 50 };
//            if (name1Param.Value == null)
//                name1Param.Value = System.DBNull.Value;

//            var name2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@name2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = name2, Size = 50 };
//            if (name2Param.Value == null)
//                name2Param.Value = System.DBNull.Value;

//            var paidtimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@paidtime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = paidtime.GetValueOrDefault() };
//            if (!paidtime.HasValue)
//                paidtimeParam.Value = System.DBNull.Value;

//            var applytimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@applytime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = applytime.GetValueOrDefault() };
//            if (!applytime.HasValue)
//                applytimeParam.Value = System.DBNull.Value;

//            var paidamountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@paidamount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = paidamount.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!paidamount.HasValue)
//                paidamountParam.Value = System.DBNull.Value;

//            var isretParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isret", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isret, Size = 1 };
//            if (isretParam.Value == null)
//                isretParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_orderpayment_ADD] @orderid, @cardnumber, @cardtype, @name1, @name2, @paidtime, @applytime, @paidamount, @isret", orderidParam, cardnumberParam, cardtypeParam, name1Param, name2Param, paidtimeParam, applytimeParam, paidamountParam, isretParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpOrdersAdd(out string orderId, int? shopid, int? uid, string useremail, string payway, string ispaid, string ticketnumber, int? ticketvalue, string deliveryway, string comments, string orderstatus, System.DateTime? ordercreatedt, string isCancelled, decimal? totalprice1, decimal? discountRate, decimal? afterdiscount, decimal? deliverycharge, decimal? serviceCharge, decimal? creditcardCharge, decimal? tips, string isjz, decimal? totalamount, string userIp, System.DateTime? pickupdt, decimal? commrate, string isnew, decimal? shopcardcharge, decimal? paidwithcredit, string vouchercode)
//        {
//            var orderIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@OrderID", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 30 };
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var useremailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@useremail", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = useremail, Size = 100 };
//            if (useremailParam.Value == null)
//                useremailParam.Value = System.DBNull.Value;

//            var paywayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@payway", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = payway, Size = 1 };
//            if (paywayParam.Value == null)
//                paywayParam.Value = System.DBNull.Value;

//            var ispaidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ispaid", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = ispaid, Size = 1 };
//            if (ispaidParam.Value == null)
//                ispaidParam.Value = System.DBNull.Value;

//            var ticketnumberParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ticketnumber", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = ticketnumber, Size = 50 };
//            if (ticketnumberParam.Value == null)
//                ticketnumberParam.Value = System.DBNull.Value;

//            var ticketvalueParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ticketvalue", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = ticketvalue.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!ticketvalue.HasValue)
//                ticketvalueParam.Value = System.DBNull.Value;

//            var deliverywayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deliveryway", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = deliveryway, Size = 1 };
//            if (deliverywayParam.Value == null)
//                deliverywayParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 500 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var orderstatusParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderstatus", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderstatus, Size = 50 };
//            if (orderstatusParam.Value == null)
//                orderstatusParam.Value = System.DBNull.Value;

//            var ordercreatedtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ordercreatedt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = ordercreatedt.GetValueOrDefault() };
//            if (!ordercreatedt.HasValue)
//                ordercreatedtParam.Value = System.DBNull.Value;

//            var isCancelledParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isCancelled", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isCancelled, Size = 1 };
//            if (isCancelledParam.Value == null)
//                isCancelledParam.Value = System.DBNull.Value;

//            var totalprice1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@totalprice1", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = totalprice1.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!totalprice1.HasValue)
//                totalprice1Param.Value = System.DBNull.Value;

//            var discountRateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@discountRate", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = discountRate.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!discountRate.HasValue)
//                discountRateParam.Value = System.DBNull.Value;

//            var afterdiscountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@afterdiscount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = afterdiscount.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!afterdiscount.HasValue)
//                afterdiscountParam.Value = System.DBNull.Value;

//            var deliverychargeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deliverycharge", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = deliverycharge.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!deliverycharge.HasValue)
//                deliverychargeParam.Value = System.DBNull.Value;

//            var serviceChargeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@serviceCharge", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = serviceCharge.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!serviceCharge.HasValue)
//                serviceChargeParam.Value = System.DBNull.Value;

//            var creditcardChargeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@creditcardCharge", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = creditcardCharge.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!creditcardCharge.HasValue)
//                creditcardChargeParam.Value = System.DBNull.Value;

//            var tipsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tips", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = tips.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!tips.HasValue)
//                tipsParam.Value = System.DBNull.Value;

//            var isjzParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isjz", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isjz, Size = 1 };
//            if (isjzParam.Value == null)
//                isjzParam.Value = System.DBNull.Value;

//            var totalamountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@totalamount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = totalamount.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!totalamount.HasValue)
//                totalamountParam.Value = System.DBNull.Value;

//            var userIpParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@userIP", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = userIp, Size = 100 };
//            if (userIpParam.Value == null)
//                userIpParam.Value = System.DBNull.Value;

//            var pickupdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pickupdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = pickupdt.GetValueOrDefault() };
//            if (!pickupdt.HasValue)
//                pickupdtParam.Value = System.DBNull.Value;

//            var commrateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@commrate", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = commrate.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!commrate.HasValue)
//                commrateParam.Value = System.DBNull.Value;

//            var isnewParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isnew", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isnew, Size = 1 };
//            if (isnewParam.Value == null)
//                isnewParam.Value = System.DBNull.Value;

//            var shopcardchargeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopcardcharge", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = shopcardcharge.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!shopcardcharge.HasValue)
//                shopcardchargeParam.Value = System.DBNull.Value;

//            var paidwithcreditParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@paidwithcredit", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = paidwithcredit.GetValueOrDefault(), Precision = 10, Scale = 4 };
//            if (!paidwithcredit.HasValue)
//                paidwithcreditParam.Value = System.DBNull.Value;

//            var vouchercodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@vouchercode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = vouchercode, Size = 30 };
//            if (vouchercodeParam.Value == null)
//                vouchercodeParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_orders_ADD] @OrderID OUTPUT, @shopid, @uid, @useremail, @payway, @ispaid, @ticketnumber, @ticketvalue, @deliveryway, @comments, @orderstatus, @ordercreatedt, @isCancelled, @totalprice1, @discountRate, @afterdiscount, @deliverycharge, @serviceCharge, @creditcardCharge, @tips, @isjz, @totalamount, @userIP, @pickupdt, @commrate, @isnew, @shopcardcharge, @paidwithcredit, @vouchercode", orderIdParam, shopidParam, uidParam, useremailParam, paywayParam, ispaidParam, ticketnumberParam, ticketvalueParam, deliverywayParam, commentsParam, orderstatusParam, ordercreatedtParam, isCancelledParam, totalprice1Param, discountRateParam, afterdiscountParam, deliverychargeParam, serviceChargeParam, creditcardChargeParam, tipsParam, isjzParam, totalamountParam, userIpParam, pickupdtParam, commrateParam, isnewParam, shopcardchargeParam, paidwithcreditParam, vouchercodeParam, procResultParam);
//            if (IsSqlParameterNull(orderIdParam))
//                orderId = default(string);
//            else
//                orderId = (string) orderIdParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int SpRefreshByDeviceTokenId(string devicetoken)
//        {
//            var devicetokenParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@devicetoken", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = devicetoken, Size = 100 };
//            if (devicetokenParam.Value == null)
//                devicetokenParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_RefreshByDeviceTokenId] @devicetoken", devicetokenParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpRefreshDeviceDt(string apptokenstr)
//        {
//            var apptokenstrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@apptokenstr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = apptokenstr, Size = 100 };
//            if (apptokenstrParam.Value == null)
//                apptokenstrParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[SP_RefreshDeviceDT] @apptokenstr", apptokenstrParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var snameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname, Size = 100 };
//            if (snameParam.Value == null)
//                snameParam.Value = System.DBNull.Value;

//            var sname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname2, Size = 100 };
//            if (sname2Param.Value == null)
//                sname2Param.Value = System.DBNull.Value;

//            var tel1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel1, Size = 50 };
//            if (tel1Param.Value == null)
//                tel1Param.Value = System.DBNull.Value;

//            var tel2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel2, Size = 50 };
//            if (tel2Param.Value == null)
//                tel2Param.Value = System.DBNull.Value;

//            var faxParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fax", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = fax, Size = 50 };
//            if (faxParam.Value == null)
//                faxParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var contactnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactname, Size = 50 };
//            if (contactnameParam.Value == null)
//                contactnameParam.Value = System.DBNull.Value;

//            var contactTelParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactTel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactTel, Size = 50 };
//            if (contactTelParam.Value == null)
//                contactTelParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 50 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 50 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 3000 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var acceptpayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptpay", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptpay, Size = 10 };
//            if (acceptpayParam.Value == null)
//                acceptpayParam.Value = System.DBNull.Value;

//            var acceptorderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptorder", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptorder, Size = 20 };
//            if (acceptorderParam.Value == null)
//                acceptorderParam.Value = System.DBNull.Value;

//            var banknameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankname, Size = 50 };
//            if (banknameParam.Value == null)
//                banknameParam.Value = System.DBNull.Value;

//            var bankusernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankusername", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankusername, Size = 50 };
//            if (bankusernameParam.Value == null)
//                bankusernameParam.Value = System.DBNull.Value;

//            var banksortcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@banksortcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = banksortcode, Size = 50 };
//            if (banksortcodeParam.Value == null)
//                banksortcodeParam.Value = System.DBNull.Value;

//            var banknoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankno", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankno, Size = 50 };
//            if (banknoParam.Value == null)
//                banknoParam.Value = System.DBNull.Value;

//            var webcommisionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@webcommision", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = webcommision.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!webcommision.HasValue)
//                webcommisionParam.Value = System.DBNull.Value;

//            var expireddtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@expireddt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = expireddt.GetValueOrDefault() };
//            if (!expireddt.HasValue)
//                expireddtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_ADD] @shopid, @sname, @sname2, @tel1, @tel2, @fax, @email, @contactname, @contactTel, @addr1, @cityname, @postcode1, @postcode2, @description, @acceptpay, @acceptorder, @bankname, @bankusername, @banksortcode, @bankno, @webcommision, @expireddt", shopidParam, snameParam, sname2Param, tel1Param, tel2Param, faxParam, emailParam, contactnameParam, contactTelParam, addr1Param, citynameParam, postcode1Param, postcode2Param, descriptionParam, acceptpayParam, acceptorderParam, banknameParam, bankusernameParam, banksortcodeParam, banknoParam, webcommisionParam, expireddtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopAddDeliveryInfo(int? shopid, string serviceType, string serviceTypeL, string deliveryWay, string deliverytime, string deliveryLastOt, decimal? deliveryMinOrder)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var serviceTypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@serviceType", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = serviceType, Size = 1 };
//            if (serviceTypeParam.Value == null)
//                serviceTypeParam.Value = System.DBNull.Value;

//            var serviceTypeLParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@serviceTypeL", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = serviceTypeL, Size = 1 };
//            if (serviceTypeLParam.Value == null)
//                serviceTypeLParam.Value = System.DBNull.Value;

//            var deliveryWayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@deliveryWay", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = deliveryWay, Size = 1 };
//            if (deliveryWayParam.Value == null)
//                deliveryWayParam.Value = System.DBNull.Value;

//            var deliverytimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Deliverytime", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = deliverytime, Size = 50 };
//            if (deliverytimeParam.Value == null)
//                deliverytimeParam.Value = System.DBNull.Value;

//            var deliveryLastOtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@DeliveryLastOT", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = deliveryLastOt, Size = 50 };
//            if (deliveryLastOtParam.Value == null)
//                deliveryLastOtParam.Value = System.DBNull.Value;

//            var deliveryMinOrderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@DeliveryMinOrder", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = deliveryMinOrder.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!deliveryMinOrder.HasValue)
//                deliveryMinOrderParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_ADDDeliveryInfo] @shopid, @serviceType, @serviceTypeL, @deliveryWay, @Deliverytime, @DeliveryLastOT, @DeliveryMinOrder", shopidParam, serviceTypeParam, serviceTypeLParam, deliveryWayParam, deliverytimeParam, deliveryLastOtParam, deliveryMinOrderParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopChangeboard(string board, int? shopid)
//        {
//            var boardParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@board", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = board, Size = 500 };
//            if (boardParam.Value == null)
//                boardParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_changeboard] @board, @shopid", boardParam, shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopUpdate(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string logo, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string acceptCustomerOpt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var snameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname, Size = 100 };
//            if (snameParam.Value == null)
//                snameParam.Value = System.DBNull.Value;

//            var sname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname2, Size = 100 };
//            if (sname2Param.Value == null)
//                sname2Param.Value = System.DBNull.Value;

//            var mealtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mealtype", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mealtype, Size = 50 };
//            if (mealtypeParam.Value == null)
//                mealtypeParam.Value = System.DBNull.Value;

//            var tel1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel1, Size = 50 };
//            if (tel1Param.Value == null)
//                tel1Param.Value = System.DBNull.Value;

//            var tel2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel2, Size = 50 };
//            if (tel2Param.Value == null)
//                tel2Param.Value = System.DBNull.Value;

//            var faxParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fax", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = fax, Size = 50 };
//            if (faxParam.Value == null)
//                faxParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var contactnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactname, Size = 50 };
//            if (contactnameParam.Value == null)
//                contactnameParam.Value = System.DBNull.Value;

//            var contactTelParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactTel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactTel, Size = 50 };
//            if (contactTelParam.Value == null)
//                contactTelParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var addr2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr2, Size = 100 };
//            if (addr2Param.Value == null)
//                addr2Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 50 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 50 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var logoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = logo, Size = 100 };
//            if (logoParam.Value == null)
//                logoParam.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 3000 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var updateTimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@updateTime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateTime.GetValueOrDefault() };
//            if (!updateTime.HasValue)
//                updateTimeParam.Value = System.DBNull.Value;

//            var aliasParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@alias", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = alias, Size = 100 };
//            if (aliasParam.Value == null)
//                aliasParam.Value = System.DBNull.Value;

//            var acceptpayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptpay", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptpay, Size = 10 };
//            if (acceptpayParam.Value == null)
//                acceptpayParam.Value = System.DBNull.Value;

//            var orderlangParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderlang", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderlang, Size = 10 };
//            if (orderlangParam.Value == null)
//                orderlangParam.Value = System.DBNull.Value;

//            var acceptorderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptorder", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptorder, Size = 20 };
//            if (acceptorderParam.Value == null)
//                acceptorderParam.Value = System.DBNull.Value;

//            var banknameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankname, Size = 50 };
//            if (banknameParam.Value == null)
//                banknameParam.Value = System.DBNull.Value;

//            var bankusernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankusername", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankusername, Size = 50 };
//            if (bankusernameParam.Value == null)
//                bankusernameParam.Value = System.DBNull.Value;

//            var banksortcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@banksortcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = banksortcode, Size = 50 };
//            if (banksortcodeParam.Value == null)
//                banksortcodeParam.Value = System.DBNull.Value;

//            var banknoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankno", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankno, Size = 50 };
//            if (banknoParam.Value == null)
//                banknoParam.Value = System.DBNull.Value;

//            var webcommisionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@webcommision", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = webcommision.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!webcommision.HasValue)
//                webcommisionParam.Value = System.DBNull.Value;

//            var expireddtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@expireddt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = expireddt.GetValueOrDefault() };
//            if (!expireddt.HasValue)
//                expireddtParam.Value = System.DBNull.Value;

//            var acceptCustomerOptParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptCustomerOpt", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptCustomerOpt, Size = 50 };
//            if (acceptCustomerOptParam.Value == null)
//                acceptCustomerOptParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_Update] @shopid, @sname, @sname2, @mealtype, @tel1, @tel2, @fax, @email, @contactname, @contactTel, @addr1, @addr2, @cityname, @postcode1, @postcode2, @logo, @description, @updateTime, @alias, @acceptpay, @orderlang, @acceptorder, @bankname, @bankusername, @banksortcode, @bankno, @webcommision, @expireddt, @acceptCustomerOpt", shopidParam, snameParam, sname2Param, mealtypeParam, tel1Param, tel2Param, faxParam, emailParam, contactnameParam, contactTelParam, addr1Param, addr2Param, citynameParam, postcode1Param, postcode2Param, logoParam, descriptionParam, updateTimeParam, aliasParam, acceptpayParam, orderlangParam, acceptorderParam, banknameParam, bankusernameParam, banksortcodeParam, banknoParam, webcommisionParam, expireddtParam, acceptCustomerOptParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopUpdate2(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var snameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname, Size = 100 };
//            if (snameParam.Value == null)
//                snameParam.Value = System.DBNull.Value;

//            var sname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname2, Size = 100 };
//            if (sname2Param.Value == null)
//                sname2Param.Value = System.DBNull.Value;

//            var mealtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mealtype", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mealtype, Size = 50 };
//            if (mealtypeParam.Value == null)
//                mealtypeParam.Value = System.DBNull.Value;

//            var tel1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel1, Size = 50 };
//            if (tel1Param.Value == null)
//                tel1Param.Value = System.DBNull.Value;

//            var tel2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel2, Size = 50 };
//            if (tel2Param.Value == null)
//                tel2Param.Value = System.DBNull.Value;

//            var faxParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fax", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = fax, Size = 50 };
//            if (faxParam.Value == null)
//                faxParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var contactnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactname, Size = 50 };
//            if (contactnameParam.Value == null)
//                contactnameParam.Value = System.DBNull.Value;

//            var contactTelParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactTel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactTel, Size = 50 };
//            if (contactTelParam.Value == null)
//                contactTelParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var addr2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr2, Size = 100 };
//            if (addr2Param.Value == null)
//                addr2Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 50 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 50 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 3000 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var updateTimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@updateTime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateTime.GetValueOrDefault() };
//            if (!updateTime.HasValue)
//                updateTimeParam.Value = System.DBNull.Value;

//            var aliasParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@alias", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = alias, Size = 100 };
//            if (aliasParam.Value == null)
//                aliasParam.Value = System.DBNull.Value;

//            var acceptpayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptpay", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptpay, Size = 10 };
//            if (acceptpayParam.Value == null)
//                acceptpayParam.Value = System.DBNull.Value;

//            var orderlangParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderlang", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderlang, Size = 10 };
//            if (orderlangParam.Value == null)
//                orderlangParam.Value = System.DBNull.Value;

//            var acceptorderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptorder", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptorder, Size = 20 };
//            if (acceptorderParam.Value == null)
//                acceptorderParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_Update2] @shopid, @sname, @sname2, @mealtype, @tel1, @tel2, @fax, @email, @contactname, @contactTel, @addr1, @addr2, @cityname, @postcode1, @postcode2, @description, @updateTime, @alias, @acceptpay, @orderlang, @acceptorder", shopidParam, snameParam, sname2Param, mealtypeParam, tel1Param, tel2Param, faxParam, emailParam, contactnameParam, contactTelParam, addr1Param, addr2Param, citynameParam, postcode1Param, postcode2Param, descriptionParam, updateTimeParam, aliasParam, acceptpayParam, orderlangParam, acceptorderParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopUpdate3(int? shopid, string description, System.DateTime? updateTime, string alias, string orderlang)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 3000 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var updateTimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@updateTime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateTime.GetValueOrDefault() };
//            if (!updateTime.HasValue)
//                updateTimeParam.Value = System.DBNull.Value;

//            var aliasParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@alias", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = alias, Size = 100 };
//            if (aliasParam.Value == null)
//                aliasParam.Value = System.DBNull.Value;

//            var orderlangParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderlang", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderlang, Size = 10 };
//            if (orderlangParam.Value == null)
//                orderlangParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shop_Update3] @shopid, @description, @updateTime, @alias, @orderlang", shopidParam, descriptionParam, updateTimeParam, aliasParam, orderlangParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopDelieveryAreaAdd(int? shopid, string postcode1, decimal? delieveryCost, string comments, System.DateTime? createDt, string flag1, string bak001)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 10 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var delieveryCostParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@delieveryCost", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = delieveryCost.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!delieveryCost.HasValue)
//                delieveryCostParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 200 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var createDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createDt.GetValueOrDefault() };
//            if (!createDt.HasValue)
//                createDtParam.Value = System.DBNull.Value;

//            var flag1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag1", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag1, Size = 1 };
//            if (flag1Param.Value == null)
//                flag1Param.Value = System.DBNull.Value;

//            var bak001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@bak001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bak001, Size = 50 };
//            if (bak001Param.Value == null)
//                bak001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shopDelieveryArea_ADD] @shopid, @postcode1, @delieveryCost, @comments, @createDT, @flag1, @bak001", shopidParam, postcode1Param, delieveryCostParam, commentsParam, createDtParam, flag1Param, bak001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopDelieveryAreaUpdate(int? did, int? shopid, decimal? delieveryCost, string comments, string flag1, string bak001)
//        {
//            var didParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@did", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = did.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!did.HasValue)
//                didParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var delieveryCostParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@delieveryCost", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = delieveryCost.GetValueOrDefault(), Precision = 8, Scale = 2 };
//            if (!delieveryCost.HasValue)
//                delieveryCostParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 200 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var flag1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag1", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag1, Size = 1 };
//            if (flag1Param.Value == null)
//                flag1Param.Value = System.DBNull.Value;

//            var bak001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@bak001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bak001, Size = 50 };
//            if (bak001Param.Value == null)
//                bak001Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shopDelieveryArea_Update] @did, @shopid, @delieveryCost, @comments, @flag1, @bak001", didParam, shopidParam, delieveryCostParam, commentsParam, flag1Param, bak001Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopdiscountUpdate(int? shopid, string board, string discountway, decimal? minorderamt, int? discountrate)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var boardParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@board", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = board, Size = 500 };
//            if (boardParam.Value == null)
//                boardParam.Value = System.DBNull.Value;

//            var discountwayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@discountway", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = discountway, Size = 1 };
//            if (discountwayParam.Value == null)
//                discountwayParam.Value = System.DBNull.Value;

//            var minorderamtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@minorderamt", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = minorderamt.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!minorderamt.HasValue)
//                minorderamtParam.Value = System.DBNull.Value;

//            var discountrateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@discountrate", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = discountrate.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!discountrate.HasValue)
//                discountrateParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shopdiscount_Update] @shopid, @board, @discountway, @minorderamt, @discountrate", shopidParam, boardParam, discountwayParam, minorderamtParam, discountrateParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopJz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret)
//        {
//            var frdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@frdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = frdt.GetValueOrDefault() };
//            if (!frdt.HasValue)
//                frdtParam.Value = System.DBNull.Value;

//            var todtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@todt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = todt.GetValueOrDefault() };
//            if (!todt.HasValue)
//                todtParam.Value = System.DBNull.Value;

//            var stdcommrateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@stdcommrate", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = stdcommrate.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!stdcommrate.HasValue)
//                stdcommrateParam.Value = System.DBNull.Value;

//            var shoploginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shoploginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = shoploginname, Size = 50 };
//            if (shoploginnameParam.Value == null)
//                shoploginnameParam.Value = System.DBNull.Value;

//            var createUserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createUser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = createUser, Size = 30 };
//            if (createUserParam.Value == null)
//                createUserParam.Value = System.DBNull.Value;

//            var retParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ret", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 50 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_ShopJZ] @frdt, @todt, @stdcommrate, @shoploginname, @createUser, @ret OUTPUT", frdtParam, todtParam, stdcommrateParam, shoploginnameParam, createUserParam, retParam, procResultParam);
//            if (IsSqlParameterNull(retParam))
//                ret = default(string);
//            else
//                ret = (string) retParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShoppingCartAdd(int? customerId, string customerSessionId, System.DateTime? createdOn, System.DateTime? updateOn, int? shopid, int? productId, int? mainfoodid, string menuOptionIDs, string subProductId, int? quantity)
//        {
//            var customerIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@customerID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = customerId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!customerId.HasValue)
//                customerIdParam.Value = System.DBNull.Value;

//            var customerSessionIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@customerSessionID", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = customerSessionId, Size = 50 };
//            if (customerSessionIdParam.Value == null)
//                customerSessionIdParam.Value = System.DBNull.Value;

//            var createdOnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@CreatedOn", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createdOn.GetValueOrDefault() };
//            if (!createdOn.HasValue)
//                createdOnParam.Value = System.DBNull.Value;

//            var updateOnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@UpdateOn", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateOn.GetValueOrDefault() };
//            if (!updateOn.HasValue)
//                updateOnParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var productIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ProductID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = productId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!productId.HasValue)
//                productIdParam.Value = System.DBNull.Value;

//            var mainfoodidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mainfoodid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mainfoodid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mainfoodid.HasValue)
//                mainfoodidParam.Value = System.DBNull.Value;

//            var menuOptionIDsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@MenuOptionIDs", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = menuOptionIDs, Size = 1000 };
//            if (menuOptionIDsParam.Value == null)
//                menuOptionIDsParam.Value = System.DBNull.Value;

//            var subProductIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@SubProductID", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = subProductId, Size = 1000 };
//            if (subProductIdParam.Value == null)
//                subProductIdParam.Value = System.DBNull.Value;

//            var quantityParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Quantity", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = quantity.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!quantity.HasValue)
//                quantityParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_ShoppingCart_ADD] @customerID, @customerSessionID, @CreatedOn, @UpdateOn, @shopid, @ProductID, @mainfoodid, @MenuOptionIDs, @SubProductID, @Quantity", customerIdParam, customerSessionIdParam, createdOnParam, updateOnParam, shopidParam, productIdParam, mainfoodidParam, menuOptionIDsParam, subProductIdParam, quantityParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShoppingCartUpdate(int? cartid, int? customerId, string customerSessionId, System.DateTime? updateOn, int? quantity, int? productId, string subProductId, string opt)
//        {
//            var cartidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cartid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = cartid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!cartid.HasValue)
//                cartidParam.Value = System.DBNull.Value;

//            var customerIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@customerID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = customerId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!customerId.HasValue)
//                customerIdParam.Value = System.DBNull.Value;

//            var customerSessionIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@customerSessionID", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = customerSessionId, Size = 50 };
//            if (customerSessionIdParam.Value == null)
//                customerSessionIdParam.Value = System.DBNull.Value;

//            var updateOnParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@UpdateOn", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = updateOn.GetValueOrDefault() };
//            if (!updateOn.HasValue)
//                updateOnParam.Value = System.DBNull.Value;

//            var quantityParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Quantity", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = quantity.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!quantity.HasValue)
//                quantityParam.Value = System.DBNull.Value;

//            var productIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ProductID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = productId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!productId.HasValue)
//                productIdParam.Value = System.DBNull.Value;

//            var subProductIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@SubProductID", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = subProductId, Size = 500 };
//            if (subProductIdParam.Value == null)
//                subProductIdParam.Value = System.DBNull.Value;

//            var optParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@opt", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = opt, Size = 1 };
//            if (optParam.Value == null)
//                optParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_ShoppingCart_Update] @cartid, @customerID, @customerSessionID, @UpdateOn, @Quantity, @ProductID, @SubProductID, @opt", cartidParam, customerIdParam, customerSessionIdParam, updateOnParam, quantityParam, productIdParam, subProductIdParam, optParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpShopunjz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret)
//        {
//            var frdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@frdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = frdt.GetValueOrDefault() };
//            if (!frdt.HasValue)
//                frdtParam.Value = System.DBNull.Value;

//            var todtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@todt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = todt.GetValueOrDefault() };
//            if (!todt.HasValue)
//                todtParam.Value = System.DBNull.Value;

//            var stdcommrateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@stdcommrate", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = stdcommrate.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!stdcommrate.HasValue)
//                stdcommrateParam.Value = System.DBNull.Value;

//            var shoploginnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shoploginname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = shoploginname, Size = 50 };
//            if (shoploginnameParam.Value == null)
//                shoploginnameParam.Value = System.DBNull.Value;

//            var createUserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createUser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = createUser, Size = 30 };
//            if (createUserParam.Value == null)
//                createUserParam.Value = System.DBNull.Value;

//            var retParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ret", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 50 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_shopunjz] @frdt, @todt, @stdcommrate, @shoploginname, @createUser, @ret OUTPUT", frdtParam, todtParam, stdcommrateParam, shoploginnameParam, createUserParam, retParam, procResultParam);
//            if (IsSqlParameterNull(retParam))
//                ret = default(string);
//            else
//                ret = (string) retParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int SpSysLogAdd(string userid, string actstr, System.DateTime? actdt, string priority)
//        {
//            var useridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@userid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = userid, Size = 50 };
//            if (useridParam.Value == null)
//                useridParam.Value = System.DBNull.Value;

//            var actstrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@actstr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = actstr, Size = 800 };
//            if (actstrParam.Value == null)
//                actstrParam.Value = System.DBNull.Value;

//            var actdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@actdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = actdt.GetValueOrDefault() };
//            if (!actdt.HasValue)
//                actdtParam.Value = System.DBNull.Value;

//            var priorityParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@priority", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = priority, Size = 10 };
//            if (priorityParam.Value == null)
//                priorityParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_sysLog_ADD] @userid, @actstr, @actdt, @priority", useridParam, actstrParam, actdtParam, priorityParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpUserCreditInfoAdd(int? shopid, int? userid, string moneydirection, decimal? amt, string comment, string orderid, System.DateTime? createdt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var useridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@userid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = userid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!userid.HasValue)
//                useridParam.Value = System.DBNull.Value;

//            var moneydirectionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@moneydirection", SqlDbType = System.Data.SqlDbType.NChar, Direction = System.Data.ParameterDirection.Input, Value = moneydirection, Size = 2 };
//            if (moneydirectionParam.Value == null)
//                moneydirectionParam.Value = System.DBNull.Value;

//            var amtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@amt", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = amt.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!amt.HasValue)
//                amtParam.Value = System.DBNull.Value;

//            var commentParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comment", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comment, Size = 500 };
//            if (commentParam.Value == null)
//                commentParam.Value = System.DBNull.Value;

//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var createdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createdt.GetValueOrDefault() };
//            if (!createdt.HasValue)
//                createdtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_UserCreditInfo_Add] @shopid, @userid, @moneydirection, @amt, @comment, @orderid, @createdt", shopidParam, useridParam, moneydirectionParam, amtParam, commentParam, orderidParam, createdtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpUserregChangeCredits(int? sid, int? uid, string act)
//        {
//            var sidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = sid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!sid.HasValue)
//                sidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var actParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@act", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = act, Size = 1 };
//            if (actParam.Value == null)
//                actParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_userreg_ChangeCredits] @sid, @uid, @act", sidParam, uidParam, actParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpUserregChangeScore(int? sid, int? uid, string act)
//        {
//            var sidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = sid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!sid.HasValue)
//                sidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var actParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@act", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = act, Size = 1 };
//            if (actParam.Value == null)
//                actParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_userreg_ChangeScore] @sid, @uid, @act", sidParam, uidParam, actParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email)
//        {
//            int procResult;
//            return SpUserRegExist(email, out procResult);
//        }

//        public System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email, out int procResult)
//        {
//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<SpUserRegExistReturnModel>("EXEC @procResult = [dbo].[sp_UserReg_Exist] @email", emailParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int SpUserregUpdateutype(string upwd, string utype, int? uid)
//        {
//            var upwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@upwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = upwd, Size = 50 };
//            if (upwdParam.Value == null)
//                upwdParam.Value = System.DBNull.Value;

//            var utypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@utype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = utype, Size = 1 };
//            if (utypeParam.Value == null)
//                utypeParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_userreg_updateutype] @upwd, @utype, @uid", upwdParam, utypeParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int SpViewtelAdd(int? shopid, System.DateTime? actdt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var actdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@actdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = actdt.GetValueOrDefault() };
//            if (!actdt.HasValue)
//                actdtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[sp_viewtel_ADD] @shopid, @actdt", shopidParam, actdtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCreateShopUser(string utype, string pwd, out int? uid, out string email)
//        {
//            var utypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@utype", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = utype, Size = 15 };
//            if (utypeParam.Value == null)
//                utypeParam.Value = System.DBNull.Value;

//            var pwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwd, Size = 50 };
//            if (pwdParam.Value == null)
//                pwdParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 100 };
//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_CreateShopUser] @utype, @pwd, @uid OUTPUT, @email OUTPUT", utypeParam, pwdParam, uidParam, emailParam, procResultParam);
//            if (IsSqlParameterNull(uidParam))
//                uid = null;
//            else
//                uid = (int) uidParam.Value;
//            if (IsSqlParameterNull(emailParam))
//                email = default(string);
//            else
//                email = (string) emailParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCreditCardAdd(int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var acctParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ACCT", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acct, Size = 50 };
//            if (acctParam.Value == null)
//                acctParam.Value = System.DBNull.Value;

//            var acctTypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@AcctType", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acctType, Size = 50 };
//            if (acctTypeParam.Value == null)
//                acctTypeParam.Value = System.DBNull.Value;

//            var streetParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Street", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = street, Size = 100 };
//            if (streetParam.Value == null)
//                streetParam.Value = System.DBNull.Value;

//            var cityParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@city", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = city, Size = 50 };
//            if (cityParam.Value == null)
//                cityParam.Value = System.DBNull.Value;

//            var stateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@state", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = state, Size = 50 };
//            if (stateParam.Value == null)
//                stateParam.Value = System.DBNull.Value;

//            var countryParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@country", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = country, Size = 50 };
//            if (countryParam.Value == null)
//                countryParam.Value = System.DBNull.Value;

//            var zipParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@zip", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = zip, Size = 20 };
//            if (zipParam.Value == null)
//                zipParam.Value = System.DBNull.Value;

//            var cardIssueParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardIssue", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = cardIssue.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!cardIssue.HasValue)
//                cardIssueParam.Value = System.DBNull.Value;

//            var cardStartParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardStart", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cardStart, Size = 15 };
//            if (cardStartParam.Value == null)
//                cardStartParam.Value = System.DBNull.Value;

//            var expDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@expDate", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = expDate, Size = 50 };
//            if (expDateParam.Value == null)
//                expDateParam.Value = System.DBNull.Value;

//            var firstNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@firstName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = firstName, Size = 50 };
//            if (firstNameParam.Value == null)
//                firstNameParam.Value = System.DBNull.Value;

//            var lastNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@lastName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = lastName, Size = 50 };
//            if (lastNameParam.Value == null)
//                lastNameParam.Value = System.DBNull.Value;

//            var cvv2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@CVV2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cvv2, Size = 10 };
//            if (cvv2Param.Value == null)
//                cvv2Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_creditCard_ADD] @uid, @ACCT, @AcctType, @Street, @city, @state, @country, @zip, @cardIssue, @cardStart, @expDate, @firstName, @lastName, @CVV2", uidParam, acctParam, acctTypeParam, streetParam, cityParam, stateParam, countryParam, zipParam, cardIssueParam, cardStartParam, expDateParam, firstNameParam, lastNameParam, cvv2Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCreditCardDelete(int? cardid, int? uid)
//        {
//            var cardidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = cardid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!cardid.HasValue)
//                cardidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_creditCard_Delete] @cardid, @uid", cardidParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid)
//        {
//            int procResult;
//            return UpCreditCardGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid, out int procResult)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpCreditCardGetListReturnModel>("EXEC @procResult = [dbo].[UP_creditCard_GetList] @uid", uidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpCreditCardUpdate(int? cardid, int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2)
//        {
//            var cardidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = cardid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!cardid.HasValue)
//                cardidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var acctParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ACCT", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acct, Size = 50 };
//            if (acctParam.Value == null)
//                acctParam.Value = System.DBNull.Value;

//            var acctTypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@AcctType", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acctType, Size = 50 };
//            if (acctTypeParam.Value == null)
//                acctTypeParam.Value = System.DBNull.Value;

//            var streetParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@Street", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = street, Size = 100 };
//            if (streetParam.Value == null)
//                streetParam.Value = System.DBNull.Value;

//            var cityParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@city", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = city, Size = 50 };
//            if (cityParam.Value == null)
//                cityParam.Value = System.DBNull.Value;

//            var stateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@state", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = state, Size = 50 };
//            if (stateParam.Value == null)
//                stateParam.Value = System.DBNull.Value;

//            var countryParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@country", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = country, Size = 50 };
//            if (countryParam.Value == null)
//                countryParam.Value = System.DBNull.Value;

//            var zipParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@zip", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = zip, Size = 20 };
//            if (zipParam.Value == null)
//                zipParam.Value = System.DBNull.Value;

//            var cardIssueParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardIssue", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = cardIssue.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!cardIssue.HasValue)
//                cardIssueParam.Value = System.DBNull.Value;

//            var cardStartParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cardStart", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cardStart, Size = 15 };
//            if (cardStartParam.Value == null)
//                cardStartParam.Value = System.DBNull.Value;

//            var expDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@expDate", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = expDate, Size = 50 };
//            if (expDateParam.Value == null)
//                expDateParam.Value = System.DBNull.Value;

//            var firstNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@firstName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = firstName, Size = 50 };
//            if (firstNameParam.Value == null)
//                firstNameParam.Value = System.DBNull.Value;

//            var lastNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@lastName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = lastName, Size = 50 };
//            if (lastNameParam.Value == null)
//                lastNameParam.Value = System.DBNull.Value;

//            var cvv2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@CVV2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cvv2, Size = 10 };
//            if (cvv2Param.Value == null)
//                cvv2Param.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_creditCard_Update] @cardid, @uid, @ACCT, @AcctType, @Street, @city, @state, @country, @zip, @cardIssue, @cardStart, @expDate, @firstName, @lastName, @CVV2", cardidParam, uidParam, acctParam, acctTypeParam, streetParam, cityParam, stateParam, countryParam, zipParam, cardIssueParam, cardStartParam, expDateParam, firstNameParam, lastNameParam, cvv2Param, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCustomerReviewAdd(int? uid, string email, decimal? rate1, decimal? rate2, decimal? rate3, decimal? rate4, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid, string comment, string replyMsg)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 50 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var rate1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@rate1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = rate1.GetValueOrDefault(), Precision = 2, Scale = 1 };
//            if (!rate1.HasValue)
//                rate1Param.Value = System.DBNull.Value;

//            var rate2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@rate2", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = rate2.GetValueOrDefault(), Precision = 2, Scale = 1 };
//            if (!rate2.HasValue)
//                rate2Param.Value = System.DBNull.Value;

//            var rate3Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@rate3", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = rate3.GetValueOrDefault(), Precision = 2, Scale = 1 };
//            if (!rate3.HasValue)
//                rate3Param.Value = System.DBNull.Value;

//            var rate4Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@rate4", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = rate4.GetValueOrDefault(), Precision = 2, Scale = 1 };
//            if (!rate4.HasValue)
//                rate4Param.Value = System.DBNull.Value;

//            var reviewDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reviewDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = reviewDate.GetValueOrDefault() };
//            if (!reviewDate.HasValue)
//                reviewDateParam.Value = System.DBNull.Value;

//            var reviewtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reviewtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = reviewtype, Size = 1 };
//            if (reviewtypeParam.Value == null)
//                reviewtypeParam.Value = System.DBNull.Value;

//            var objidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@objid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = objid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!objid.HasValue)
//                objidParam.Value = System.DBNull.Value;

//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var commentParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comment", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comment, Size = 500 };
//            if (commentParam.Value == null)
//                commentParam.Value = System.DBNull.Value;

//            var replyMsgParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@replyMsg", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = replyMsg, Size = 500 };
//            if (replyMsgParam.Value == null)
//                replyMsgParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_customerReview_ADD] @uid, @email, @rate1, @rate2, @rate3, @rate4, @reviewDate, @reviewtype, @objid, @orderid, @comment, @replyMsg", uidParam, emailParam, rate1Param, rate2Param, rate3Param, rate4Param, reviewDateParam, reviewtypeParam, objidParam, orderidParam, commentParam, replyMsgParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCustomerReviewDelete(int? reviewid, int? shopid)
//        {
//            var reviewidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reviewid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = reviewid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!reviewid.HasValue)
//                reviewidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_customerReview_Delete] @reviewid, @shopid", reviewidParam, shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpCustomerReviewForMealAdd(int? uid, string email, decimal? rate1, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 50 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var rate1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@rate1", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = rate1.GetValueOrDefault(), Precision = 2, Scale = 1 };
//            if (!rate1.HasValue)
//                rate1Param.Value = System.DBNull.Value;

//            var reviewDateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reviewDate", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = reviewDate.GetValueOrDefault() };
//            if (!reviewDate.HasValue)
//                reviewDateParam.Value = System.DBNull.Value;

//            var reviewtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@reviewtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = reviewtype, Size = 1 };
//            if (reviewtypeParam.Value == null)
//                reviewtypeParam.Value = System.DBNull.Value;

//            var objidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@objid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = objid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!objid.HasValue)
//                objidParam.Value = System.DBNull.Value;

//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_customerReviewForMeal_ADD] @uid, @email, @rate1, @reviewDate, @reviewtype, @objid, @orderid", uidParam, emailParam, rate1Param, reviewDateParam, reviewtypeParam, objidParam, orderidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpDeliveryAddrAdd(out int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile)
//        {
//            var addridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var usernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@username", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = username, Size = 100 };
//            if (usernameParam.Value == null)
//                usernameParam.Value = System.DBNull.Value;

//            var addrnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addrname, Size = 100 };
//            if (addrnameParam.Value == null)
//                addrnameParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var addr2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr2, Size = 100 };
//            if (addr2Param.Value == null)
//                addr2Param.Value = System.DBNull.Value;

//            var addr3Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr3", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr3, Size = 100 };
//            if (addr3Param.Value == null)
//                addr3Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 10 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 10 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var telParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel, Size = 100 };
//            if (telParam.Value == null)
//                telParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 100 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var mobileParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mobile", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mobile, Size = 50 };
//            if (mobileParam.Value == null)
//                mobileParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_deliveryAddr_ADD] @addrid OUTPUT, @uid, @username, @addrname, @addr1, @addr2, @addr3, @cityname, @postcode1, @postcode2, @tel, @comments, @flag, @mobile", addridParam, uidParam, usernameParam, addrnameParam, addr1Param, addr2Param, addr3Param, citynameParam, postcode1Param, postcode2Param, telParam, commentsParam, flagParam, mobileParam, procResultParam);
//            if (IsSqlParameterNull(addridParam))
//                addrid = null;
//            else
//                addrid = (int) addridParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int UpDeliveryAddrDelete(int? addrid, int? uid)
//        {
//            var addridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = addrid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!addrid.HasValue)
//                addridParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_deliveryAddr_Delete] @addrid, @uid", addridParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid)
//        {
//            int procResult;
//            return UpDeliveryAddrGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid, out int procResult)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpDeliveryAddrGetListReturnModel>("EXEC @procResult = [dbo].[UP_deliveryAddr_GetList] @uid", uidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid)
//        {
//            int procResult;
//            return UpDeliveryAddrGetModelById(addrid, out procResult);
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid, out int procResult)
//        {
//            var addridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = addrid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!addrid.HasValue)
//                addridParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpDeliveryAddrGetModelByIdReturnModel>("EXEC @procResult = [dbo].[up_deliveryAddr_GetModelById] @addrid", addridParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpDeliveryAddrUpdate(int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile)
//        {
//            var addridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = addrid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!addrid.HasValue)
//                addridParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var usernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@username", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = username, Size = 100 };
//            if (usernameParam.Value == null)
//                usernameParam.Value = System.DBNull.Value;

//            var addrnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addrname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addrname, Size = 100 };
//            if (addrnameParam.Value == null)
//                addrnameParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var addr2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr2, Size = 100 };
//            if (addr2Param.Value == null)
//                addr2Param.Value = System.DBNull.Value;

//            var addr3Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr3", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr3, Size = 100 };
//            if (addr3Param.Value == null)
//                addr3Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 10 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 10 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var telParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel, Size = 100 };
//            if (telParam.Value == null)
//                telParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 100 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 1 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var mobileParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mobile", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mobile, Size = 50 };
//            if (mobileParam.Value == null)
//                mobileParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_deliveryAddr_Update] @addrid, @uid, @username, @addrname, @addr1, @addr2, @addr3, @cityname, @postcode1, @postcode2, @tel, @comments, @flag, @mobile", addridParam, uidParam, usernameParam, addrnameParam, addr1Param, addr2Param, addr3Param, citynameParam, postcode1Param, postcode2Param, telParam, commentsParam, flagParam, mobileParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpDeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, decimal? freeAmount, decimal? unitRate)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var costtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@costtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = costtype, Size = 1 };
//            if (costtypeParam.Value == null)
//                costtypeParam.Value = System.DBNull.Value;

//            var basicDistanceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicDistance", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicDistance.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicDistance.HasValue)
//                basicDistanceParam.Value = System.DBNull.Value;

//            var basicPriceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicPrice", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = basicPrice.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!basicPrice.HasValue)
//                basicPriceParam.Value = System.DBNull.Value;

//            var freeAmountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@freeAmount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = freeAmount.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!freeAmount.HasValue)
//                freeAmountParam.Value = System.DBNull.Value;

//            var unitRateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@unitRate", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = unitRate.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!unitRate.HasValue)
//                unitRateParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_deliveryCost_ADD] @shopid, @costtype, @basicDistance, @basicPrice, @freeAmount, @unitRate", shopidParam, costtypeParam, basicDistanceParam, basicPriceParam, freeAmountParam, unitRateParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpFavouritesAdd(out int? fid, int? uid, string ftype, int? shopid, int? mid, System.DateTime? createDt, string flag)
//        {
//            var fidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var ftypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ftype", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = ftype, Size = 10 };
//            if (ftypeParam.Value == null)
//                ftypeParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var midParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = mid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!mid.HasValue)
//                midParam.Value = System.DBNull.Value;

//            var createDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createDt.GetValueOrDefault() };
//            if (!createDt.HasValue)
//                createDtParam.Value = System.DBNull.Value;

//            var flagParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@flag", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = flag, Size = 50 };
//            if (flagParam.Value == null)
//                flagParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_favourites_ADD] @fid OUTPUT, @uid, @ftype, @shopid, @mid, @createDT, @flag", fidParam, uidParam, ftypeParam, shopidParam, midParam, createDtParam, flagParam, procResultParam);
//            if (IsSqlParameterNull(fidParam))
//                fid = null;
//            else
//                fid = (int) fidParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int UpFavouritesDelete(int? fid, int? uid)
//        {
//            var fidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = fid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!fid.HasValue)
//                fidParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_favourites_Delete] @fid, @uid", fidParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid)
//        {
//            int procResult;
//            return UpFavouritesGetModel(fid, out procResult);
//        }

//        public System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid, out int procResult)
//        {
//            var fidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = fid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!fid.HasValue)
//                fidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpFavouritesGetModelReturnModel>("EXEC @procResult = [dbo].[UP_favourites_GetModel] @fid", fidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public UpGetUserEmailReturnModel UpGetUserEmail(string utype)
//        {
//            var utypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@utype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = utype, Size = 1 };
//            if (utypeParam.Value == null)
//                utypeParam.Value = System.DBNull.Value;


//            var procResultData = new UpGetUserEmailReturnModel();
//            var cmd = Database.Connection.CreateCommand();
//            cmd.CommandType = System.Data.CommandType.StoredProcedure;
//            cmd.CommandText = "[dbo].[UP_GetUserEmail]";
//            cmd.Parameters.Add(utypeParam);

//            try
//            {
//                Database.Connection.Open();
//                var reader = cmd.ExecuteReader();
//                var objectContext = ((System.Data.Entity.Infrastructure.IObjectContextAdapter) this).ObjectContext;

//                procResultData.ResultSet1 = objectContext.Translate<UpGetUserEmailReturnModel.ResultSetModel1>(reader).ToList();
//                reader.NextResult();

//                procResultData.ResultSet2 = objectContext.Translate<UpGetUserEmailReturnModel.ResultSetModel2>(reader).ToList();
//            }
//            finally
//            {
//                Database.Connection.Close();
//            }
//            return procResultData;
//        }

//        public int UpMenuCatAdd(int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? createDt, decimal? indexnum, string logostr)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var catNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catName, Size = 100 };
//            if (catNameParam.Value == null)
//                catNameParam.Value = System.DBNull.Value;

//            var catName2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@catName2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catName2, Size = 100 };
//            if (catName2Param.Value == null)
//                catName2Param.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 500 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var description2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@description2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description2, Size = 500 };
//            if (description2Param.Value == null)
//                description2Param.Value = System.DBNull.Value;

//            var servicePeriodParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@servicePeriod", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = servicePeriod, Size = 1 };
//            if (servicePeriodParam.Value == null)
//                servicePeriodParam.Value = System.DBNull.Value;

//            var displayweekdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@displayweekday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = displayweekday, Size = 50 };
//            if (displayweekdayParam.Value == null)
//                displayweekdayParam.Value = System.DBNull.Value;

//            var pcsettingParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pcsetting", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pcsetting, Size = 50 };
//            if (pcsettingParam.Value == null)
//                pcsettingParam.Value = System.DBNull.Value;

//            var createDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = createDt.GetValueOrDefault() };
//            if (!createDt.HasValue)
//                createDtParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var logostrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logostr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = logostr, Size = 80 };
//            if (logostrParam.Value == null)
//                logostrParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_menuCat_ADD] @shopid, @catName, @catName2, @description, @description2, @servicePeriod, @displayweekday, @pcsetting, @createDT, @indexnum, @logostr", shopidParam, catNameParam, catName2Param, descriptionParam, description2Param, servicePeriodParam, displayweekdayParam, pcsettingParam, createDtParam, indexnumParam, logostrParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpMenuCatDelete(out string logostr, int? shopid, int? catid)
//        {
//            var logostrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logostr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Output, Size = 80 };
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_menuCat_Delete] @logostr OUTPUT, @shopid, @catid", logostrParam, shopidParam, catidParam, procResultParam);
//            if (IsSqlParameterNull(logostrParam))
//                logostr = default(string);
//            else
//                logostr = (string) logostrParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int UpMenuCatUpdate(int? catid, int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? modifiedDt, decimal? indexnum, string logostr)
//        {
//            var catidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = catid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!catid.HasValue)
//                catidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var catNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@catName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catName, Size = 100 };
//            if (catNameParam.Value == null)
//                catNameParam.Value = System.DBNull.Value;

//            var catName2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@catName2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = catName2, Size = 100 };
//            if (catName2Param.Value == null)
//                catName2Param.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 500 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var description2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@description2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description2, Size = 500 };
//            if (description2Param.Value == null)
//                description2Param.Value = System.DBNull.Value;

//            var servicePeriodParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@servicePeriod", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = servicePeriod, Size = 1 };
//            if (servicePeriodParam.Value == null)
//                servicePeriodParam.Value = System.DBNull.Value;

//            var displayweekdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@displayweekday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = displayweekday, Size = 50 };
//            if (displayweekdayParam.Value == null)
//                displayweekdayParam.Value = System.DBNull.Value;

//            var pcsettingParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pcsetting", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pcsetting, Size = 50 };
//            if (pcsettingParam.Value == null)
//                pcsettingParam.Value = System.DBNull.Value;

//            var modifiedDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@modifiedDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = modifiedDt.GetValueOrDefault() };
//            if (!modifiedDt.HasValue)
//                modifiedDtParam.Value = System.DBNull.Value;

//            var indexnumParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@indexnum", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = indexnum.GetValueOrDefault(), Precision = 8, Scale = 1 };
//            if (!indexnum.HasValue)
//                indexnumParam.Value = System.DBNull.Value;

//            var logostrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logostr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = logostr, Size = 80 };
//            if (logostrParam.Value == null)
//                logostrParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_menuCat_Update] @catid, @shopid, @catName, @catName2, @description, @description2, @servicePeriod, @displayweekday, @pcsetting, @modifiedDT, @indexnum, @logostr", catidParam, shopidParam, catNameParam, catName2Param, descriptionParam, description2Param, servicePeriodParam, displayweekdayParam, pcsettingParam, modifiedDtParam, indexnumParam, logostrParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpOnlineUserAdd(int? uid, string urealname, System.DateTime? loginTime, System.DateTime? lastUpdateTime, string utype)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var urealnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@urealname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = urealname, Size = 50 };
//            if (urealnameParam.Value == null)
//                urealnameParam.Value = System.DBNull.Value;

//            var loginTimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@loginTime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = loginTime.GetValueOrDefault() };
//            if (!loginTime.HasValue)
//                loginTimeParam.Value = System.DBNull.Value;

//            var lastUpdateTimeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@lastUpdateTime", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = lastUpdateTime.GetValueOrDefault() };
//            if (!lastUpdateTime.HasValue)
//                lastUpdateTimeParam.Value = System.DBNull.Value;

//            var utypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@utype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = utype, Size = 1 };
//            if (utypeParam.Value == null)
//                utypeParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_onlineUser_ADD] @uid, @urealname, @loginTime, @lastUpdateTime, @utype", uidParam, urealnameParam, loginTimeParam, lastUpdateTimeParam, utypeParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpOrderczAdd(System.DateTime? czdt, string orderid, string comments, decimal? amt, string operateid)
//        {
//            var czdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@czdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = czdt.GetValueOrDefault() };
//            if (!czdt.HasValue)
//                czdtParam.Value = System.DBNull.Value;

//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 50 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 200 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var amtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@amt", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = amt.GetValueOrDefault(), Precision = 18, Scale = 2 };
//            if (!amt.HasValue)
//                amtParam.Value = System.DBNull.Value;

//            var operateidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operateid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = operateid, Size = 50 };
//            if (operateidParam.Value == null)
//                operateidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_ordercz_ADD] @czdt, @orderid, @comments, @amt, @operateid", czdtParam, orderidParam, commentsParam, amtParam, operateidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpRecommendAdd(int? recUid, string recName, string shopname, string townname, string deliveryArea, string addr, string tel)
//        {
//            var recUidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@recUid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = recUid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!recUid.HasValue)
//                recUidParam.Value = System.DBNull.Value;

//            var recNameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@recName", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = recName, Size = 50 };
//            if (recNameParam.Value == null)
//                recNameParam.Value = System.DBNull.Value;

//            var shopnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = shopname, Size = 100 };
//            if (shopnameParam.Value == null)
//                shopnameParam.Value = System.DBNull.Value;

//            var townnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@townname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = townname, Size = 50 };
//            if (townnameParam.Value == null)
//                townnameParam.Value = System.DBNull.Value;

//            var deliveryAreaParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@DeliveryArea", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = deliveryArea, Size = 50 };
//            if (deliveryAreaParam.Value == null)
//                deliveryAreaParam.Value = System.DBNull.Value;

//            var addrParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr, Size = 200 };
//            if (addrParam.Value == null)
//                addrParam.Value = System.DBNull.Value;

//            var telParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel, Size = 100 };
//            if (telParam.Value == null)
//                telParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_recommend_ADD] @recUid, @recName, @shopname, @townname, @DeliveryArea, @addr, @tel", recUidParam, recNameParam, shopnameParam, townnameParam, deliveryAreaParam, addrParam, telParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpRecommendDelete(int? recId)
//        {
//            var recIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@recID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = recId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!recId.HasValue)
//                recIdParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_recommend_Delete] @recID", recIdParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId)
//        {
//            int procResult;
//            return UpRecommendGetModel(recId, out procResult);
//        }

//        public System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId, out int procResult)
//        {
//            var recIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@recID", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = recId.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!recId.HasValue)
//                recIdParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpRecommendGetModelReturnModel>("EXEC @procResult = [dbo].[UP_recommend_GetModel] @recID", recIdParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpServiceTicketAdd(string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string createuser)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var useridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@userid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = userid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!userid.HasValue)
//                useridParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var teleParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tele", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tele, Size = 50 };
//            if (teleParam.Value == null)
//                teleParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var isnormalParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isnormal", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isnormal, Size = 1 };
//            if (isnormalParam.Value == null)
//                isnormalParam.Value = System.DBNull.Value;

//            var ismanagerParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ismanager", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = ismanager, Size = 1 };
//            if (ismanagerParam.Value == null)
//                ismanagerParam.Value = System.DBNull.Value;

//            var iscriticalParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@iscritical", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = iscritical, Size = 1 };
//            if (iscriticalParam.Value == null)
//                iscriticalParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 1000 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var statusParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@status", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = status, Size = 1 };
//            if (statusParam.Value == null)
//                statusParam.Value = System.DBNull.Value;

//            var createuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@createuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = createuser, Size = 50 };
//            if (createuserParam.Value == null)
//                createuserParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_serviceTicket_ADD] @orderid, @userid, @shopid, @tele, @email, @isnormal, @ismanager, @iscritical, @comments, @status, @createuser", orderidParam, useridParam, shopidParam, teleParam, emailParam, isnormalParam, ismanagerParam, iscriticalParam, commentsParam, statusParam, createuserParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpServiceTicketUpdate(int? ticketid, string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string modifyuser)
//        {
//            var ticketidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ticketid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = ticketid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!ticketid.HasValue)
//                ticketidParam.Value = System.DBNull.Value;

//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var useridParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@userid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = userid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!userid.HasValue)
//                useridParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var teleParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tele", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tele, Size = 50 };
//            if (teleParam.Value == null)
//                teleParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var isnormalParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isnormal", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isnormal, Size = 1 };
//            if (isnormalParam.Value == null)
//                isnormalParam.Value = System.DBNull.Value;

//            var ismanagerParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ismanager", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = ismanager, Size = 1 };
//            if (ismanagerParam.Value == null)
//                ismanagerParam.Value = System.DBNull.Value;

//            var iscriticalParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@iscritical", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = iscritical, Size = 1 };
//            if (iscriticalParam.Value == null)
//                iscriticalParam.Value = System.DBNull.Value;

//            var commentsParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@comments", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = comments, Size = 1000 };
//            if (commentsParam.Value == null)
//                commentsParam.Value = System.DBNull.Value;

//            var statusParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@status", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = status, Size = 1 };
//            if (statusParam.Value == null)
//                statusParam.Value = System.DBNull.Value;

//            var modifyuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@modifyuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = modifyuser, Size = 50 };
//            if (modifyuserParam.Value == null)
//                modifyuserParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_serviceTicket_Update] @ticketid, @orderid, @userid, @shopid, @tele, @email, @isnormal, @ismanager, @iscritical, @comments, @status, @modifyuser", ticketidParam, orderidParam, useridParam, shopidParam, teleParam, emailParam, isnormalParam, ismanagerParam, iscriticalParam, commentsParam, statusParam, modifyuserParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string alias)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var snameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname, Size = 100 };
//            if (snameParam.Value == null)
//                snameParam.Value = System.DBNull.Value;

//            var sname2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@sname2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sname2, Size = 100 };
//            if (sname2Param.Value == null)
//                sname2Param.Value = System.DBNull.Value;

//            var tel1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel1, Size = 50 };
//            if (tel1Param.Value == null)
//                tel1Param.Value = System.DBNull.Value;

//            var tel2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@tel2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tel2, Size = 50 };
//            if (tel2Param.Value == null)
//                tel2Param.Value = System.DBNull.Value;

//            var faxParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fax", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = fax, Size = 50 };
//            if (faxParam.Value == null)
//                faxParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var contactnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactname, Size = 50 };
//            if (contactnameParam.Value == null)
//                contactnameParam.Value = System.DBNull.Value;

//            var contactTelParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@contactTel", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = contactTel, Size = 50 };
//            if (contactTelParam.Value == null)
//                contactTelParam.Value = System.DBNull.Value;

//            var addr1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@addr1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = addr1, Size = 100 };
//            if (addr1Param.Value == null)
//                addr1Param.Value = System.DBNull.Value;

//            var citynameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@cityname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = cityname, Size = 100 };
//            if (citynameParam.Value == null)
//                citynameParam.Value = System.DBNull.Value;

//            var postcode1Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode1", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode1, Size = 50 };
//            if (postcode1Param.Value == null)
//                postcode1Param.Value = System.DBNull.Value;

//            var postcode2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@postcode2", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = postcode2, Size = 50 };
//            if (postcode2Param.Value == null)
//                postcode2Param.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 3000 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var acceptpayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptpay", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptpay, Size = 10 };
//            if (acceptpayParam.Value == null)
//                acceptpayParam.Value = System.DBNull.Value;

//            var acceptorderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@acceptorder", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = acceptorder, Size = 20 };
//            if (acceptorderParam.Value == null)
//                acceptorderParam.Value = System.DBNull.Value;

//            var banknameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankname, Size = 50 };
//            if (banknameParam.Value == null)
//                banknameParam.Value = System.DBNull.Value;

//            var bankusernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankusername", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankusername, Size = 50 };
//            if (bankusernameParam.Value == null)
//                bankusernameParam.Value = System.DBNull.Value;

//            var banksortcodeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@banksortcode", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = banksortcode, Size = 50 };
//            if (banksortcodeParam.Value == null)
//                banksortcodeParam.Value = System.DBNull.Value;

//            var banknoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@bankno", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = bankno, Size = 50 };
//            if (banknoParam.Value == null)
//                banknoParam.Value = System.DBNull.Value;

//            var webcommisionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@webcommision", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = webcommision.GetValueOrDefault(), Precision = 5, Scale = 2 };
//            if (!webcommision.HasValue)
//                webcommisionParam.Value = System.DBNull.Value;

//            var expireddtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@expireddt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = expireddt.GetValueOrDefault() };
//            if (!expireddt.HasValue)
//                expireddtParam.Value = System.DBNull.Value;

//            var aliasParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@alias", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = alias, Size = 100 };
//            if (aliasParam.Value == null)
//                aliasParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shop_ADD] @shopid, @sname, @sname2, @tel1, @tel2, @fax, @email, @contactname, @contactTel, @addr1, @cityname, @postcode1, @postcode2, @description, @acceptpay, @acceptorder, @bankname, @bankusername, @banksortcode, @bankno, @webcommision, @expireddt, @alias", shopidParam, snameParam, sname2Param, tel1Param, tel2Param, faxParam, emailParam, contactnameParam, contactTelParam, addr1Param, citynameParam, postcode1Param, postcode2Param, descriptionParam, acceptpayParam, acceptorderParam, banknameParam, bankusernameParam, banksortcodeParam, banknoParam, webcommisionParam, expireddtParam, aliasParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShopBgpicture(int? shopid, string logo)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var logoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = logo, Size = 100 };
//            if (logoParam.Value == null)
//                logoParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_shop_bgpicture] @shopid, @logo", shopidParam, logoParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShopChanglogo(int? shopid, string logo)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var logoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@logo", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = logo, Size = 100 };
//            if (logoParam.Value == null)
//                logoParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_shop_changlogo] @shopid, @logo", shopidParam, logoParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid)
//        {
//            int procResult;
//            return UpShopGetModel(shopid, out procResult);
//        }

//        public System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid, out int procResult)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpShopGetModelReturnModel>("EXEC @procResult = [dbo].[UP_shop_GetModel] @shopid", shopidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpShopdeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, int? unitDistance, decimal? unitRate, string isDiscount, int? basicDistance2, decimal? minOrderAmount, decimal? freeAmount)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var costtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@costtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = costtype, Size = 1 };
//            if (costtypeParam.Value == null)
//                costtypeParam.Value = System.DBNull.Value;

//            var basicDistanceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicDistance", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicDistance.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicDistance.HasValue)
//                basicDistanceParam.Value = System.DBNull.Value;

//            var basicPriceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicPrice", SqlDbType = System.Data.SqlDbType.Decimal, Direction = System.Data.ParameterDirection.Input, Value = basicPrice.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!basicPrice.HasValue)
//                basicPriceParam.Value = System.DBNull.Value;

//            var unitDistanceParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@unitDistance", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = unitDistance.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!unitDistance.HasValue)
//                unitDistanceParam.Value = System.DBNull.Value;

//            var unitRateParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@unitRate", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = unitRate.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!unitRate.HasValue)
//                unitRateParam.Value = System.DBNull.Value;

//            var isDiscountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isDiscount", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isDiscount, Size = 1 };
//            if (isDiscountParam.Value == null)
//                isDiscountParam.Value = System.DBNull.Value;

//            var basicDistance2Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@basicDistance2", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = basicDistance2.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!basicDistance2.HasValue)
//                basicDistance2Param.Value = System.DBNull.Value;

//            var minOrderAmountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@minOrderAmount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = minOrderAmount.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!minOrderAmount.HasValue)
//                minOrderAmountParam.Value = System.DBNull.Value;

//            var freeAmountParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@freeAmount", SqlDbType = System.Data.SqlDbType.VarChar, Direction = System.Data.ParameterDirection.Input, Value = freeAmount.GetValueOrDefault(), Precision = 10, Scale = 2 };
//            if (!freeAmount.HasValue)
//                freeAmountParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shopdeliveryCost_ADD] @shopid, @costtype, @basicDistance, @basicPrice, @unitDistance, @unitRate, @isDiscount, @basicDistance2, @minOrderAmount, @freeAmount", shopidParam, costtypeParam, basicDistanceParam, basicPriceParam, unitDistanceParam, unitRateParam, isDiscountParam, basicDistance2Param, minOrderAmountParam, freeAmountParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShopdeliveryCostAdd2(int? shopid, string costtype)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var costtypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@costtype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = costtype, Size = 1 };
//            if (costtypeParam.Value == null)
//                costtypeParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shopdeliveryCost_ADD2] @shopid, @costtype", shopidParam, costtypeParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShoppingHolidayAdd(int? shopid, System.DateTime? fromDt, System.DateTime? toDt)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var fromDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@fromDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = fromDt.GetValueOrDefault() };
//            if (!fromDt.HasValue)
//                fromDtParam.Value = System.DBNull.Value;

//            var toDtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@toDT", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = toDt.GetValueOrDefault() };
//            if (!toDt.HasValue)
//                toDtParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shoppingHoliday_ADD] @shopid, @fromDT, @toDT", shopidParam, fromDtParam, toDtParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpShoppingHolidayDelete(int? holidayid, int? shopid)
//        {
//            var holidayidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@holidayid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = holidayid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!holidayid.HasValue)
//                holidayidParam.Value = System.DBNull.Value;

//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shoppingHoliday_Delete] @holidayid, @shopid", holidayidParam, shopidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid)
//        {
//            int procResult;
//            return UpShoppingHolidayGetList(shopid, out procResult);
//        }

//        public System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid, out int procResult)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpShoppingHolidayGetListReturnModel>("EXEC @procResult = [dbo].[UP_shoppingHoliday_GetList] @shopid", shopidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpShopworktimeAdd(int? shopid, string monFrToA, string monFrToB, string tuesFrToA, string tuesFrToB, string wedFrToA, string wedFrToB, string thurFrToA, string thurFrToB, string friFrToA, string friFrToB, string satFrToA, string satFrToB, string sunFrToA, string sunFrToB, string wt001, string haslunch)
//        {
//            var shopidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@shopid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = shopid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!shopid.HasValue)
//                shopidParam.Value = System.DBNull.Value;

//            var monFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@monFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = monFrToA, Size = 80 };
//            if (monFrToAParam.Value == null)
//                monFrToAParam.Value = System.DBNull.Value;

//            var monFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@monFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = monFrToB, Size = 80 };
//            if (monFrToBParam.Value == null)
//                monFrToBParam.Value = System.DBNull.Value;

//            var tuesFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tuesFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tuesFrToA, Size = 80 };
//            if (tuesFrToAParam.Value == null)
//                tuesFrToAParam.Value = System.DBNull.Value;

//            var tuesFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@tuesFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = tuesFrToB, Size = 80 };
//            if (tuesFrToBParam.Value == null)
//                tuesFrToBParam.Value = System.DBNull.Value;

//            var wedFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@wedFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = wedFrToA, Size = 80 };
//            if (wedFrToAParam.Value == null)
//                wedFrToAParam.Value = System.DBNull.Value;

//            var wedFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@wedFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = wedFrToB, Size = 80 };
//            if (wedFrToBParam.Value == null)
//                wedFrToBParam.Value = System.DBNull.Value;

//            var thurFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@thurFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = thurFrToA, Size = 80 };
//            if (thurFrToAParam.Value == null)
//                thurFrToAParam.Value = System.DBNull.Value;

//            var thurFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@thurFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = thurFrToB, Size = 80 };
//            if (thurFrToBParam.Value == null)
//                thurFrToBParam.Value = System.DBNull.Value;

//            var friFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@friFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = friFrToA, Size = 80 };
//            if (friFrToAParam.Value == null)
//                friFrToAParam.Value = System.DBNull.Value;

//            var friFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@friFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = friFrToB, Size = 80 };
//            if (friFrToBParam.Value == null)
//                friFrToBParam.Value = System.DBNull.Value;

//            var satFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@satFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = satFrToA, Size = 80 };
//            if (satFrToAParam.Value == null)
//                satFrToAParam.Value = System.DBNull.Value;

//            var satFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@satFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = satFrToB, Size = 80 };
//            if (satFrToBParam.Value == null)
//                satFrToBParam.Value = System.DBNull.Value;

//            var sunFrToAParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sunFrToA", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sunFrToA, Size = 80 };
//            if (sunFrToAParam.Value == null)
//                sunFrToAParam.Value = System.DBNull.Value;

//            var sunFrToBParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sunFrToB", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = sunFrToB, Size = 80 };
//            if (sunFrToBParam.Value == null)
//                sunFrToBParam.Value = System.DBNull.Value;

//            var wt001Param = new System.Data.SqlClient.SqlParameter { ParameterName = "@wt001", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = wt001, Size = 50 };
//            if (wt001Param.Value == null)
//                wt001Param.Value = System.DBNull.Value;

//            var haslunchParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@haslunch", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = haslunch, Size = 1 };
//            if (haslunchParam.Value == null)
//                haslunchParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_shopworktime_ADD] @shopid, @monFrToA, @monFrToB, @tuesFrToA, @tuesFrToB, @wedFrToA, @wedFrToB, @thurFrToA, @thurFrToB, @friFrToA, @friFrToB, @satFrToA, @satFrToB, @sunFrToA, @sunFrToB, @wt001, @haslunch", shopidParam, monFrToAParam, monFrToBParam, tuesFrToAParam, tuesFrToBParam, wedFrToAParam, wedFrToBParam, thurFrToAParam, thurFrToBParam, friFrToAParam, friFrToBParam, satFrToAParam, satFrToBParam, sunFrToAParam, sunFrToBParam, wt001Param, haslunchParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpSysMsgAdd(string msgtitle, string msgcontent, System.DateTime? msgdt, int? msgto)
//        {
//            var msgtitleParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgtitle", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = msgtitle, Size = 100 };
//            if (msgtitleParam.Value == null)
//                msgtitleParam.Value = System.DBNull.Value;

//            var msgcontentParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgcontent", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = msgcontent, Size = 500 };
//            if (msgcontentParam.Value == null)
//                msgcontentParam.Value = System.DBNull.Value;

//            var msgdtParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgdt", SqlDbType = System.Data.SqlDbType.DateTime, Direction = System.Data.ParameterDirection.Input, Value = msgdt.GetValueOrDefault() };
//            if (!msgdt.HasValue)
//                msgdtParam.Value = System.DBNull.Value;

//            var msgtoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgto", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgto.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgto.HasValue)
//                msgtoParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_sysMsg_ADD] @msgtitle, @msgcontent, @msgdt, @msgto", msgtitleParam, msgcontentParam, msgdtParam, msgtoParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpSysMsgDelete(int? msgid, int? msgto)
//        {
//            var msgidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgid.HasValue)
//                msgidParam.Value = System.DBNull.Value;

//            var msgtoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgto", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgto.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgto.HasValue)
//                msgtoParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_sysMsg_Delete] @msgid, @msgto", msgidParam, msgtoParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid)
//        {
//            int procResult;
//            return UpSysMsgGetModel(msgid, out procResult);
//        }

//        public System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid, out int procResult)
//        {
//            var msgidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgid.HasValue)
//                msgidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpSysMsgGetModelReturnModel>("EXEC @procResult = [dbo].[UP_sysMsg_GetModel] @msgid", msgidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpSysMsgUpdate(int? msgid, int? msgto)
//        {
//            var msgidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgid.HasValue)
//                msgidParam.Value = System.DBNull.Value;

//            var msgtoParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@msgto", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = msgto.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!msgto.HasValue)
//                msgtoParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_sysMsg_Update] @msgid, @msgto", msgidParam, msgtoParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUsercreditsAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var operateuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operateuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = operateuser, Size = 50 };
//            if (operateuserParam.Value == null)
//                operateuserParam.Value = System.DBNull.Value;

//            var scoreParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@score", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = score.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!score.HasValue)
//                scoreParam.Value = System.DBNull.Value;

//            var operationParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operation", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = operation, Size = 1 };
//            if (operationParam.Value == null)
//                operationParam.Value = System.DBNull.Value;

//            var scoretypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@scoretype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = scoretype, Size = 1 };
//            if (scoretypeParam.Value == null)
//                scoretypeParam.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 200 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_usercredits_ADD] @uid, @operateuser, @score, @operation, @scoretype, @description", uidParam, operateuserParam, scoreParam, operationParam, scoretypeParam, descriptionParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserRegAdd(out int? uid, string utype, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output, Precision = 10, Scale = 0 };
//            var utypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@utype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = utype, Size = 1 };
//            if (utypeParam.Value == null)
//                utypeParam.Value = System.DBNull.Value;

//            var genderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@gender", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = gender, Size = 1 };
//            if (genderParam.Value == null)
//                genderParam.Value = System.DBNull.Value;

//            var realnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@realname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = realname, Size = 100 };
//            if (realnameParam.Value == null)
//                realnameParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var pwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwd, Size = 50 };
//            if (pwdParam.Value == null)
//                pwdParam.Value = System.DBNull.Value;

//            var pwdquestionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwdquestion", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwdquestion, Size = 200 };
//            if (pwdquestionParam.Value == null)
//                pwdquestionParam.Value = System.DBNull.Value;

//            var pwdanswerParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwdanswer", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwdanswer, Size = 200 };
//            if (pwdanswerParam.Value == null)
//                pwdanswerParam.Value = System.DBNull.Value;

//            var birthdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@birthday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = birthday, Size = 25 };
//            if (birthdayParam.Value == null)
//                birthdayParam.Value = System.DBNull.Value;

//            var isnoticedParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isnoticed", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isnoticed, Size = 1 };
//            if (isnoticedParam.Value == null)
//                isnoticedParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_UserReg_ADD] @uid OUTPUT, @utype, @gender, @realname, @email, @pwd, @pwdquestion, @pwdanswer, @birthday, @isnoticed", uidParam, utypeParam, genderParam, realnameParam, emailParam, pwdParam, pwdquestionParam, pwdanswerParam, birthdayParam, isnoticedParam, procResultParam);
//            if (IsSqlParameterNull(uidParam))
//                uid = null;
//            else
//                uid = (int) uidParam.Value;
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserregBlockUser(int? uid, string block)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var blockParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@block", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = block, Size = 1 };
//            if (blockParam.Value == null)
//                blockParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_userreg_BlockUser] @uid, @block", uidParam, blockParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserregChangeemail(int? uid, string newemail)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var newemailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@newemail", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = newemail, Size = 300 };
//            if (newemailParam.Value == null)
//                newemailParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_userreg_changeemail] @uid, @newemail", uidParam, newemailParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserregChangepwd(int? uid, string pwd)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var pwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwd, Size = 50 };
//            if (pwdParam.Value == null)
//                pwdParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_userreg_changepwd] @uid, @pwd", uidParam, pwdParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserRegDelete(int? uid)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_UserReg_Delete] @uid", uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid)
//        {
//            int procResult;
//            return UpUserregGetInfoByUid(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid, out int procResult)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpUserregGetInfoByUidReturnModel>("EXEC @procResult = [dbo].[up_userreg_GetInfoByUid] @uid", uidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email)
//        {
//            int procResult;
//            return UpUserregGetpwdByMail(email, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email, out int procResult)
//        {
//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpUserregGetpwdByMailReturnModel>("EXEC @procResult = [dbo].[up_userreg_GetpwdByMail] @email", emailParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public UpUserregGetPwdQuestionReturnModel UpUserregGetPwdQuestion(int? uid, string mail)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var mailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mail", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mail, Size = 100 };
//            if (mailParam.Value == null)
//                mailParam.Value = System.DBNull.Value;


//            var procResultData = new UpUserregGetPwdQuestionReturnModel();
//            var cmd = Database.Connection.CreateCommand();
//            cmd.CommandType = System.Data.CommandType.StoredProcedure;
//            cmd.CommandText = "[dbo].[up_userreg_GetPwdQuestion]";
//            cmd.Parameters.Add(uidParam);
//            cmd.Parameters.Add(mailParam);

//            try
//            {
//                Database.Connection.Open();
//                var reader = cmd.ExecuteReader();
//                var objectContext = ((System.Data.Entity.Infrastructure.IObjectContextAdapter) this).ObjectContext;

//                procResultData.ResultSet1 = objectContext.Translate<UpUserregGetPwdQuestionReturnModel.ResultSetModel1>(reader).ToList();
//                reader.NextResult();

//                procResultData.ResultSet2 = objectContext.Translate<UpUserregGetPwdQuestionReturnModel.ResultSetModel2>(reader).ToList();
//            }
//            finally
//            {
//                Database.Connection.Close();
//            }
//            return procResultData;
//        }

//        public int UpUserregLockuserByid(int? uid, string islocked)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var islockedParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@islocked", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = islocked, Size = 1 };
//            if (islockedParam.Value == null)
//                islockedParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_userreg_LockuserByid] @uid, @islocked", uidParam, islockedParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserRegUpdate(int? uid, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var genderParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@gender", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = gender, Size = 1 };
//            if (genderParam.Value == null)
//                genderParam.Value = System.DBNull.Value;

//            var realnameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@realname", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = realname, Size = 100 };
//            if (realnameParam.Value == null)
//                realnameParam.Value = System.DBNull.Value;

//            var emailParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@email", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = email, Size = 100 };
//            if (emailParam.Value == null)
//                emailParam.Value = System.DBNull.Value;

//            var pwdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwd", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwd, Size = 50 };
//            if (pwdParam.Value == null)
//                pwdParam.Value = System.DBNull.Value;

//            var pwdquestionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwdquestion", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwdquestion, Size = 200 };
//            if (pwdquestionParam.Value == null)
//                pwdquestionParam.Value = System.DBNull.Value;

//            var pwdanswerParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@pwdanswer", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = pwdanswer, Size = 200 };
//            if (pwdanswerParam.Value == null)
//                pwdanswerParam.Value = System.DBNull.Value;

//            var birthdayParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@birthday", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = birthday, Size = 25 };
//            if (birthdayParam.Value == null)
//                birthdayParam.Value = System.DBNull.Value;

//            var isnoticedParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isnoticed", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = isnoticed, Size = 1 };
//            if (isnoticedParam.Value == null)
//                isnoticedParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_UserReg_Update] @uid, @gender, @realname, @email, @pwd, @pwdquestion, @pwdanswer, @birthday, @isnoticed", uidParam, genderParam, realnameParam, emailParam, pwdParam, pwdquestionParam, pwdanswerParam, birthdayParam, isnoticedParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserregUpdatelogintimeIp(string ip, int? uid)
//        {
//            var ipParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@ip", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = ip, Size = 50 };
//            if (ipParam.Value == null)
//                ipParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[up_userreg_updatelogintimeIp] @ip, @uid", ipParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserscoreAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var operateuserParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operateuser", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = operateuser, Size = 50 };
//            if (operateuserParam.Value == null)
//                operateuserParam.Value = System.DBNull.Value;

//            var scoreParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@score", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = score.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!score.HasValue)
//                scoreParam.Value = System.DBNull.Value;

//            var operationParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@operation", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = operation, Size = 1 };
//            if (operationParam.Value == null)
//                operationParam.Value = System.DBNull.Value;

//            var scoretypeParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@scoretype", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = scoretype, Size = 1 };
//            if (scoretypeParam.Value == null)
//                scoretypeParam.Value = System.DBNull.Value;

//            var descriptionParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@description", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = description, Size = 200 };
//            if (descriptionParam.Value == null)
//                descriptionParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_userscore_ADD] @uid, @operateuser, @score, @operation, @scoretype, @description", uidParam, operateuserParam, scoreParam, operationParam, scoretypeParam, descriptionParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpUserscoreDelete(int? sid, int? isadmin, int? uid)
//        {
//            var sidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = sid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!sid.HasValue)
//                sidParam.Value = System.DBNull.Value;

//            var isadminParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@isadmin", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = isadmin.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!isadmin.HasValue)
//                isadminParam.Value = System.DBNull.Value;

//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UP_userscore_Delete] @sid, @isadmin, @uid", sidParam, isadminParam, uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid)
//        {
//            int procResult;
//            return UpUserscoreGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid, out int procResult)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpUserscoreGetListReturnModel>("EXEC @procResult = [dbo].[UP_userscore_GetList] @uid", uidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid)
//        {
//            int procResult;
//            return UpUserscoreGetModel(sid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid, out int procResult)
//        {
//            var sidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@sid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = sid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!sid.HasValue)
//                sidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
//            var procResultData = Database.SqlQuery<UpUserscoreGetModelReturnModel>("EXEC @procResult = [dbo].[UP_userscore_GetModel] @sid", sidParam, procResultParam).ToList();

//            procResult = (int) procResultParam.Value;
//            return procResultData;
//        }

//        public int UpdateBasicAddr(int? uid, string username, string mobile)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var usernameParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@username", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = username, Size = 100 };
//            if (usernameParam.Value == null)
//                usernameParam.Value = System.DBNull.Value;

//            var mobileParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@mobile", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = mobile, Size = 50 };
//            if (mobileParam.Value == null)
//                mobileParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[updateBasicAddr] @uid, @username, @mobile", uidParam, usernameParam, mobileParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpdateOrderStatus(string orderid, string opt)
//        {
//            var orderidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@orderid", SqlDbType = System.Data.SqlDbType.NVarChar, Direction = System.Data.ParameterDirection.Input, Value = orderid, Size = 30 };
//            if (orderidParam.Value == null)
//                orderidParam.Value = System.DBNull.Value;

//            var optParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@opt", SqlDbType = System.Data.SqlDbType.Char, Direction = System.Data.ParameterDirection.Input, Value = opt, Size = 1 };
//            if (optParam.Value == null)
//                optParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UpdateOrderStatus] @orderid, @opt", orderidParam, optParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//        public int UpdateReferenceMember(int? uid)
//        {
//            var uidParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@uid", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = uid.GetValueOrDefault(), Precision = 10, Scale = 0 };
//            if (!uid.HasValue)
//                uidParam.Value = System.DBNull.Value;

//            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
//            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[UpdateReferenceMember] @uid", uidParam, procResultParam);
 
//            return (int) procResultParam.Value;
//        }

//    }

//    // ************************************************************************
//    // Fake Database context
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.18.0.0")]
//    public class FakeMyDbContext : IMyDbContext
//    {
//        public System.Data.Entity.DbSet<AdminAcc> AdminAccs { get; set; }
//        public System.Data.Entity.DbSet<Adv> Advs { get; set; }
//        public System.Data.Entity.DbSet<Advsearch> Advsearches { get; set; }
//        public System.Data.Entity.DbSet<AppUserInfo> AppUserInfoes { get; set; }
//        public System.Data.Entity.DbSet<AppUserSetting> AppUserSettings { get; set; }
//        public System.Data.Entity.DbSet<AppUserToDevice> AppUserToDevices { get; set; }
//        public System.Data.Entity.DbSet<Blocklist> Blocklists { get; set; }
//        public System.Data.Entity.DbSet<Cashreturn> Cashreturns { get; set; }
//        public System.Data.Entity.DbSet<Commission> Commissions { get; set; }
//        public System.Data.Entity.DbSet<CreditCard> CreditCards { get; set; }
//        public System.Data.Entity.DbSet<CustomerReview> CustomerReviews { get; set; }
//        public System.Data.Entity.DbSet<DeliveryAddr> DeliveryAddrs { get; set; }
//        public System.Data.Entity.DbSet<Deviceinfo> Deviceinfoes { get; set; }
//        public System.Data.Entity.DbSet<Favourite> Favourites { get; set; }
//        public System.Data.Entity.DbSet<Invitefriend> Invitefriends { get; set; }
//        public System.Data.Entity.DbSet<MemberCash> MemberCashes { get; set; }
//        public System.Data.Entity.DbSet<Menu> Menus { get; set; }
//        public System.Data.Entity.DbSet<Menubasic> Menubasics { get; set; }
//        public System.Data.Entity.DbSet<MenuBasicTemplate> MenuBasicTemplates { get; set; }
//        public System.Data.Entity.DbSet<MenuCat> MenuCats { get; set; }
//        public System.Data.Entity.DbSet<MenuCatBasicMenu> MenuCatBasicMenus { get; set; }
//        public System.Data.Entity.DbSet<Menucattemplate> Menucattemplates { get; set; }
//        public System.Data.Entity.DbSet<Menuoptionalcat> Menuoptionalcats { get; set; }
//        public System.Data.Entity.DbSet<MenuPrice> MenuPrices { get; set; }
//        public System.Data.Entity.DbSet<Menusideorder> Menusideorders { get; set; }
//        public System.Data.Entity.DbSet<MultilangMenu> MultilangMenus { get; set; }
//        public System.Data.Entity.DbSet<Newshopregi> Newshopregis { get; set; }
//        public System.Data.Entity.DbSet<OnlineUser> OnlineUsers { get; set; }
//        public System.Data.Entity.DbSet<Order> Orders { get; set; }
//        public System.Data.Entity.DbSet<Ordercomment> Ordercomments { get; set; }
//        public System.Data.Entity.DbSet<Ordercz> Orderczs { get; set; }
//        public System.Data.Entity.DbSet<Orderdelivery> Orderdeliveries { get; set; }
//        public System.Data.Entity.DbSet<Orderitem> Orderitems { get; set; }
//        public System.Data.Entity.DbSet<Ordernotice> Ordernotices { get; set; }
//        public System.Data.Entity.DbSet<Orderoperation> Orderoperations { get; set; }
//        public System.Data.Entity.DbSet<Orderpayment> Orderpayments { get; set; }
//        public System.Data.Entity.DbSet<PushNoticeQueue> PushNoticeQueues { get; set; }
//        public System.Data.Entity.DbSet<Recommend> Recommends { get; set; }
//        public System.Data.Entity.DbSet<RecPaidAmountInfo> RecPaidAmountInfoes { get; set; }
//        public System.Data.Entity.DbSet<ServiceTicket> ServiceTickets { get; set; }
//        public System.Data.Entity.DbSet<Shop> Shops { get; set; }
//        public System.Data.Entity.DbSet<ShopDelieveryArea> ShopDelieveryAreas { get; set; }
//        public System.Data.Entity.DbSet<ShopdeliveryCost> ShopdeliveryCosts { get; set; }
//        public System.Data.Entity.DbSet<Shopdiscount> Shopdiscounts { get; set; }
//        public System.Data.Entity.DbSet<ShopExtInfoForApp> ShopExtInfoForApps { get; set; }
//        public System.Data.Entity.DbSet<ShopJz> ShopJzs { get; set; }
//        public System.Data.Entity.DbSet<ShopJzDetail> ShopJzDetails { get; set; }
//        public System.Data.Entity.DbSet<ShoppingCart> ShoppingCarts { get; set; }
//        public System.Data.Entity.DbSet<ShoppingHoliday> ShoppingHolidays { get; set; }
//        public System.Data.Entity.DbSet<ShopTicket> ShopTickets { get; set; }
//        public System.Data.Entity.DbSet<Shoptransactiondetail> Shoptransactiondetails { get; set; }
//        public System.Data.Entity.DbSet<Shopviewtelrecord> Shopviewtelrecords { get; set; }
//        public System.Data.Entity.DbSet<Shopworktime> Shopworktimes { get; set; }
//        public System.Data.Entity.DbSet<Submenu> Submenus { get; set; }
//        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; }
//        public System.Data.Entity.DbSet<SysLog> SysLogs { get; set; }
//        public System.Data.Entity.DbSet<SysMsg> SysMsgs { get; set; }
//        public System.Data.Entity.DbSet<UserCreditInfo> UserCreditInfoes { get; set; }
//        public System.Data.Entity.DbSet<UserReg> UserRegs { get; set; }
//        public System.Data.Entity.DbSet<Userscore> Userscores { get; set; }
//        public System.Data.Entity.DbSet<Voucherinfo> Voucherinfoes { get; set; }
//        public System.Data.Entity.DbSet<VwAppUserProfile> VwAppUserProfiles { get; set; }
//        public System.Data.Entity.DbSet<VwCustomerreview> VwCustomerreviews { get; set; }
//        public System.Data.Entity.DbSet<VwGetAppDeviceInfo> VwGetAppDeviceInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwGetAppRestInfo> VwGetAppRestInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwGetOrderInfo> VwGetOrderInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwGetOrderInfoForAdmin> VwGetOrderInfoForAdmins { get; set; }
//        public System.Data.Entity.DbSet<VwGetOrderListForApp> VwGetOrderListForApps { get; set; }
//        public System.Data.Entity.DbSet<VwGetShopInfo> VwGetShopInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwGetShopInfo2> VwGetShopInfo2 { get; set; }
//        public System.Data.Entity.DbSet<VwGetShopJzDetail> VwGetShopJzDetails { get; set; }
//        public System.Data.Entity.DbSet<VwGetUserBalanceSummary> VwGetUserBalanceSummaries { get; set; }
//        public System.Data.Entity.DbSet<VwGetUserFavShopInfo> VwGetUserFavShopInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwGetUserInfo> VwGetUserInfoes { get; set; }
//        public System.Data.Entity.DbSet<VwOrdersValid> VwOrdersValids { get; set; }
//        public System.Data.Entity.DbSet<VwShopOrder> VwShopOrders { get; set; }
//        public System.Data.Entity.DbSet<VwShopsValid> VwShopsValids { get; set; }
//        public System.Data.Entity.DbSet<VwSysMsg> VwSysMsgs { get; set; }
//        public System.Data.Entity.DbSet<VwUser2Device> VwUser2Device { get; set; }
//        public System.Data.Entity.DbSet<VwUserBalanceSummary> VwUserBalanceSummaries { get; set; }
//        public System.Data.Entity.DbSet<VwValidOrder> VwValidOrders { get; set; }
//        public System.Data.Entity.DbSet<VwValidShop> VwValidShops { get; set; }
//        public System.Data.Entity.DbSet<Vwviewtel> Vwviewtels { get; set; }

//        public FakeMyDbContext()
//        {
//            AdminAccs = new FakeDbSet<AdminAcc>("Id");
//            Advs = new FakeDbSet<Adv>("Advid");
//            Advsearches = new FakeDbSet<Advsearch>("Advid");
//            AppUserInfoes = new FakeDbSet<AppUserInfo>("Appuserid");
//            AppUserSettings = new FakeDbSet<AppUserSetting>("Appuserid");
//            AppUserToDevices = new FakeDbSet<AppUserToDevice>("Infoid");
//            Blocklists = new FakeDbSet<Blocklist>("Blockid");
//            Cashreturns = new FakeDbSet<Cashreturn>("Id");
//            Commissions = new FakeDbSet<Commission>("Shopid");
//            CreditCards = new FakeDbSet<CreditCard>("Cardid");
//            CustomerReviews = new FakeDbSet<CustomerReview>("Reviewid");
//            DeliveryAddrs = new FakeDbSet<DeliveryAddr>("Addrid");
//            Deviceinfoes = new FakeDbSet<Deviceinfo>("Deviceid");
//            Favourites = new FakeDbSet<Favourite>("Fid");
//            Invitefriends = new FakeDbSet<Invitefriend>("Id");
//            MemberCashes = new FakeDbSet<MemberCash>("Cashid");
//            Menus = new FakeDbSet<Menu>("Mid");
//            Menubasics = new FakeDbSet<Menubasic>("Basicmenuid");
//            MenuBasicTemplates = new FakeDbSet<MenuBasicTemplate>("Basicmenuid");
//            MenuCats = new FakeDbSet<MenuCat>("Catid");
//            MenuCatBasicMenus = new FakeDbSet<MenuCatBasicMenu>("Indexid");
//            Menucattemplates = new FakeDbSet<Menucattemplate>("Catid");
//            Menuoptionalcats = new FakeDbSet<Menuoptionalcat>("Optioncatid", "Shopid");
//            MenuPrices = new FakeDbSet<MenuPrice>("Pid");
//            Menusideorders = new FakeDbSet<Menusideorder>("Sideorderid");
//            MultilangMenus = new FakeDbSet<MultilangMenu>("Menuid", "Menuname");
//            Newshopregis = new FakeDbSet<Newshopregi>("Regisid");
//            OnlineUsers = new FakeDbSet<OnlineUser>("Id");
//            Orders = new FakeDbSet<Order>("OrderId");
//            Ordercomments = new FakeDbSet<Ordercomment>("Cid");
//            Orderczs = new FakeDbSet<Ordercz>("Czid");
//            Orderdeliveries = new FakeDbSet<Orderdelivery>("Orderid");
//            Orderitems = new FakeDbSet<Orderitem>("Id");
//            Ordernotices = new FakeDbSet<Ordernotice>("Scode");
//            Orderoperations = new FakeDbSet<Orderoperation>("Id");
//            Orderpayments = new FakeDbSet<Orderpayment>("Id");
//            PushNoticeQueues = new FakeDbSet<PushNoticeQueue>("Pushid");
//            Recommends = new FakeDbSet<Recommend>("RecId");
//            RecPaidAmountInfoes = new FakeDbSet<RecPaidAmountInfo>("Infoid");
//            ServiceTickets = new FakeDbSet<ServiceTicket>("Ticketid");
//            Shops = new FakeDbSet<Shop>("Shopid");
//            ShopDelieveryAreas = new FakeDbSet<ShopDelieveryArea>("Did");
//            ShopdeliveryCosts = new FakeDbSet<ShopdeliveryCost>("Costid");
//            Shopdiscounts = new FakeDbSet<Shopdiscount>("Shopid");
//            ShopExtInfoForApps = new FakeDbSet<ShopExtInfoForApp>("Shopid");
//            ShopJzs = new FakeDbSet<ShopJz>("Jzid");
//            ShopJzDetails = new FakeDbSet<ShopJzDetail>("Id");
//            ShoppingCarts = new FakeDbSet<ShoppingCart>("Cartid");
//            ShoppingHolidays = new FakeDbSet<ShoppingHoliday>("Holidayid");
//            ShopTickets = new FakeDbSet<ShopTicket>("Id");
//            Shoptransactiondetails = new FakeDbSet<Shoptransactiondetail>("Tid");
//            Shopviewtelrecords = new FakeDbSet<Shopviewtelrecord>("Infoid");
//            Shopworktimes = new FakeDbSet<Shopworktime>("Shopid");
//            Submenus = new FakeDbSet<Submenu>("Smid");
//            Sysdiagrams = new FakeDbSet<Sysdiagram>("DiagramId");
//            SysLogs = new FakeDbSet<SysLog>("Logid");
//            SysMsgs = new FakeDbSet<SysMsg>("Msgid");
//            UserCreditInfoes = new FakeDbSet<UserCreditInfo>("Balanceid");
//            UserRegs = new FakeDbSet<UserReg>("Uid");
//            Userscores = new FakeDbSet<Userscore>("Sid");
//            Voucherinfoes = new FakeDbSet<Voucherinfo>("Voucherid");
//            VwAppUserProfiles = new FakeDbSet<VwAppUserProfile>("Appuserid", "Usertype");
//            VwCustomerreviews = new FakeDbSet<VwCustomerreview>("Sname", "Reviewid", "Shopid");
//            VwGetAppDeviceInfoes = new FakeDbSet<VwGetAppDeviceInfo>("Deviceid");
//            VwGetAppRestInfoes = new FakeDbSet<VwGetAppRestInfo>("Shopid", "Createdt", "Sname");
//            VwGetOrderInfoes = new FakeDbSet<VwGetOrderInfo>("Shopid", "OrderId", "Uid");
//            VwGetOrderInfoForAdmins = new FakeDbSet<VwGetOrderInfoForAdmin>("Shopid", "OrderId", "Uid");
//            VwGetOrderListForApps = new FakeDbSet<VwGetOrderListForApp>("Shopid", "OrderId");
//            VwGetShopInfoes = new FakeDbSet<VwGetShopInfo>("Loginname", "Uid", "Shopstatus");
//            VwGetShopInfo2 = new FakeDbSet<VwGetShopInfo2>("Loginname", "Uid");
//            VwGetShopJzDetails = new FakeDbSet<VwGetShopJzDetail>("Id", "Jzid", "Shopid", "Ishx");
//            VwGetUserBalanceSummaries = new FakeDbSet<VwGetUserBalanceSummary>("Userid", "Balanceamt", "Email");
//            VwGetUserFavShopInfoes = new FakeDbSet<VwGetUserFavShopInfo>("Fid", "Uid", "Sname");
//            VwGetUserInfoes = new FakeDbSet<VwGetUserInfo>("Uid", "Email");
//            VwOrdersValids = new FakeDbSet<VwOrdersValid>("OrderId", "Shopid", "Uid");
//            VwShopOrders = new FakeDbSet<VwShopOrder>("Shopid", "Sname");
//            VwShopsValids = new FakeDbSet<VwShopsValid>("Shopid", "Sname", "Uid");
//            VwSysMsgs = new FakeDbSet<VwSysMsg>("Msgto", "Msgid", "Msgtitle", "Msgdt", "Msgcontent", "Email");
//            VwUser2Device = new FakeDbSet<VwUser2Device>("Deviceid");
//            VwUserBalanceSummaries = new FakeDbSet<VwUserBalanceSummary>("Balanceid", "Userid", "Createdt", "Moneydirection", "Balanceamt");
//            VwValidOrders = new FakeDbSet<VwValidOrder>("OrderId", "Shopid", "Uid");
//            VwValidShops = new FakeDbSet<VwValidShop>("Shopid", "Sname");
//            Vwviewtels = new FakeDbSet<Vwviewtel>("Infoid", "Shopid", "Viewdt", "Sname");
//        }
        
//        public int SaveChangesCount { get; private set; } 
//        public int SaveChanges()
//        {
//            ++SaveChangesCount;
//            return 1;
//        }

//        public System.Threading.Tasks.Task<int> SaveChangesAsync()
//        {
//            ++SaveChangesCount;
//            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
//        }

//        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
//        {
//            ++SaveChangesCount;
//            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
//        }

//        protected virtual void Dispose(bool disposing)
//        {
//        }
        
//        public void Dispose()
//        {
//            Dispose(true);
//        }
        
//        // Stored Procedures
//        public int AddToBlockList(string orderid, string reason, string operateid)
//        {
 
//            return 0;
//        }

//        public int CancelOrders(string orderid, string isCancelled, System.DateTime? orderCancelledDt, string cancelComments)
//        {
 
//            return 0;
//        }

//        public int DeleAppDevice(int? deviceid)
//        {
 
//            return 0;
//        }

//        public int Deleapprestanduser(int? shopid)
//        {
 
//            return 0;
//        }

//        public int Deletejz(int? jzid)
//        {
 
//            return 0;
//        }

//        public int GetAdvByCondition(string pc, string tn)
//        {
 
//            return 0;
//        }

//        public int GetOrdersByCondition(string sqlwhere)
//        {
 
//            return 0;
//        }

//        public int GetOrdersByUid(int? uid, int? shopid, string dtsql)
//        {
 
//            return 0;
//        }

//        public int GetOrdersByUser(string email, int? shopid, string dtsql)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode)
//        {
//            int procResult;
//            return GetShopByPostCode(postcode, out procResult);
//        }

//        public System.Collections.Generic.List<GetShopByPostCodeReturnModel> GetShopByPostCode(string postcode, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<GetShopByPostCodeReturnModel>();
//        }

//        public int GetShopByTownName(string sn, string tn)
//        {
 
//            return 0;
//        }

//        public int ImportCatFromTempl(int? shopid, string cats)
//        {
 
//            return 0;
//        }

//        public int ImportPlFromTempl(int? shopid, string pls, string plcat)
//        {
 
//            return 0;
//        }

//        public int IsInBlockList(string orderid, out string ret)
//        {
//            ret = default(string);
 
//            return 0;
//        }

//        public int JzDetail(System.DateTime? frdt, System.DateTime? todt, int? shopid, decimal? stdcommrate, int? jzid, out string ret)
//        {
//            ret = default(string);
 
//            return 0;
//        }

//        public int JzDetailtmp(System.DateTime? frdt, System.DateTime? todt, int? shopid, int? jzid, out string ret)
//        {
//            ret = default(string);
 
//            return 0;
//        }

//        public int PfSysPageControl(string tableName, string tableFields, string sqlWhere, string orderFields, int? pageSize, int? pageIndex, out int? totalPage)
//        {
//            totalPage = default(int);
 
//            return 0;
//        }

//        public int PfSysPageControl2000(string tablename, string tableFields, int? pageIndex, int? pageSize, string sqlWhere, string orderFields, bool? intOrder, out int? totalPage)
//        {
//            totalPage = default(int);
 
//            return 0;
//        }

//        public int SpAdminAccAdd(string loginname, string loginpwd, System.DateTime? createtime, string rightcode, string isvalid, string isadmin)
//        {
 
//            return 0;
//        }

//        public int SpAdminAccUpdate(string loginname, string loginpwd, string rightcode, string isvalid, string isadmin)
//        {
 
//            return 0;
//        }

//        public int SpAdvpicAdd(int? advid, string pc, string townname, int? shopid, string shoploginname, System.DateTime? starttime, System.DateTime? endtime, string urllink, string advPic, int? indexno, int? clicknum)
//        {
 
//            return 0;
//        }

//        public int SpAdvsearchAdd(string postcode, int? indexno, string shopid, System.DateTime? startdt, System.DateTime? enddt, System.DateTime? createdt, string createuser)
//        {
 
//            return 0;
//        }

//        public int SpAppUserAdd(int? shopid, string password, string usertype, string username, string status, System.DateTime? createdt, string createuser, string loginstatus, out int? appuserid)
//        {
//            appuserid = default(int);
 
//            return 0;
//        }

//        public int SpAppuserExit(string apptokenstr)
//        {
 
//            return 0;
//        }

//        public int SpAppUserLogin(string loginname, string loginip, string apptokenstr, string devicetoken)
//        {
 
//            return 0;
//        }

//        public int SpAppUserSettingAdd(string operatecode, int? appuserid)
//        {
 
//            return 0;
//        }

//        public int SpDeleteOrder(string orderid)
//        {
 
//            return 0;
//        }

//        public int SpGetMenuInfoOfSets(int? shopid, int? mid, int? catid)
//        {
 
//            return 0;
//        }

//        public SpGetMenuInfosReturnModel SpGetMenuInfos(int? shopid, int? catid)
//        {
//            int procResult;
//            return SpGetMenuInfos(shopid, catid, out procResult);
//        }

//        public SpGetMenuInfosReturnModel SpGetMenuInfos(int? shopid, int? catid, out int procResult)
//        {

//            procResult = 0;
//            return new SpGetMenuInfosReturnModel();
//        }

//        public SpGetPlInfoReturnModel SpGetPlInfo(string menutype1, string menutype2, int? shopid)
//        {
//            int procResult;
//            return SpGetPlInfo(menutype1, menutype2, shopid, out procResult);
//        }

//        public SpGetPlInfoReturnModel SpGetPlInfo(string menutype1, string menutype2, int? shopid, out int procResult)
//        {

//            procResult = 0;
//            return new SpGetPlInfoReturnModel();
//        }

//        public int SpMenuAdd(int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string discountway, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? createDt, string flag, decimal? indexnum, int? mealamt)
//        {
 
//            return 0;
//        }

//        public int SpMenuUpdate(int? mid, int? shopid, string menuCat, string menuName, string menuName2, string menuDesc, string menuDesc2, decimal? price1, decimal? price2, string menutype, string menulogo, string menucode, string servicePeriod, string displayweekday, string hasSideOrder, string hasPl, System.DateTime? updateDt, string flag, decimal? indexnum, int? mealamt)
//        {
 
//            return 0;
//        }

//        public int SpMenuBasicAdd(int? shopid, string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum)
//        {
 
//            return 0;
//        }

//        public int SpMenuBasicDelete(int? basicmenuid, int? shopid)
//        {
 
//            return 0;
//        }

//        public int SpMenuBasicUpdate(int? basicmenuid, int? shopid, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001, decimal? indexnum)
//        {
 
//            return 0;
//        }

//        public int SpMenuBasicTemplateAdd(string menutype1, string menutype2, string mname, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001)
//        {
 
//            return 0;
//        }

//        public int SpMenuBasicTemplateUpdate(int? basicmenuid, string mname2, decimal? price1, decimal? price2, string menudesc2, string menudesc, string menucode, string flag, string menu001)
//        {
 
//            return 0;
//        }

//        public int SpMenuCatBasicMenuUpdate(int? catid, int? shopid, string menutype1, string menutype2, string basicmenuids)
//        {
 
//            return 0;
//        }

//        public int SpMenucattemplateAdd(decimal? indexnum, string catname, string catname2, string cat001)
//        {
 
//            return 0;
//        }

//        public int SpMenucattemplateUpdate(int? catid, decimal? indexnum, string catname, string catname2, string cat001)
//        {
 
//            return 0;
//        }

//        public int SpMenuOptionCatAdd(int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc)
//        {
 
//            return 0;
//        }

//        public int SpMenuOptionCatDelete(int? optioncatid, int? shopid)
//        {
 
//            return 0;
//        }

//        public int SpMenuOptionCatUpdate(decimal? optioncatid, int? shopid, string optionname, string optionname2, string flag, decimal? indexnum, string optiondesc)
//        {
 
//            return 0;
//        }

//        public int SpMultilangmenuAdd(string menuname, string name1, string name2, string name3, string name4, string name5, string name6, string name7)
//        {
 
//            return 0;
//        }

//        public int SpOrderdeliveryAdd(string orderid, string addr1, string addr2, string addr3, string townname, string postcode1, string postcode2, string contactname, string tel1, string tel2, System.DateTime? deliverdt, string deliverpeople, string comments)
//        {
 
//            return 0;
//        }

//        public int SpOrderitemAdd(string orderid, int? mid, int? submenuid, string menucode, string menuName, string menuNameE, string menuName2, string menuName2E, int? amount, decimal? price1, decimal? discountprice, decimal? totalprice, string menulogo, string menutype)
//        {
 
//            return 0;
//        }

//        public int SpOrderpaymentAdd(string orderid, string cardnumber, string cardtype, string name1, string name2, System.DateTime? paidtime, System.DateTime? applytime, decimal? paidamount, string isret)
//        {
 
//            return 0;
//        }

//        public int SpOrdersAdd(out string orderId, int? shopid, int? uid, string useremail, string payway, string ispaid, string ticketnumber, int? ticketvalue, string deliveryway, string comments, string orderstatus, System.DateTime? ordercreatedt, string isCancelled, decimal? totalprice1, decimal? discountRate, decimal? afterdiscount, decimal? deliverycharge, decimal? serviceCharge, decimal? creditcardCharge, decimal? tips, string isjz, decimal? totalamount, string userIp, System.DateTime? pickupdt, decimal? commrate, string isnew, decimal? shopcardcharge, decimal? paidwithcredit, string vouchercode)
//        {
//            orderId = default(string);
 
//            return 0;
//        }

//        public int SpRefreshByDeviceTokenId(string devicetoken)
//        {
 
//            return 0;
//        }

//        public int SpRefreshDeviceDt(string apptokenstr)
//        {
 
//            return 0;
//        }

//        public int SpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt)
//        {
 
//            return 0;
//        }

//        public int SpShopAddDeliveryInfo(int? shopid, string serviceType, string serviceTypeL, string deliveryWay, string deliverytime, string deliveryLastOt, decimal? deliveryMinOrder)
//        {
 
//            return 0;
//        }

//        public int SpShopChangeboard(string board, int? shopid)
//        {
 
//            return 0;
//        }

//        public int SpShopUpdate(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string logo, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string acceptCustomerOpt)
//        {
 
//            return 0;
//        }

//        public int SpShopUpdate2(int? shopid, string sname, string sname2, string mealtype, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string addr2, string cityname, string postcode1, string postcode2, string description, System.DateTime? updateTime, string alias, string acceptpay, string orderlang, string acceptorder)
//        {
 
//            return 0;
//        }

//        public int SpShopUpdate3(int? shopid, string description, System.DateTime? updateTime, string alias, string orderlang)
//        {
 
//            return 0;
//        }

//        public int SpShopDelieveryAreaAdd(int? shopid, string postcode1, decimal? delieveryCost, string comments, System.DateTime? createDt, string flag1, string bak001)
//        {
 
//            return 0;
//        }

//        public int SpShopDelieveryAreaUpdate(int? did, int? shopid, decimal? delieveryCost, string comments, string flag1, string bak001)
//        {
 
//            return 0;
//        }

//        public int SpShopdiscountUpdate(int? shopid, string board, string discountway, decimal? minorderamt, int? discountrate)
//        {
 
//            return 0;
//        }

//        public int SpShopJz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret)
//        {
//            ret = default(string);
 
//            return 0;
//        }

//        public int SpShoppingCartAdd(int? customerId, string customerSessionId, System.DateTime? createdOn, System.DateTime? updateOn, int? shopid, int? productId, int? mainfoodid, string menuOptionIDs, string subProductId, int? quantity)
//        {
 
//            return 0;
//        }

//        public int SpShoppingCartUpdate(int? cartid, int? customerId, string customerSessionId, System.DateTime? updateOn, int? quantity, int? productId, string subProductId, string opt)
//        {
 
//            return 0;
//        }

//        public int SpShopunjz(System.DateTime? frdt, System.DateTime? todt, decimal? stdcommrate, string shoploginname, string createUser, out string ret)
//        {
//            ret = default(string);
 
//            return 0;
//        }

//        public int SpSysLogAdd(string userid, string actstr, System.DateTime? actdt, string priority)
//        {
 
//            return 0;
//        }

//        public int SpUserCreditInfoAdd(int? shopid, int? userid, string moneydirection, decimal? amt, string comment, string orderid, System.DateTime? createdt)
//        {
 
//            return 0;
//        }

//        public int SpUserregChangeCredits(int? sid, int? uid, string act)
//        {
 
//            return 0;
//        }

//        public int SpUserregChangeScore(int? sid, int? uid, string act)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email)
//        {
//            int procResult;
//            return SpUserRegExist(email, out procResult);
//        }

//        public System.Collections.Generic.List<SpUserRegExistReturnModel> SpUserRegExist(string email, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<SpUserRegExistReturnModel>();
//        }

//        public int SpUserregUpdateutype(string upwd, string utype, int? uid)
//        {
 
//            return 0;
//        }

//        public int SpViewtelAdd(int? shopid, System.DateTime? actdt)
//        {
 
//            return 0;
//        }

//        public int UpCreateShopUser(string utype, string pwd, out int? uid, out string email)
//        {
//            uid = default(int);
//            email = default(string);
 
//            return 0;
//        }

//        public int UpCreditCardAdd(int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2)
//        {
 
//            return 0;
//        }

//        public int UpCreditCardDelete(int? cardid, int? uid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid)
//        {
//            int procResult;
//            return UpCreditCardGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpCreditCardGetListReturnModel> UpCreditCardGetList(int? uid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpCreditCardGetListReturnModel>();
//        }

//        public int UpCreditCardUpdate(int? cardid, int? uid, string acct, string acctType, string street, string city, string state, string country, string zip, int? cardIssue, string cardStart, string expDate, string firstName, string lastName, string cvv2)
//        {
 
//            return 0;
//        }

//        public int UpCustomerReviewAdd(int? uid, string email, decimal? rate1, decimal? rate2, decimal? rate3, decimal? rate4, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid, string comment, string replyMsg)
//        {
 
//            return 0;
//        }

//        public int UpCustomerReviewDelete(int? reviewid, int? shopid)
//        {
 
//            return 0;
//        }

//        public int UpCustomerReviewForMealAdd(int? uid, string email, decimal? rate1, System.DateTime? reviewDate, string reviewtype, int? objid, string orderid)
//        {
 
//            return 0;
//        }

//        public int UpDeliveryAddrAdd(out int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile)
//        {
//            addrid = default(int);
 
//            return 0;
//        }

//        public int UpDeliveryAddrDelete(int? addrid, int? uid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid)
//        {
//            int procResult;
//            return UpDeliveryAddrGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel> UpDeliveryAddrGetList(int? uid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpDeliveryAddrGetListReturnModel>();
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid)
//        {
//            int procResult;
//            return UpDeliveryAddrGetModelById(addrid, out procResult);
//        }

//        public System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel> UpDeliveryAddrGetModelById(int? addrid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpDeliveryAddrGetModelByIdReturnModel>();
//        }

//        public int UpDeliveryAddrUpdate(int? addrid, int? uid, string username, string addrname, string addr1, string addr2, string addr3, string cityname, string postcode1, string postcode2, string tel, string comments, string flag, string mobile)
//        {
 
//            return 0;
//        }

//        public int UpDeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, decimal? freeAmount, decimal? unitRate)
//        {
 
//            return 0;
//        }

//        public int UpFavouritesAdd(out int? fid, int? uid, string ftype, int? shopid, int? mid, System.DateTime? createDt, string flag)
//        {
//            fid = default(int);
 
//            return 0;
//        }

//        public int UpFavouritesDelete(int? fid, int? uid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid)
//        {
//            int procResult;
//            return UpFavouritesGetModel(fid, out procResult);
//        }

//        public System.Collections.Generic.List<UpFavouritesGetModelReturnModel> UpFavouritesGetModel(int? fid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpFavouritesGetModelReturnModel>();
//        }

//        public UpGetUserEmailReturnModel UpGetUserEmail(string utype)
//        {
//            int procResult;
//            return UpGetUserEmail(utype, out procResult);
//        }

//        public UpGetUserEmailReturnModel UpGetUserEmail(string utype, out int procResult)
//        {

//            procResult = 0;
//            return new UpGetUserEmailReturnModel();
//        }

//        public int UpMenuCatAdd(int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? createDt, decimal? indexnum, string logostr)
//        {
 
//            return 0;
//        }

//        public int UpMenuCatDelete(out string logostr, int? shopid, int? catid)
//        {
//            logostr = default(string);
 
//            return 0;
//        }

//        public int UpMenuCatUpdate(int? catid, int? shopid, string catName, string catName2, string description, string description2, string servicePeriod, string displayweekday, string pcsetting, System.DateTime? modifiedDt, decimal? indexnum, string logostr)
//        {
 
//            return 0;
//        }

//        public int UpOnlineUserAdd(int? uid, string urealname, System.DateTime? loginTime, System.DateTime? lastUpdateTime, string utype)
//        {
 
//            return 0;
//        }

//        public int UpOrderczAdd(System.DateTime? czdt, string orderid, string comments, decimal? amt, string operateid)
//        {
 
//            return 0;
//        }

//        public int UpRecommendAdd(int? recUid, string recName, string shopname, string townname, string deliveryArea, string addr, string tel)
//        {
 
//            return 0;
//        }

//        public int UpRecommendDelete(int? recId)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId)
//        {
//            int procResult;
//            return UpRecommendGetModel(recId, out procResult);
//        }

//        public System.Collections.Generic.List<UpRecommendGetModelReturnModel> UpRecommendGetModel(int? recId, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpRecommendGetModelReturnModel>();
//        }

//        public int UpServiceTicketAdd(string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string createuser)
//        {
 
//            return 0;
//        }

//        public int UpServiceTicketUpdate(int? ticketid, string orderid, int? userid, int? shopid, string tele, string email, string isnormal, string ismanager, string iscritical, string comments, string status, string modifyuser)
//        {
 
//            return 0;
//        }

//        public int UpShopAdd(int? shopid, string sname, string sname2, string tel1, string tel2, string fax, string email, string contactname, string contactTel, string addr1, string cityname, string postcode1, string postcode2, string description, string acceptpay, string acceptorder, string bankname, string bankusername, string banksortcode, string bankno, decimal? webcommision, System.DateTime? expireddt, string alias)
//        {
 
//            return 0;
//        }

//        public int UpShopBgpicture(int? shopid, string logo)
//        {
 
//            return 0;
//        }

//        public int UpShopChanglogo(int? shopid, string logo)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid)
//        {
//            int procResult;
//            return UpShopGetModel(shopid, out procResult);
//        }

//        public System.Collections.Generic.List<UpShopGetModelReturnModel> UpShopGetModel(int? shopid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpShopGetModelReturnModel>();
//        }

//        public int UpShopdeliveryCostAdd(int? shopid, string costtype, int? basicDistance, decimal? basicPrice, int? unitDistance, decimal? unitRate, string isDiscount, int? basicDistance2, decimal? minOrderAmount, decimal? freeAmount)
//        {
 
//            return 0;
//        }

//        public int UpShopdeliveryCostAdd2(int? shopid, string costtype)
//        {
 
//            return 0;
//        }

//        public int UpShoppingHolidayAdd(int? shopid, System.DateTime? fromDt, System.DateTime? toDt)
//        {
 
//            return 0;
//        }

//        public int UpShoppingHolidayDelete(int? holidayid, int? shopid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid)
//        {
//            int procResult;
//            return UpShoppingHolidayGetList(shopid, out procResult);
//        }

//        public System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel> UpShoppingHolidayGetList(int? shopid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpShoppingHolidayGetListReturnModel>();
//        }

//        public int UpShopworktimeAdd(int? shopid, string monFrToA, string monFrToB, string tuesFrToA, string tuesFrToB, string wedFrToA, string wedFrToB, string thurFrToA, string thurFrToB, string friFrToA, string friFrToB, string satFrToA, string satFrToB, string sunFrToA, string sunFrToB, string wt001, string haslunch)
//        {
 
//            return 0;
//        }

//        public int UpSysMsgAdd(string msgtitle, string msgcontent, System.DateTime? msgdt, int? msgto)
//        {
 
//            return 0;
//        }

//        public int UpSysMsgDelete(int? msgid, int? msgto)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid)
//        {
//            int procResult;
//            return UpSysMsgGetModel(msgid, out procResult);
//        }

//        public System.Collections.Generic.List<UpSysMsgGetModelReturnModel> UpSysMsgGetModel(int? msgid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpSysMsgGetModelReturnModel>();
//        }

//        public int UpSysMsgUpdate(int? msgid, int? msgto)
//        {
 
//            return 0;
//        }

//        public int UpUsercreditsAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description)
//        {
 
//            return 0;
//        }

//        public int UpUserRegAdd(out int? uid, string utype, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed)
//        {
//            uid = default(int);
 
//            return 0;
//        }

//        public int UpUserregBlockUser(int? uid, string block)
//        {
 
//            return 0;
//        }

//        public int UpUserregChangeemail(int? uid, string newemail)
//        {
 
//            return 0;
//        }

//        public int UpUserregChangepwd(int? uid, string pwd)
//        {
 
//            return 0;
//        }

//        public int UpUserRegDelete(int? uid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid)
//        {
//            int procResult;
//            return UpUserregGetInfoByUid(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel> UpUserregGetInfoByUid(int? uid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpUserregGetInfoByUidReturnModel>();
//        }

//        public System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email)
//        {
//            int procResult;
//            return UpUserregGetpwdByMail(email, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel> UpUserregGetpwdByMail(string email, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpUserregGetpwdByMailReturnModel>();
//        }

//        public UpUserregGetPwdQuestionReturnModel UpUserregGetPwdQuestion(int? uid, string mail)
//        {
//            int procResult;
//            return UpUserregGetPwdQuestion(uid, mail, out procResult);
//        }

//        public UpUserregGetPwdQuestionReturnModel UpUserregGetPwdQuestion(int? uid, string mail, out int procResult)
//        {

//            procResult = 0;
//            return new UpUserregGetPwdQuestionReturnModel();
//        }

//        public int UpUserregLockuserByid(int? uid, string islocked)
//        {
 
//            return 0;
//        }

//        public int UpUserRegUpdate(int? uid, string gender, string realname, string email, string pwd, string pwdquestion, string pwdanswer, string birthday, string isnoticed)
//        {
 
//            return 0;
//        }

//        public int UpUserregUpdatelogintimeIp(string ip, int? uid)
//        {
 
//            return 0;
//        }

//        public int UpUserscoreAdd(int? uid, string operateuser, int? score, string operation, string scoretype, string description)
//        {
 
//            return 0;
//        }

//        public int UpUserscoreDelete(int? sid, int? isadmin, int? uid)
//        {
 
//            return 0;
//        }

//        public System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid)
//        {
//            int procResult;
//            return UpUserscoreGetList(uid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserscoreGetListReturnModel> UpUserscoreGetList(int? uid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpUserscoreGetListReturnModel>();
//        }

//        public System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid)
//        {
//            int procResult;
//            return UpUserscoreGetModel(sid, out procResult);
//        }

//        public System.Collections.Generic.List<UpUserscoreGetModelReturnModel> UpUserscoreGetModel(int? sid, out int procResult)
//        {

//            procResult = 0;
//            return new System.Collections.Generic.List<UpUserscoreGetModelReturnModel>();
//        }

//        public int UpdateBasicAddr(int? uid, string username, string mobile)
//        {
 
//            return 0;
//        }

//        public int UpdateOrderStatus(string orderid, string opt)
//        {
 
//            return 0;
//        }

//        public int UpdateReferenceMember(int? uid)
//        {
 
//            return 0;
//        }

//    }

//    // ************************************************************************
//    // Fake DbSet
//    // Implementing Find:
//    //      The Find method is difficult to implement in a generic fashion. If
//    //      you need to test code that makes use of the Find method it is
//    //      easiest to create a test DbSet for each of the entity types that
//    //      need to support find. You can then write logic to find that
//    //      particular type of entity, as shown below:
//    //      public class FakeBlogDbSet : FakeDbSet<Blog>
//    //      {
//    //          public override Blog Find(params object[] keyValues)
//    //          {
//    //              var id = (int) keyValues.Single();
//    //              return this.SingleOrDefault(b => b.BlogId == id);
//    //          }
//    //      }
//    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.18.0.0")]
//    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class 
//    { 
//        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
//        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
//        private readonly IQueryable _query;
 
//        public FakeDbSet() 
//        { 
//            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>(); 
//            _query = _data.AsQueryable(); 
//        }

//        public FakeDbSet(params string[] primaryKeys)
//        {
//            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
//            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>(); 
//            _query = _data.AsQueryable(); 
//        }

//        public override TEntity Find(params object[] keyValues)
//        {
//            if (_primaryKeys == null)
//                throw new System.ArgumentException("No primary keys defined");
//            if (keyValues.Length != _primaryKeys.Length)
//                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

//            var keyQuery = this.AsQueryable();
//            keyQuery = keyValues
//                .Select((t, i) => i)
//                .Aggregate(keyQuery,
//                    (current, x) =>
//                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

//            return keyQuery.SingleOrDefault();
//        }

//        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
//        {
//            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
//        }

//        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
//        {
//            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
//        }

//        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
//        {
//            if (entities == null) throw new System.ArgumentNullException("entities");
//            var items = entities.ToList();
//            foreach (var entity in items)
//            {
//                _data.Add(entity);
//            }
//            return items;
//        }
        
//        public override TEntity Add(TEntity item) 
//        {
//            if (item == null) throw new System.ArgumentNullException("item");
//            _data.Add(item); 
//            return item; 
//        } 
 
//        public override TEntity Remove(TEntity item) 
//        {
//            if (item == null) throw new System.ArgumentNullException("item");
//            _data.Remove(item); 
//            return item; 
//        } 
 
//        public override TEntity Attach(TEntity item) 
//        {
//            if (item == null) throw new System.ArgumentNullException("item");
//            _data.Add(item); 
//            return item; 
//        } 
 
//        public override TEntity Create() 
//        { 
//            return System.Activator.CreateInstance<TEntity>(); 
//        } 
 
//        public override TDerivedEntity Create<TDerivedEntity>() 
//        { 
//            return System.Activator.CreateInstance<TDerivedEntity>(); 
//        } 
 
//        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local 
//        { 
//            get { return _data; } 
//        } 
 
//        System.Type IQueryable.ElementType
//        { 
//            get { return _query.ElementType; } 
//        } 
 
//        System.Linq.Expressions.Expression IQueryable.Expression 
//        { 
//            get { return _query.Expression; } 
//        } 
 
//        IQueryProvider IQueryable.Provider 
//        { 
//            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); } 
//        } 
 
//        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() 
//        { 
//            return _data.GetEnumerator(); 
//        } 
 
//        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator() 
//        { 
//            return _data.GetEnumerator(); 
//        } 
 
//        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator() 
//        { 
//            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator()); 
//        }
//    } 
 
//    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider 
//    { 
//        private readonly IQueryProvider _inner; 
 
//        public FakeDbAsyncQueryProvider(IQueryProvider inner) 
//        { 
//            _inner = inner; 
//        } 
 
//        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression) 
//        { 
//            return new FakeDbAsyncEnumerable<TEntity>(expression); 
//        } 
 
//        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression) 
//        { 
//            return new FakeDbAsyncEnumerable<TElement>(expression); 
//        } 
 
//        public object Execute(System.Linq.Expressions.Expression expression) 
//        { 
//            return _inner.Execute(expression); 
//        } 
 
//        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression) 
//        { 
//            return _inner.Execute<TResult>(expression); 
//        } 
 
//        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken) 
//        { 
//            return System.Threading.Tasks.Task.FromResult(Execute(expression)); 
//        } 
 
//        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken) 
//        { 
//            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression)); 
//        } 
//    } 
 
//    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T> 
//    { 
//        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable) 
//            : base(enumerable) 
//        { } 
 
//        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression) 
//            : base(expression) 
//        { } 
 
//        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator() 
//        { 
//            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator()); 
//        } 
 
//        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator() 
//        { 
//            return GetAsyncEnumerator(); 
//        } 
 
//        IQueryProvider IQueryable.Provider 
//        { 
//            get { return new FakeDbAsyncQueryProvider<T>(this); } 
//        } 
//    } 
 
//    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> 
//    { 
//        private readonly System.Collections.Generic.IEnumerator<T> _inner; 
 
//        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner) 
//        { 
//            _inner = inner; 
//        } 
 
//        public void Dispose() 
//        { 
//            _inner.Dispose(); 
//        } 
 
//        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken) 
//        { 
//            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext()); 
//        } 
 
//        public T Current 
//        { 
//            get { return _inner.Current; } 
//        } 
 
//        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current 
//        { 
//            get { return Current; } 
//        } 
//    }

//    // ************************************************************************
//    // POCO classes

//    // adminAcc
//    public class AdminAcc
//    {
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 管理员登录帐号
//        ///</summary>
//        public string Loginname { get; set; } // loginname

//        ///<summary>
//        /// 管理员登录密码
//        ///</summary>
//        public string Loginpwd { get; set; } // loginpwd

//        ///<summary>
//        /// 帐号创建时间
//        ///</summary>
//        public System.DateTime? Createtime { get; set; } // createtime

//        ///<summary>
//        /// 管理员权限代码，多个用分号隔开,如001,002等
//        ///</summary>
//        public string Rightcode { get; set; } // rightcode

//        ///<summary>
//        /// 最近登录时间
//        ///</summary>
//        public System.DateTime? Lastlogindt { get; set; } // lastlogindt

//        ///<summary>
//        /// 最近登录ip
//        ///</summary>
//        public string Lastloginip { get; set; } // lastloginip

//        ///<summary>
//        /// 用户帐号是否有效.Y有效，N。无效，用户暂无法登录，缺省为Y
//        ///</summary>
//        public string Isvalid { get; set; } // isvalid

//        ///<summary>
//        /// 是否超级管理员Y，是，N不是。缺省为N
//        ///</summary>
//        public string Isadmin { get; set; } // isadmin
        
//        public AdminAcc()
//        {
//            Isvalid = "Y";
//            Isadmin = "N";
//        }
//    }

//    // adv
//    public class Adv
//    {
//        public int Advid { get; set; } // advid (Primary key)
//        public string Pc { get; set; } // pc
//        public string Townname { get; set; } // townname
//        public int? Shopid { get; set; } // shopid
//        public string Shoploginname { get; set; } // shoploginname
//        public System.DateTime? Starttime { get; set; } // starttime
//        public System.DateTime? Endtime { get; set; } // endtime
//        public string Urllink { get; set; } // urllink
//        public string AdvPic { get; set; } // advPic
//        public int? Indexno { get; set; } // indexno
//        public int? Clicknum { get; set; } // clicknum
//        public System.DateTime? Recdate { get; set; } // recdate
//        public string Advposition { get; set; } // advposition
//    }

//    // advsearch
//    public class Advsearch
//    {
//        public int Advid { get; set; } // advid (Primary key)

//        ///<summary>
//        /// 广告所选的邮編第一部分
//        ///</summary>
//        public string Postcode { get; set; } // postcode

//        ///<summary>
//        /// 顺序号
//        ///</summary>
//        public int? Indexno { get; set; } // indexno

//        ///<summary>
//        /// 餐馆ID
//        ///</summary>
//        public string Shopid { get; set; } // shopid

//        ///<summary>
//        /// 广告有效开始时间
//        ///</summary>
//        public System.DateTime? Startdt { get; set; } // startdt

//        ///<summary>
//        /// 广告有效结束时间
//        ///</summary>
//        public System.DateTime? Enddt { get; set; } // enddt

//        ///<summary>
//        /// 创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 创建人ID
//        ///</summary>
//        public string Createuser { get; set; } // createuser
//    }

//    // AppUserInfo
//    public class AppUserInfo
//    {
//        public int Appuserid { get; set; } // appuserid (Primary key)

//        ///<summary>
//        /// 餐馆ID
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 用户登录名
//        ///</summary>
//        public string Loginname { get; set; } // loginname
//        public string Password { get; set; } // password

//        ///<summary>
//        /// 用户类型：0-老板用户 1-COUNTER 2-司机
//        ///</summary>
//        public string Usertype { get; set; } // usertype

//        ///<summary>
//        /// 用户真实姓名
//        ///</summary>
//        public string Username { get; set; } // username

//        ///<summary>
//        /// 用户状态 1:有效 0-锁定
//        ///</summary>
//        public string Status { get; set; } // status

//        ///<summary>
//        /// 登录时间
//        ///</summary>
//        public System.DateTime? Logindt { get; set; } // logindt

//        ///<summary>
//        /// 用户创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 创建人
//        ///</summary>
//        public string Createuser { get; set; } // createuser

//        ///<summary>
//        /// 用户登录IP
//        ///</summary>
//        public string Loginip { get; set; } // loginip

//        ///<summary>
//        /// 登录状态 Y-为登录，N为退出
//        ///</summary>
//        public string Loginstatus { get; set; } // loginstatus

//        ///<summary>
//        /// 连续错误登录次数
//        ///</summary>
//        public int? LoginErrCount { get; set; } // LoginErrCount

//        ///<summary>
//        /// 用户登录后生成，并返回给客户端的令牌，客户端每次访问接口需要提供这个TOKEN。
//        ///</summary>
//        public string Apptokenstr { get; set; } // apptokenstr
        
//        public AppUserInfo()
//        {
//            LoginErrCount = 0;
//        }
//    }

//    // AppUserSetting
//    public class AppUserSetting
//    {

//        ///<summary>
//        /// 关联用户表AppUserInfo.appuserid
//        ///</summary>
//        public int Appuserid { get; set; } // appuserid (Primary key)

//        ///<summary>
//        /// 用户操作权限代码: counter用户有效.0-接单 1-查看帐单 2-查询历史订单 3-删除订单
//        ///</summary>
//        public string Operatecode { get; set; } // operatecode

//        ///<summary>
//        /// 是否接单 1-接单 0-不接单
//        ///</summary>
//        public string Istakeorder { get; set; } // istakeorder

//        ///<summary>
//        /// 新订单提示音
//        ///</summary>
//        public string Neworderalertfile { get; set; } // neworderalertfile

//        ///<summary>
//        /// 信息提示音
//        ///</summary>
//        public string Infoalertfile { get; set; } // infoalertfile

//        ///<summary>
//        /// 普通员工是否当班 1-当班 0-不当班，不当班需填写日期
//        ///</summary>
//        public string Onduty { get; set; } // onduty

//        ///<summary>
//        /// 不当班到期时间，包括日期\时间
//        ///</summary>
//        public System.DateTime? Offdutytodt { get; set; } // offdutytodt

//        ///<summary>
//        /// APP端用户语言版本0-中文 1-英文
//        ///</summary>
//        public string Langopt { get; set; } // langopt
        
//        public AppUserSetting()
//        {
//            Langopt = "1";
//        }
//    }

//    // AppUserToDevice
//    public class AppUserToDevice
//    {

//        ///<summary>
//        /// 顺序号
//        ///</summary>
//        public decimal Infoid { get; set; } // infoid (Primary key)

//        ///<summary>
//        /// 设备的ID（对应deviceinfo.devicetoken）
//        ///</summary>
//        public string Devicetoken { get; set; } // devicetoken

//        ///<summary>
//        /// 餐馆ID.用户登录后填写此值.注销后则删除此值
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 对应AppUserInfo里用户主键.用户在客户端登录成功则填写，注销时删除此值
//        ///</summary>
//        public int? Appuserid { get; set; } // appuserid
//    }

//    // blocklist
//    public class Blocklist
//    {

//        ///<summary>
//        /// 黑名单ID，自动增长
//        ///</summary>
//        public int Blockid { get; set; } // blockid (Primary key)

//        ///<summary>
//        /// 邮件地址
//        ///</summary>
//        public string Email { get; set; } // email

//        ///<summary>
//        /// 移动电话
//        ///</summary>
//        public string Mobile { get; set; } // mobile

//        ///<summary>
//        /// 座机号
//        ///</summary>
//        public string Landline { get; set; } // landline

//        ///<summary>
//        /// 订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 此订单所在的餐馆ID
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 加入黑名单的时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 加入黑名单的原因
//        ///</summary>
//        public string Reason { get; set; } // reason

//        ///<summary>
//        /// 加入人的ID号
//        ///</summary>
//        public string Createuser { get; set; } // createuser
//    }

//    // cashreturn
//    public class Cashreturn
//    {
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 用户ID
//        ///</summary>
//        public int? Uid { get; set; } // uid

//        ///<summary>
//        /// 现金详细表ID=membercash.cashid
//        ///</summary>
//        public int? Cashid { get; set; } // cashid

//        ///<summary>
//        /// 提取现金金额
//        ///</summary>
//        public decimal? Amount { get; set; } // amount

//        ///<summary>
//        /// 现金提取时间
//        ///</summary>
//        public System.DateTime? Atime { get; set; } // atime

//        ///<summary>
//        /// 提取款款卡的详细信息ID=creditcard.cardid
//        ///</summary>
//        public int? Cardid { get; set; } // cardid

//        ///<summary>
//        /// 卡提取状态。0，处理中;1.己完成2.提取失败。
//        ///</summary>
//        public string Status { get; set; } // status

//        ///<summary>
//        /// 备注
//        ///</summary>
//        public string Comment { get; set; } // comment
//    }

//    // commission
//    public class Commission
//    {

//        ///<summary>
//        /// 店铺=shop.shopid
//        ///</summary>
//        public int Shopid { get; set; } // shopid (Primary key)

//        ///<summary>
//        /// 佣金生效开始时间
//        ///</summary>
//        public System.DateTime? Starttime { get; set; } // starttime

//        ///<summary>
//        /// 佣金结束开始时间
//        ///</summary>
//        public System.DateTime? Endtime { get; set; } // endtime

//        ///<summary>
//        /// 备注信息
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 佣金金额
//        ///</summary>
//        public decimal Amount { get; set; } // amount

//        ///<summary>
//        /// 记录修改时间
//        ///</summary>
//        public System.DateTime? ModifiedDt { get; set; } // modifiedDt
//    }

//    // creditCard
//    public class CreditCard
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Cardid { get; set; } // cardid (Primary key)

//        ///<summary>
//        /// 持卡人uID，＝userReg.UID
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 卡号或帐号
//        ///</summary>
//        public string Acct { get; set; } // ACCT

//        ///<summary>
//        /// 信用卡类：0 = Visa;  1 = MasterCard;  8 = Other;  9 = Switch;  S = Solo;
//        ///</summary>
//        public string AcctType { get; set; } // AcctType

//        ///<summary>
//        /// 持卡人帐单地址，包括门牌号和街道名
//        ///</summary>
//        public string Street { get; set; } // Street

//        ///<summary>
//        /// 持卡人帐单城市
//        ///</summary>
//        public string City { get; set; } // city

//        ///<summary>
//        /// 持卡人帐单州名
//        ///</summary>
//        public string State { get; set; } // state

//        ///<summary>
//        /// 持卡人帐单国家代号
//        ///</summary>
//        public string Country { get; set; } // country

//        ///<summary>
//        /// 邮编
//        ///</summary>
//        public string Zip { get; set; } // zip

//        ///<summary>
//        /// 此卡的发卡次数。Switch或Solo卡，交易时，需要确认CARDISSUE或者CARDSTART。
//        ///</summary>
//        public int? CardIssue { get; set; } // cardIssue

//        ///<summary>
//        /// Switch或Solo卡的发卡日期，为mmyy格式，如0308代表2008年3月
//        ///</summary>
//        public string CardStart { get; set; } // cardStart

//        ///<summary>
//        /// 卡的有效期，为mmyy格式
//        ///</summary>
//        public string ExpDate { get; set; } // expDate

//        ///<summary>
//        /// 持卡人名
//        ///</summary>
//        public string FirstName { get; set; } // firstName

//        ///<summary>
//        /// 持卡人姓
//        ///</summary>
//        public string LastName { get; set; } // lastName

//        ///<summary>
//        /// 卡验证码。信用卡公司要求这个内容网站不可保存。
//        ///</summary>
//        public string Cvv2 { get; set; } // CVV2

//        ///<summary>
//        /// 卡信息的创建时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // createDT
//    }

//    // customerReview
//    public class CustomerReview
//    {
//        public int Reviewid { get; set; } // reviewid (Primary key)

//        ///<summary>
//        /// 评论人,uid=userreg.uid
//        ///</summary>
//        public int? Uid { get; set; } // uid

//        ///<summary>
//        /// 评论人的邮件地址，供未注册用户使用
//        ///</summary>
//        public string Email { get; set; } // email

//        ///<summary>
//        /// 对质量的评分
//        ///</summary>
//        public decimal? Rate1 { get; set; } // rate1

//        ///<summary>
//        /// 对送餐速度的评分
//        ///</summary>
//        public decimal? Rate2 { get; set; } // rate2

//        ///<summary>
//        /// 对服务的评分
//        ///</summary>
//        public decimal? Rate3 { get; set; } // rate3

//        ///<summary>
//        /// 评分平均值
//        ///</summary>
//        public decimal? Rate4 { get; set; } // rate4

//        ///<summary>
//        /// 评论时间
//        ///</summary>
//        public System.DateTime? ReviewDate { get; set; } // reviewDate

//        ///<summary>
//        /// 评论对象类型。1:订单名; 2:菜单
//        ///</summary>
//        public string Reviewtype { get; set; } // reviewtype

//        ///<summary>
//        /// 被评论对象的ID，为2时对应菜单表里的主键ID
//        ///</summary>
//        public int? Objid { get; set; } // objid

//        ///<summary>
//        /// 所评论的订单ID
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 评论内容
//        ///</summary>
//        public string Comment { get; set; } // comment

//        ///<summary>
//        /// 餐馆对评论的回复信息.(no use)
//        ///</summary>
//        public string ReplyMsg { get; set; } // replyMsg

//        ///<summary>
//        /// 评论回复时间(no use)
//        ///</summary>
//        public System.DateTime? ReplyDt { get; set; } // replyDT

//        ///<summary>
//        /// 所属餐馆/商家的ID。
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 评论的用户名称
//        ///</summary>
//        public string Username { get; set; } // username

//        ///<summary>
//        /// 评论者所在的城市
//        ///</summary>
//        public string Townname { get; set; } // townname
        
//        public CustomerReview()
//        {
//            Uid = 0;
//        }
//    }

//    // deliveryAddr
//    public class DeliveryAddr
//    {

//        ///<summary>
//        /// 用户送货地址表主键
//        ///</summary>
//        public int Addrid { get; set; } // addrid (Primary key)

//        ///<summary>
//        /// 收货人名称
//        ///</summary>
//        public string Username { get; set; } // username

//        ///<summary>
//        /// 用户ID，＝userReg.UID
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 地址项名称。基本的地址项取名为Basic，其它新建的地址不能用此名
//        ///</summary>
//        public string Addrname { get; set; } // addrname

//        ///<summary>
//        /// 详细地址的第1部分
//        ///</summary>
//        public string Addr1 { get; set; } // addr1

//        ///<summary>
//        /// 详细地址的第2部分
//        ///</summary>
//        public string Addr2 { get; set; } // addr2

//        ///<summary>
//        /// 详细地址的第3部分
//        ///</summary>
//        public string Addr3 { get; set; } // addr3

//        ///<summary>
//        /// 所在的城市名
//        ///</summary>
//        public string Cityname { get; set; } // cityname

//        ///<summary>
//        /// 所在地址邮编第1部分
//        ///</summary>
//        public string Postcode1 { get; set; } // postcode1

//        ///<summary>
//        /// 所在地址邮编第2部分
//        ///</summary>
//        public string Postcode2 { get; set; } // postcode2

//        ///<summary>
//        /// 联系电话1
//        ///</summary>
//        public string Tel { get; set; } // tel

//        ///<summary>
//        /// 此配送地址的附加信息
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 记录标识符，备用
//        ///</summary>
//        public string Flag { get; set; } // flag

//        ///<summary>
//        /// 移动电话
//        ///</summary>
//        public string Mobile { get; set; } // mobile
//    }

//    // deviceinfo
//    public class Deviceinfo
//    {
//        public int Deviceid { get; set; } // deviceid (Primary key)

//        ///<summary>
//        /// 设备的ID
//        ///</summary>
//        public string Devicetoken { get; set; } // devicetoken

//        ///<summary>
//        /// 设备类型:android, ios
//        ///</summary>
//        public string Devicetype { get; set; } // devicetype

//        ///<summary>
//        /// 设备的操作系统对应的版本号
//        ///</summary>
//        public string Deviceversion { get; set; } // deviceversion

//        ///<summary>
//        /// 设备注册日期
//        ///</summary>
//        public System.DateTime? Registdt { get; set; } // registdt

//        ///<summary>
//        /// 设备注册后所属的Parse.com里的channel
//        ///</summary>
//        public string Channels { get; set; } // channels

//        ///<summary>
//        /// 这个台设备最后一次被使用时间
//        ///</summary>
//        public System.DateTime? LastHeartbeatAt { get; set; } // LastHeartbeatAt
//    }

//    // favourites
//    public class Favourite
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Fid { get; set; } // fid (Primary key)

//        ///<summary>
//        /// 用户ID，=userReg.uid
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 类型.1:表示收藏餐厅名;2.表示收藏的订单
//        ///</summary>
//        public string Ftype { get; set; } // ftype

//        ///<summary>
//        /// 餐馆ID.＝userReg.uid(utype='1')
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 菜单ID.对应菜单表的索引ID号
//        ///</summary>
//        public int? Mid { get; set; } // mid

//        ///<summary>
//        /// 加入收藏夹的时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // createDT

//        ///<summary>
//        /// 备用字段, 订单ID
//        ///</summary>
//        public string Flag { get; set; } // flag
//    }

//    // invitefriend
//    public class Invitefriend
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 发起邀请者的用户ID
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 被邀请人邮件地址
//        ///</summary>
//        public string Iemail { get; set; } // iemail

//        ///<summary>
//        /// 被邀请人姓名
//        ///</summary>
//        public string Iusername { get; set; } // iusername

//        ///<summary>
//        /// 邀请时间
//        ///</summary>
//        public System.DateTime? Idatatime { get; set; } // idatatime

//        ///<summary>
//        /// 邀请码
//        ///</summary>
//        public string InviteCode { get; set; } // inviteCode

//        ///<summary>
//        /// 被推荐的用户是否注册,Y是。N否
//        ///</summary>
//        public string IsReg { get; set; } // isReg

//        ///<summary>
//        /// 此次推荐是否己获取积分.Y.己获取。N.未获取。缺省值为N
//        ///</summary>
//        public string IsScore { get; set; } // isScore

//        ///<summary>
//        /// 此条推荐消息是否完成。Y-完成。N-未完成
//        ///</summary>
//        public string Isvalid { get; set; } // isvalid

//        ///<summary>
//        /// 被邀请者的第一个订单号
//        ///</summary>
//        public string Iorderid { get; set; } // iorderid
        
//        public Invitefriend()
//        {
//            IsReg = "N";
//            IsScore = "N";
//        }
//    }

//    // memberCash
//    public class MemberCash
//    {

//        ///<summary>
//        /// 表主键，自动增长
//        ///</summary>
//        public int Cashid { get; set; } // cashid (Primary key)

//        ///<summary>
//        /// 用户ID
//        ///</summary>
//        public string Uid { get; set; } // uid

//        ///<summary>
//        /// 款项金额
//        ///</summary>
//        public decimal? Amount { get; set; } // amount

//        ///<summary>
//        /// 款项来源说明
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 发生时间
//        ///</summary>
//        public System.DateTime? Atime { get; set; } // atime

//        ///<summary>
//        /// 处理方式。’＋‘表示余款进帐，’－‘表示消费了
//        ///</summary>
//        public string Action { get; set; } // action

//        ///<summary>
//        /// 款项处理人
//        ///</summary>
//        public string Adminuid { get; set; } // adminuid
//    }

//    // menu
//    public class Menu
//    {

//        ///<summary>
//        /// 表主键
//        ///</summary>
//        public int Mid { get; set; } // mid (Primary key)

//        ///<summary>
//        /// 商家ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 此菜单所属的类别
//        ///</summary>
//        public string MenuCat { get; set; } // menuCat

//        ///<summary>
//        /// 菜单名称（英文）
//        ///</summary>
//        public string MenuName { get; set; } // menuName

//        ///<summary>
//        /// 菜单名称（第二语言）
//        ///</summary>
//        public string MenuName2 { get; set; } // menuName2

//        ///<summary>
//        /// 菜单详细描述(主语言：英语)
//        ///</summary>
//        public string MenuDesc { get; set; } // menuDesc

//        ///<summary>
//        /// 菜单详细描述(第二语言)
//        ///</summary>
//        public string MenuDesc2 { get; set; } // menuDesc2

//        ///<summary>
//        /// 原价
//        ///</summary>
//        public decimal? Price1 { get; set; } // price1

//        ///<summary>
//        /// 折扣价
//        ///</summary>
//        public decimal? Price2 { get; set; } // price2

//        ///<summary>
//        /// 本菜被评的星级(备用)
//        ///</summary>
//        public decimal? Star { get; set; } // star

//        ///<summary>
//        /// 此餐的类型:1-普通餐;2-套餐(将读取套餐表)
//        ///</summary>
//        public string Menutype { get; set; } // menutype

//        ///<summary>
//        /// 菜的图片地址
//        ///</summary>
//        public string Menulogo { get; set; } // menulogo

//        ///<summary>
//        /// 折扣计价方式.1。按本菜单固定方式。即price2生效;2.按店的统一折扣价。3.按本菜单的特定时间段的折扣方式(即去查找menuPrice表).缺省值为1.按本菜单方式.
//        ///</summary>
//        public string Discountway { get; set; } // discountway

//        ///<summary>
//        /// 菜单编号，由餐馆管理员自行设置
//        ///</summary>
//        public string Menucode { get; set; } // menucode

//        ///<summary>
//        /// 服务时段。1- 午餐与晚餐 ;2-午餐only;3-晚餐only
//        ///</summary>
//        public string ServicePeriod { get; set; } // servicePeriod

//        ///<summary>
//        /// 此主菜类显示的时间，指周一，周二，到周日，可多选。多个用,号隔开.0,1,2,3,..6
//        ///</summary>
//        public string Displayweekday { get; set; } // displayweekday

//        ///<summary>
//        /// 是否显示主食。Y－有，N－不
//        ///</summary>
//        public string HasSideOrder { get; set; } // hasSideOrder

//        ///<summary>
//        /// 是否有配料。Y－是。则读取标准配料值plcollection. N。否，不显示配料
//        ///</summary>
//        public string HasPl { get; set; } // hasPL

//        ///<summary>
//        /// 标准配料.or 套餐内含的ID
//        ///</summary>
//        public string Standardpl { get; set; } // standardpl

//        ///<summary>
//        /// 菜单创建时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // CreateDT

//        ///<summary>
//        /// 菜单修改时间
//        ///</summary>
//        public System.DateTime? UpdateDt { get; set; } // UpdateDT

//        ///<summary>
//        /// 餐特点，1-辣，2-素餐，3-含Nuts,可多选
//        ///</summary>
//        public string Flag { get; set; } // flag

//        ///<summary>
//        /// 菜显示顺序号，由餐馆管理员指定
//        ///</summary>
//        public decimal? Indexnum { get; set; } // indexnum

//        ///<summary>
//        /// 套餐组成数量
//        ///</summary>
//        public int? Mealamt { get; set; } // mealamt
//        public string Menuoptioncat { get; set; } // menuoptioncat
        
//        public Menu()
//        {
//            Menutype = "0";
//            Discountway = "1";
//        }
//    }

//    // menubasic
//    public class Menubasic
//    {

//        ///<summary>
//        /// 主键。自动增长
//        ///</summary>
//        public int Basicmenuid { get; set; } // basicmenuid (Primary key)

//        ///<summary>
//        /// 餐馆ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 菜的主分类.1-配菜类;2-主食;3-..待扩展
//        ///</summary>
//        public string Menutype1 { get; set; } // menutype1

//        ///<summary>
//        /// 菜的二级分类，如配菜中的Veg,Meat,Sauce,Cook等
//        ///</summary>
//        public string Menutype2 { get; set; } // menutype2

//        ///<summary>
//        /// 菜名
//        ///</summary>
//        public string Mname { get; set; } // mname

//        ///<summary>
//        /// 菜名第二种语言
//        ///</summary>
//        public string Mname2 { get; set; } // mname2

//        ///<summary>
//        /// 基本价格
//        ///</summary>
//        public decimal? Price1 { get; set; } // price1

//        ///<summary>
//        /// 打折后的价格。备用
//        ///</summary>
//        public decimal? Price2 { get; set; } // price2

//        ///<summary>
//        /// 菜描述
//        ///</summary>
//        public string Menudesc { get; set; } // menudesc

//        ///<summary>
//        /// 菜描述（第二语言）
//        ///</summary>
//        public string Menudesc2 { get; set; } // menudesc2

//        ///<summary>
//        /// 菜编码（餐馆内部编码）
//        ///</summary>
//        public string Menucode { get; set; } // menucode

//        ///<summary>
//        /// 标记字段，（备用
//        ///</summary>
//        public string Flag { get; set; } // flag

//        ///<summary>
//        /// 备用字段
//        ///</summary>
//        public string Menu001 { get; set; } // menu001

//        ///<summary>
//        /// 显示顺序号
//        ///</summary>
//        public decimal? Indexnum { get; set; } // indexnum
//    }

//    // MenuBasicTemplate
//    public class MenuBasicTemplate
//    {
//        public int Basicmenuid { get; set; } // basicmenuid (Primary key)
//        public string Menutype1 { get; set; } // menutype1
//        public string Menutype2 { get; set; } // menutype2
//        public string Mname { get; set; } // mname
//        public string Mname2 { get; set; } // mname2
//        public decimal? Price1 { get; set; } // price1
//        public decimal? Price2 { get; set; } // price2
//        public string Menudesc2 { get; set; } // menudesc2
//        public string Menudesc { get; set; } // menudesc
//        public string Menucode { get; set; } // menucode
//        public string Flag { get; set; } // flag
//        public string Menu001 { get; set; } // menu001
//    }

//    // menuCat
//    public class MenuCat
//    {

//        ///<summary>
//        /// 菜单类别id
//        ///</summary>
//        public int Catid { get; set; } // catid (Primary key)

//        ///<summary>
//        /// 所属餐馆ID=shop.shopid
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 菜单类别名(主语言：英语)
//        ///</summary>
//        public string CatName { get; set; } // catName

//        ///<summary>
//        /// 菜单类别名(第二语言)
//        ///</summary>
//        public string CatName2 { get; set; } // catName2

//        ///<summary>
//        /// 菜单类别描述（主语言：英语）
//        ///</summary>
//        public string Description { get; set; } // description

//        ///<summary>
//        /// 菜单类别描述（第二语言）
//        ///</summary>
//        public string Description2 { get; set; } // description2

//        ///<summary>
//        /// 服务时段。1- 午餐与晚餐 ;2-午餐only;3-晚餐only
//        ///</summary>
//        public string ServicePeriod { get; set; } // servicePeriod

//        ///<summary>
//        /// 此主菜类显示的时间，指周一，周二，到周日，可多选。多个用,号隔开.0,1,2,3,..6
//        ///</summary>
//        public string Displayweekday { get; set; } // displayweekday

//        ///<summary>
//        /// 菜单分类的配菜类库。待定，也许存配菜类库的ID号，也许存一个标识位
//        ///</summary>
//        public string Pcsetting { get; set; } // pcsetting

//        ///<summary>
//        /// 此分类创建的时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // createDT

//        ///<summary>
//        /// 此分类修改的时间
//        ///</summary>
//        public System.DateTime? ModifiedDt { get; set; } // modifiedDT

//        ///<summary>
//        /// 类别的顺序号，排序用
//        ///</summary>
//        public decimal? Indexnum { get; set; } // indexnum

//        ///<summary>
//        /// 餐类别的图片地址
//        ///</summary>
//        public string Logostr { get; set; } // logostr
//    }

//    // menuCatBasicMenu
//    public class MenuCatBasicMenu
//    {
//        public int Indexid { get; set; } // indexid (Primary key)

//        ///<summary>
//        /// 菜单类别ID号
//        ///</summary>
//        public int Catid { get; set; } // catid

//        ///<summary>
//        /// 餐馆ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 配料主分类1级.1-配料;2-主食
//        ///</summary>
//        public string Menutype1 { get; set; } // menutype1

//        ///<summary>
//        /// 配料二级分类
//        ///</summary>
//        public string Menutype2 { get; set; } // menutype2

//        ///<summary>
//        /// 配料ID集合，用,号隔开.
//        ///</summary>
//        public string Basicmenuids { get; set; } // basicmenuids
//    }

//    // menucattemplate
//    public class Menucattemplate
//    {
//        public int Catid { get; set; } // catid (Primary key)

//        ///<summary>
//        /// 序号
//        ///</summary>
//        public decimal? Indexnum { get; set; } // indexnum

//        ///<summary>
//        /// 类别名称
//        ///</summary>
//        public string Catname { get; set; } // catname

//        ///<summary>
//        /// 类别英文名
//        ///</summary>
//        public string Catname2 { get; set; } // catname2

//        ///<summary>
//        /// 备用字段
//        ///</summary>
//        public string Cat001 { get; set; } // cat001
//    }

//    // menuoptionalcat
//    public class Menuoptionalcat
//    {
//        public decimal Optioncatid { get; set; } // optioncatid (Primary key)
//        public int Shopid { get; set; } // shopid (Primary key)
//        public string Optionname { get; set; } // optionname
//        public string Optionname2 { get; set; } // optionname2
//        public string Flag { get; set; } // flag
//        public decimal? Indexnum { get; set; } // indexnum
//        public string Optiondesc { get; set; } // optiondesc
        
//        public Menuoptionalcat()
//        {
//            Indexnum = 0m;
//        }
//    }

//    // menuPrice
//    public class MenuPrice
//    {

//        ///<summary>
//        /// 菜单价格主键ID
//        ///</summary>
//        public int Pid { get; set; } // pid (Primary key)

//        ///<summary>
//        /// 主菜单ID=menu.mid
//        ///</summary>
//        public int Mid { get; set; } // mid

//        ///<summary>
//        /// 菜单价格
//        ///</summary>
//        public decimal? Price { get; set; } // price

//        ///<summary>
//        /// 有效时间段起点时间
//        ///</summary>
//        public System.DateTime? Dtfrom { get; set; } // dtfrom

//        ///<summary>
//        /// 有效时间段结束时间
//        ///</summary>
//        public System.DateTime? Dtto { get; set; } // dtto

//        ///<summary>
//        /// 时间段的类型：1 每天，2。固定时间段
//        ///</summary>
//        public string Ptype { get; set; } // ptype

//        ///<summary>
//        /// 价格的描述。备用
//        ///</summary>
//        public string Description { get; set; } // description
//    }

//    // menusideorder
//    public class Menusideorder
//    {
//        public int Sideorderid { get; set; } // sideorderid (Primary key)

//        ///<summary>
//        /// 餐馆id
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 主餐的ID=Menu.mid
//        ///</summary>
//        public int? Mid { get; set; } // mid

//        ///<summary>
//        /// 主食英文名
//        ///</summary>
//        public string Mname { get; set; } // mname

//        ///<summary>
//        /// 主食中文名
//        ///</summary>
//        public string Mname2 { get; set; } // mname2
//        public decimal? Price1 { get; set; } // price1

//        ///<summary>
//        /// 价二/优惠价
//        ///</summary>
//        public decimal? Price2 { get; set; } // price2

//        ///<summary>
//        /// 优惠时段
//        ///</summary>
//        public string DiscountPeriod { get; set; } // discountPeriod
//    }

//    // multilangMenu
//    public class MultilangMenu
//    {
//        public decimal Menuid { get; set; } // menuid (Primary key)
//        public string Menuname { get; set; } // menuname (Primary key)
//        public string Name1 { get; set; } // name1
//        public string Name2 { get; set; } // name2
//        public string Name3 { get; set; } // name3
//        public string Name4 { get; set; } // name4
//        public string Name5 { get; set; } // name5
//        public string Name6 { get; set; } // name6
//        public string Name7 { get; set; } // name7
//    }

//    // newshopregis
//    public class Newshopregi
//    {
//        public int Regisid { get; set; } // regisid (Primary key)

//        ///<summary>
//        /// 店名
//        ///</summary>
//        public string Shopname { get; set; } // shopname

//        ///<summary>
//        /// 地址第一行
//        ///</summary>
//        public string Addr1 { get; set; } // addr1

//        ///<summary>
//        /// 地址第二行
//        ///</summary>
//        public string Addr2 { get; set; } // addr2

//        ///<summary>
//        /// 城市
//        ///</summary>
//        public string Cityname { get; set; } // cityname

//        ///<summary>
//        /// 邮编
//        ///</summary>
//        public string Postcode { get; set; } // postcode

//        ///<summary>
//        /// 联系人
//        ///</summary>
//        public string Contactperson { get; set; } // contactperson

//        ///<summary>
//        /// 联系电话
//        ///</summary>
//        public string Tele { get; set; } // tele

//        ///<summary>
//        /// 注册时间
//        ///</summary>
//        public System.DateTime? Regisdt { get; set; } // regisdt

//        ///<summary>
//        /// 后台处理管理员用户名
//        ///</summary>
//        public string SalesUserName { get; set; } // SalesUserName

//        ///<summary>
//        /// 是否己加盟Y-是； N-没有
//        ///</summary>
//        public string IsJoined { get; set; } // IsJoined

//        ///<summary>
//        /// 用于sales记录跟进的信息。
//        ///</summary>
//        public string Comments { get; set; } // Comments
//    }

//    // onlineUser
//    public class OnlineUser
//    {
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 在线用户id
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 在线用户名字
//        ///</summary>
//        public string Urealname { get; set; } // urealname

//        ///<summary>
//        /// 登录时间
//        ///</summary>
//        public System.DateTime? LoginTime { get; set; } // loginTime

//        ///<summary>
//        /// 最后更新时间
//        ///</summary>
//        public System.DateTime? LastUpdateTime { get; set; } // lastUpdateTime

//        ///<summary>
//        /// 登录用户类型：0表示普通用户.1表示商家用户
//        ///</summary>
//        public string Utype { get; set; } // utype
        
//        public OnlineUser()
//        {
//            LoginTime = System.DateTime.Now;
//            LastUpdateTime = System.DateTime.Now;
//        }
//    }

//    // orders
//    public class Order
//    {

//        ///<summary>
//        /// 订单编号,可以按年月日+流水号的方式。固定长度为13位(8.15讨论)
//        ///</summary>
//        public string OrderId { get; set; } // OrderID (Primary key)

//        ///<summary>
//        /// 商家ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 下单人ID;非会员订购时，此值为0;
//        ///</summary>
//        public int Uid { get; set; } // uid

//        ///<summary>
//        /// 用户邮件地址。便于存放非会员订购数据
//        ///</summary>
//        public string Useremail { get; set; } // useremail

//        ///<summary>
//        /// 本餐的份数
//        ///</summary>
//        public int? Amount { get; set; } // amount

//        ///<summary>
//        /// 单价
//        ///</summary>
//        public decimal? Unitprice { get; set; } // unitprice

//        ///<summary>
//        /// 支付方式0.现金支付. 1,信用卡支付.2.Paypal支付..可扩展。除现金支付外的详细信息见orderpayment表
//        ///</summary>
//        public string Payway { get; set; } // payway

//        ///<summary>
//        /// 是否己支付.Y己支付。N未支付
//        ///</summary>
//        public string Ispaid { get; set; } // ispaid

//        ///<summary>
//        /// 如果用网站优惠券支付。此处填写优惠券号
//        ///</summary>
//        public string Ticketnumber { get; set; } // ticketnumber

//        ///<summary>
//        /// 优惠券面值
//        ///</summary>
//        public int? Ticketvalue { get; set; } // ticketvalue

//        ///<summary>
//        /// 取餐方式。0.上门自取; 1.送货上门(会在送货地址表里有详细情况)
//        ///</summary>
//        public string Deliveryway { get; set; } // deliveryway

//        ///<summary>
//        /// 送/取餐时间
//        ///</summary>
//        public System.DateTime? Pickupdt { get; set; } // pickupdt

//        ///<summary>
//        /// 订单的备注消息
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 订单的状态: Processing,Cooking,Dispatched,Delivered,Reviewed,Cancelled
//        ///</summary>
//        public string Orderstatus { get; set; } // orderstatus

//        ///<summary>
//        /// 下单时间
//        ///</summary>
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt

//        ///<summary>
//        /// 订单更新时间
//        ///</summary>
//        public System.DateTime? OrderUpdatedt { get; set; } // orderUpdatedt

//        ///<summary>
//        /// 订单是否己取消
//        ///</summary>
//        public string IsCancelled { get; set; } // isCancelled

//        ///<summary>
//        /// 订单取消时间
//        ///</summary>
//        public System.DateTime? OrderCancelledDt { get; set; } // orderCancelledDT

//        ///<summary>
//        /// 订单取消原因描述
//        ///</summary>
//        public string CancelComments { get; set; } // cancelComments

//        ///<summary>
//        /// 划卡支付总额=afterdiscount(打折后价格) + creditcardCharge(使用信用卡支付的手续费用)+ deliverycharge(送餐费) + tips(小费)-ticketvalue(优惠券支付费用)
//        ///</summary>
//        public decimal? Totalamount { get; set; } // totalamount

//        ///<summary>
//        /// 订单内所有商品总金额（折扣前金额）
//        ///</summary>
//        public decimal? Totalprice1 { get; set; } // totalprice1

//        ///<summary>
//        /// 本次订单折扣率
//        ///</summary>
//        public decimal? DiscountRate { get; set; } // discountRate

//        ///<summary>
//        /// 订单折扣后总金额=totalprice1（商品总金额）* discountRate（商埸折扣率）
//        ///</summary>
//        public decimal? Afterdiscount { get; set; } // afterdiscount

//        ///<summary>
//        /// 本次配送费用，缺省是0
//        ///</summary>
//        public decimal? Deliverycharge { get; set; } // deliverycharge

//        ///<summary>
//        /// 此笔订单需支付的佣金.计算规则，由订单总金额×佣金比例(去Commission表里找)，如果此表没有，缺省取配置文件里的StandardCommission项
//        ///</summary>
//        public decimal? ServiceCharge { get; set; } // serviceCharge

//        ///<summary>
//        /// 信用卡网关的手续费,缺省是0
//        ///</summary>
//        public decimal? CreditcardCharge { get; set; } // creditcardCharge

//        ///<summary>
//        /// 本次订单的小费
//        ///</summary>
//        public decimal? Tips { get; set; } // tips

//        ///<summary>
//        /// 此订单是否己经对帐。N－没有，Y－己对帐
//        ///</summary>
//        public string Isjz { get; set; } // isjz

//        ///<summary>
//        /// 对帐时间
//        ///</summary>
//        public System.DateTime? Jzdt { get; set; } // jzdt

//        ///<summary>
//        /// 商家本次实际获取的金额，因为支付网关会收取相应的费用，所以跟totalamount会有区别
//        ///</summary>
//        public decimal? Actualamount { get; set; } // actualamount

//        ///<summary>
//        /// 下订单时用户的IP地址
//        ///</summary>
//        public string UserIp { get; set; } // userIP

//        ///<summary>
//        /// 是否新订单Y-是;N-不是。
//        ///</summary>
//        public string Isnew { get; set; } // isnew
//        public decimal? Comrate { get; set; } // comrate
//        public decimal? Shopcardcharge { get; set; } // shopcardcharge
//        public decimal? Paidwithcredit { get; set; } // paidwithcredit
//        public string Vouchercode { get; set; } // vouchercode
//        public decimal? Creditback { get; set; } // creditback
        
//        public Order()
//        {
//            Ispaid = "N";
//            Ticketvalue = 0;
//            Orderstatus = "Processing";
//            DiscountRate = 1m;
//            Deliverycharge = 0m;
//            CreditcardCharge = 0m;
//            Isjz = "N";
//            Isnew = "Y";
//            Comrate = 0m;
//            Shopcardcharge = 0m;
//        }
//    }

//    // ordercomments
//    public class Ordercomment
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Cid { get; set; } // cid (Primary key)

//        ///<summary>
//        /// 订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 留言类型。1表示此条留言为店长。2，表示此条留言为用户，此种类型留言可以由店长回复一条.
//        ///</summary>
//        public string Msgtype { get; set; } // msgtype

//        ///<summary>
//        /// 留言内容
//        ///</summary>
//        public string Msgcont { get; set; } // msgcont

//        ///<summary>
//        /// 留言回复的内容
//        ///</summary>
//        public string Msgreply { get; set; } // msgreply

//        ///<summary>
//        /// 留言创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 留言回复的时间
//        ///</summary>
//        public string Replydt { get; set; } // replydt
//    }

//    // ordercz
//    public class Ordercz
//    {
//        public int Czid { get; set; } // czid (Primary key)
//        public System.DateTime Czdt { get; set; } // czdt
//        public string Orderid { get; set; } // orderid
//        public string Comments { get; set; } // comments
//        public decimal? Amt { get; set; } // amt
//        public string Operateid { get; set; } // operateid
//    }

//    // orderdelivery
//    public class Orderdelivery
//    {

//        ///<summary>
//        /// 订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid (Primary key)

//        ///<summary>
//        /// 送货地址部分1
//        ///</summary>
//        public string Addr1 { get; set; } // addr1

//        ///<summary>
//        /// 送货地址部分2
//        ///</summary>
//        public string Addr2 { get; set; } // addr2

//        ///<summary>
//        /// 送货地址部分3
//        ///</summary>
//        public string Addr3 { get; set; } // addr3

//        ///<summary>
//        /// 收货人所在的城市
//        ///</summary>
//        public string Townname { get; set; } // townname

//        ///<summary>
//        /// 收货所在地邮編部分1
//        ///</summary>
//        public string Postcode1 { get; set; } // postcode1

//        ///<summary>
//        /// 收货所在地邮編部分2
//        ///</summary>
//        public string Postcode2 { get; set; } // postcode2

//        ///<summary>
//        /// 收货联系人姓名
//        ///</summary>
//        public string Contactname { get; set; } // contactname

//        ///<summary>
//        /// 收货人联系电话1
//        ///</summary>
//        public string Tel1 { get; set; } // tel1

//        ///<summary>
//        /// 收货人联系电话2.mobile
//        ///</summary>
//        public string Tel2 { get; set; } // tel2

//        ///<summary>
//        /// 送餐时间
//        ///</summary>
//        public System.DateTime? Deliverdt { get; set; } // deliverdt

//        ///<summary>
//        /// 送餐人名
//        ///</summary>
//        public string Deliverpeople { get; set; } // deliverpeople

//        ///<summary>
//        /// 送餐时的附加信息
//        ///</summary>
//        public string Comments { get; set; } // comments
//    }

//    // orderitem
//    public class Orderitem
//    {
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 主订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 主菜的ID
//        ///</summary>
//        public int Mid { get; set; } // mid

//        ///<summary>
//        /// 配菜/定制菜的ID。如果mid=submenuid,则表示为主餐名
//        ///</summary>
//        public int Submenuid { get; set; } // submenuid

//        ///<summary>
//        /// 菜内部编码
//        ///</summary>
//        public string Menucode { get; set; } // menucode

//        ///<summary>
//        /// 主菜单名（主语言，英语）
//        ///</summary>
//        public string MenuName { get; set; } // menuName

//        ///<summary>
//        /// 主菜单名（第二语言）
//        ///</summary>
//        public string MenuName2 { get; set; } // menuName2

//        ///<summary>
//        /// 份数
//        ///</summary>
//        public int? Amount { get; set; } // amount

//        ///<summary>
//        /// 原价
//        ///</summary>
//        public decimal? Price1 { get; set; } // price1

//        ///<summary>
//        /// 折扣后的最终价
//        ///</summary>
//        public decimal? Discountprice { get; set; } // discountprice

//        ///<summary>
//        /// 此项菜实际支付总价格=amount * discountprice
//        ///</summary>
//        public decimal? Totalprice { get; set; } // totalprice

//        ///<summary>
//        /// 菜单的图片地址
//        ///</summary>
//        public string Menulogo { get; set; } // menulogo

//        ///<summary>
//        /// =menu.menutype.此餐的类型:1-主餐;2-可定制餐(将读取submenu表);3-套餐(将读取套餐表).m-表示此项为主食;f-此项为配料。还可以扩展....
//        ///</summary>
//        public string Menutype { get; set; } // menutype

//        ///<summary>
//        /// 定制餐的多与缺少项
//        ///</summary>
//        public string MenuNameE { get; set; } // menuNameE

//        ///<summary>
//        /// 定制餐的多与缺少项中文名, 比如加什么，免什么
//        ///</summary>
//        public string MenuName2E { get; set; } // menuName2E
//    }

//    // ordernotice
//    public class Ordernotice
//    {

//        ///<summary>
//        /// 主码
//        ///</summary>
//        public string Scode { get; set; } // scode (Primary key)

//        ///<summary>
//        /// 商家ID号
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 订单ID号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 信息查看有效时间
//        ///</summary>
//        public System.DateTime ExpiredDt { get; set; } // ExpiredDT

//        ///<summary>
//        /// 用户查看时间
//        ///</summary>
//        public System.DateTime? Accessdt { get; set; } // accessdt

//        ///<summary>
//        /// 用户访问IP
//        ///</summary>
//        public string Accessip { get; set; } // accessip

//        ///<summary>
//        /// 是否己查看.Y-己读 N-未读
//        ///</summary>
//        public string Isread { get; set; } // isread
        
//        public Ordernotice()
//        {
//            Isread = "N";
//        }
//    }

//    // orderoperation
//    public class Orderoperation
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 操作描述
//        ///</summary>
//        public string Actionstr { get; set; } // actionstr

//        ///<summary>
//        /// 操作时间
//        ///</summary>
//        public System.DateTime? Actiondt { get; set; } // actiondt

//        ///<summary>
//        /// 操作人（备用）
//        ///</summary>
//        public string Actionuser { get; set; } // actionuser
//    }

//    // orderpayment
//    public class Orderpayment
//    {

//        ///<summary>
//        /// 表主键，自动增长
//        ///</summary>
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 订单号
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 卡号
//        ///</summary>
//        public string Cardnumber { get; set; } // cardnumber

//        ///<summary>
//        /// 卡类型.数据跟creditCard.cardtype保持一致
//        ///</summary>
//        public string Cardtype { get; set; } // cardtype

//        ///<summary>
//        /// 持卡人名
//        ///</summary>
//        public string Name1 { get; set; } // name1

//        ///<summary>
//        /// 持卡人姓
//        ///</summary>
//        public string Name2 { get; set; } // name2

//        ///<summary>
//        /// 付款时间
//        ///</summary>
//        public System.DateTime? Paidtime { get; set; } // paidtime

//        ///<summary>
//        /// 提交付信息时间
//        ///</summary>
//        public System.DateTime? Applytime { get; set; } // applytime

//        ///<summary>
//        /// 客服/店铺管理员确认付款时间
//        ///</summary>
//        public System.DateTime? Confirmtime { get; set; } // confirmtime

//        ///<summary>
//        /// 本次支付总金额
//        ///</summary>
//        public decimal? Paidamount { get; set; } // paidamount

//        ///<summary>
//        /// 支付结果描述。主要存储信用卡或PAYPAL的网上支付的结果。字段内对应部分待定
//        ///</summary>
//        public string ResultDesc { get; set; } // resultDesc

//        ///<summary>
//        /// 是否有退款，缺省是N。若为Y，则需读取退款表：OrdepaymentRet查看详细记录
//        ///</summary>
//        public string Isret { get; set; } // isret
//        public string Securauthstr { get; set; } // securauthstr
        
//        public Orderpayment()
//        {
//            Isret = "N";
//        }
//    }

//    // pushNoticeQueue
//    public class PushNoticeQueue
//    {
//        public int Pushid { get; set; } // pushid (Primary key)

//        ///<summary>
//        /// 订单号（针对订单的推送，否则为空值）
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 消息内容（包含推送时需要的全部内容）
//        ///</summary>
//        public string Payload { get; set; } // payload

//        ///<summary>
//        /// 推送总次数.默认为0
//        ///</summary>
//        public int? Pushcount { get; set; } // pushcount

//        ///<summary>
//        /// 上次推送时间
//        ///</summary>
//        public System.DateTime? Lastpushdt { get; set; } // lastpushdt

//        ///<summary>
//        /// 推送的目标设备ID
//        ///</summary>
//        public string Devicetoken { get; set; } // devicetoken

//        ///<summary>
//        /// 推送的目标channels
//        ///</summary>
//        public string Channels { get; set; } // channels

//        ///<summary>
//        /// 推送优先级
//        ///</summary>
//        public int? Priority { get; set; } // Priority

//        ///<summary>
//        /// 记录最后一次出错的错误信息，便于查找系统问题
//        ///</summary>
//        public string LastError { get; set; } // LastError

//        ///<summary>
//        /// 推送信息类型，扩展用.0-餐馆接单信息
//        ///</summary>
//        public string Noticetype { get; set; } // noticetype
//    }

//    // recommend
//    public class Recommend
//    {

//        ///<summary>
//        /// 表主键
//        ///</summary>
//        public int RecId { get; set; } // recID (Primary key)

//        ///<summary>
//        /// 推荐人的id
//        ///</summary>
//        public int? RecUid { get; set; } // recUid

//        ///<summary>
//        /// 推荐人的名字/Email
//        ///</summary>
//        public string RecName { get; set; } // recName

//        ///<summary>
//        /// 餐馆/外卖店名称
//        ///</summary>
//        public string Shopname { get; set; } // shopname

//        ///<summary>
//        /// 餐馆/外卖店所在的城市
//        ///</summary>
//        public string Townname { get; set; } // townname

//        ///<summary>
//        /// 期望配送的地区
//        ///</summary>
//        public string DeliveryArea { get; set; } // DeliveryArea

//        ///<summary>
//        /// 餐馆的详细地址
//        ///</summary>
//        public string Addr { get; set; } // addr

//        ///<summary>
//        /// 餐馆的联系电话
//        ///</summary>
//        public string Tel { get; set; } // tel

//        ///<summary>
//        /// 此条推荐消息是否己处理,Y己处理，N未处理。默认为N
//        ///</summary>
//        public string Ishandled { get; set; } // ishandled

//        ///<summary>
//        /// 处理结果：1。成功加盟些店；2。找不到些店；3。不加盟。成功加盟些店后，给推荐人发email，请他定餐。
//        ///</summary>
//        public string Status { get; set; } // status

//        ///<summary>
//        /// 推荐时间
//        ///</summary>
//        public System.DateTime? RecDate { get; set; } // recDate
        
//        public Recommend()
//        {
//            Ishandled = "’N''";
//        }
//    }

//    // RecPaidAmountInfo
//    public class RecPaidAmountInfo
//    {
//        public int Infoid { get; set; } // infoid (Primary key)
//        public decimal Basicamt { get; set; } // basicamt
//        public System.DateTime? Fromdt { get; set; } // fromdt
//        public System.DateTime? Todt { get; set; } // todt
//        public decimal? Basicamt2 { get; set; } // basicamt2
//    }

//    // serviceTicket
//    public class ServiceTicket
//    {
//        public int Ticketid { get; set; } // ticketid (Primary key)

//        ///<summary>
//        /// 订单ID
//        ///</summary>
//        public string Orderid { get; set; } // orderid

//        ///<summary>
//        /// 客户ID
//        ///</summary>
//        public int? Userid { get; set; } // userid

//        ///<summary>
//        /// 餐馆ID
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 电话
//        ///</summary>
//        public string Tele { get; set; } // tele

//        ///<summary>
//        /// 邮件地址
//        ///</summary>
//        public string Email { get; set; } // email

//        ///<summary>
//        /// 普通咨询;Y-是;N-不是
//        ///</summary>
//        public string Isnormal { get; set; } // isnormal

//        ///<summary>
//        /// 是否经理处理.咨询;Y-是;N-不是
//        ///</summary>
//        public string Ismanager { get; set; } // ismanager

//        ///<summary>
//        /// 是否紧急;Y-是;N-不是
//        ///</summary>
//        public string Iscritical { get; set; } // iscritical

//        ///<summary>
//        /// 客人电话内容
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 处理状态.0-未完成 1-完成
//        ///</summary>
//        public string Status { get; set; } // status

//        ///<summary>
//        /// 创建客服记录帐号
//        ///</summary>
//        public string Createuser { get; set; } // createuser

//        ///<summary>
//        /// 服务创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 处理时间
//        ///</summary>
//        public System.DateTime? Updatedt { get; set; } // updatedt

//        ///<summary>
//        /// 操作客服记录的帐号
//        ///</summary>
//        public string Modifyuser { get; set; } // modifyuser
        
//        public ServiceTicket()
//        {
//            Status = "0";
//        }
//    }

//    // shop
//    public class Shop
//    {

//        ///<summary>
//        /// 餐馆ID=UserReg.UID
//        ///</summary>
//        public int Shopid { get; set; } // shopid (Primary key)

//        ///<summary>
//        /// 商家名字。（主语言：英语）
//        ///</summary>
//        public string Sname { get; set; } // sname

//        ///<summary>
//        /// 商家名称，（第二语言）
//        ///</summary>
//        public string Sname2 { get; set; } // sname2

//        ///<summary>
//        /// 餐馆餐类，1-中餐，2-pizza,…可由系统管理员维护(一个餐馆可能属于多种餐类,用，号隔开)
//        ///</summary>
//        public string Mealtype { get; set; } // mealtype

//        ///<summary>
//        /// 晚餐送餐服务类型，1-送和取，2-只取，3-只送，4-只店吃
//        ///</summary>
//        public string ServiceType { get; set; } // serviceType

//        ///<summary>
//        /// 午餐送餐服务类型，1-送和取，2-只取，3-只送，4-只店吃
//        ///</summary>
//        public string ServiceTypeL { get; set; } // serviceTypeL

//        ///<summary>
//        /// 商家联系电话1
//        ///</summary>
//        public string Tel1 { get; set; } // tel1

//        ///<summary>
//        /// 商家联系电话2
//        ///</summary>
//        public string Tel2 { get; set; } // tel2

//        ///<summary>
//        /// 商家传真号码
//        ///</summary>
//        public string Fax { get; set; } // fax

//        ///<summary>
//        /// 商家联系邮件地址
//        ///</summary>
//        public string Email { get; set; } // email

//        ///<summary>
//        /// 是否用此邮件接收网站提示信息
//        ///</summary>
//        public string Gotnotice { get; set; } // gotnotice

//        ///<summary>
//        /// 商家联系人(经理)名称
//        ///</summary>
//        public string Contactname { get; set; } // contactname

//        ///<summary>
//        /// 联系人手机
//        ///</summary>
//        public string ContactTel { get; set; } // contactTel

//        ///<summary>
//        /// 餐馆所在地址一
//        ///</summary>
//        public string Addr1 { get; set; } // addr1

//        ///<summary>
//        /// 餐馆所在地址二
//        ///</summary>
//        public string Addr2 { get; set; } // addr2

//        ///<summary>
//        /// 餐馆所在地址三
//        ///</summary>
//        public string Addr3 { get; set; } // addr3

//        ///<summary>
//        /// 餐馆所在城市
//        ///</summary>
//        public string Cityname { get; set; } // cityname

//        ///<summary>
//        /// 餐馆所在地址邮编部分1
//        ///</summary>
//        public string Postcode1 { get; set; } // postcode1

//        ///<summary>
//        /// 餐馆所在地址邮編二
//        ///</summary>
//        public string Postcode2 { get; set; } // postcode2

//        ///<summary>
//        /// 商家所在的经度(预留)
//        ///</summary>
//        public string Longitude { get; set; } // longitude

//        ///<summary>
//        /// 商家所在的纬度（预留）
//        ///</summary>
//        public string Latitude { get; set; } // latitude

//        ///<summary>
//        /// 餐馆logo图片地址
//        ///</summary>
//        public string Logo { get; set; } // logo

//        ///<summary>
//        /// 是否启用VAT， Y 启用，N表示不启用，默认为N，一旦启用，就会读取配置文件里由系统管理员配置好的值.
//        ///</summary>
//        public string Vat { get; set; } // VAT

//        ///<summary>
//        /// 餐馆地图字符串(暂不实现8.15)
//        ///</summary>
//        public string Mapstr { get; set; } // mapstr

//        ///<summary>
//        /// 餐馆订餐信息描述
//        ///</summary>
//        public string Description { get; set; } // description

//        ///<summary>
//        /// 餐馆对味道的评分星级
//        ///</summary>
//        public decimal? Star1 { get; set; } // star1

//        ///<summary>
//        /// 对送餐速度的评分星级
//        ///</summary>
//        public decimal? Star2 { get; set; } // star2

//        ///<summary>
//        /// 餐馆对服务的评分的评分星级
//        ///</summary>
//        public decimal? Star3 { get; set; } // star3

//        ///<summary>
//        /// 餐馆对推荐度评分的评分星级
//        ///</summary>
//        public decimal? Star4 { get; set; } // star4

//        ///<summary>
//        /// 信息更新时间
//        ///</summary>
//        public System.DateTime? UpdateTime { get; set; } // updateTime

//        ///<summary>
//        /// 本店是否为网上订餐优惠活动加盟店,Y表示是，其它表示不是，缺省为不是
//        ///</summary>
//        public string Flag1 { get; set; } // flag1

//        ///<summary>
//        /// 餐馆的别名，用来做URL转发用
//        ///</summary>
//        public string Alias { get; set; } // alias

//        ///<summary>
//        /// 接收客人付款方式：1-Cash  2-Credit/Debit Card & Paypal  (可以组合)
//        ///</summary>
//        public string Acceptpay { get; set; } // acceptpay

//        ///<summary>
//        /// 订单语言的显示.Y-显示;N-不显示
//        ///</summary>
//        public string Orderlang { get; set; } // orderlang

//        ///<summary>
//        /// 接受订单的方式,C.表示用电脑.F表示用传真，S表示用短信，E表示用Email.可以组合，比如。C,F表示既可以用电脑，也可以用传真方式接受订单
//        ///</summary>
//        public string Acceptorder { get; set; } // acceptorder

//        ///<summary>
//        /// 配送方式.0-按距离配送; 1-按指定邮編配送.如果此值为空，表示默认配送区域为餐馆邮編第一部分的数字前的部分
//        ///</summary>
//        public string DeliveryWay { get; set; } // deliveryWay

//        ///<summary>
//        /// 这个店最长的送餐时间,即一份订单从收到要多久会送到客人手中
//        ///</summary>
//        public string Deliverytime { get; set; } // Deliverytime

//        ///<summary>
//        /// 是指送餐的订单在此店关门前多久可以订购,因为做餐加上送餐时间会超过此店的营业时间,所以送餐的单要提前订.
//        ///</summary>
//        public string DeliveryLastOt { get; set; } // DeliveryLastOT

//        ///<summary>
//        /// 最少起送金额
//        ///</summary>
//        public decimal? DeliveryMinOrder { get; set; } // DeliveryMinOrder

//        ///<summary>
//        /// 餐馆开户银行名称
//        ///</summary>
//        public string Bankname { get; set; } // bankname

//        ///<summary>
//        /// 餐馆开户银行户主名
//        ///</summary>
//        public string Bankusername { get; set; } // bankusername

//        ///<summary>
//        /// 银行Sort code
//        ///</summary>
//        public string Banksortcode { get; set; } // banksortcode

//        ///<summary>
//        /// 开户银行帐号号码
//        ///</summary>
//        public string Bankno { get; set; } // bankno

//        ///<summary>
//        /// 网站的佣金.
//        ///</summary>
//        public decimal? Webcommision { get; set; } // webcommision

//        ///<summary>
//        /// 佣金有效时间
//        ///</summary>
//        public System.DateTime? Expireddt { get; set; } // expireddt
//        public string Bgpicture { get; set; } // bgpicture

//        ///<summary>
//        /// 0-不承担(默认值) 1-按比例承担 2-按固定值承担 .默认值为0
//        ///</summary>
//        public string Cardchargeopt { get; set; } // cardchargeopt
//        public decimal? Fixchargeamt { get; set; } // fixchargeamt
//        public decimal? Ratiochargeamt { get; set; } // ratiochargeamt
//        public int? SuggestOnlineNum { get; set; } // suggestOnlineNum

//        ///<summary>
//        /// OO, TO, BI
//        ///</summary>
//        public string AcceptCustomerOpt { get; set; } // acceptCustomerOpt
        
//        public Shop()
//        {
//            Star1 = 0m;
//            Orderlang = "N'N'";
//            Cardchargeopt = "0";
//            SuggestOnlineNum = 0;
//        }
//    }

//    // shopDelieveryArea
//    public class ShopDelieveryArea
//    {

//        ///<summary>
//        /// 主键，自动增长
//        ///</summary>
//        public int Did { get; set; } // did (Primary key)

//        ///<summary>
//        /// 商店/餐馆ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 配送地区的邮編的第一部分
//        ///</summary>
//        public string Postcode1 { get; set; } // postcode1
//        public decimal? DelieveryCost { get; set; } // delieveryCost

//        ///<summary>
//        /// 配送信息说明
//        ///</summary>
//        public string Comments { get; set; } // comments

//        ///<summary>
//        /// 配送地址指定的时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // createDT

//        ///<summary>
//        /// 标识位，备用
//        ///</summary>
//        public string Flag1 { get; set; } // flag1

//        ///<summary>
//        /// 备用字段2
//        ///</summary>
//        public string Bak001 { get; set; } // bak001
        
//        public ShopDelieveryArea()
//        {
//            DelieveryCost = 0m;
//        }
//    }

//    // shopdeliveryCost
//    public class ShopdeliveryCost
//    {

//        ///<summary>
//        /// 表主键，自动增长
//        ///</summary>
//        public int Costid { get; set; } // costid (Primary key)

//        ///<summary>
//        /// 餐馆ID,=shop.shopid
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 配送费用类型. 0.非固定价格(按距离计算).;1-固定价格(按邮編区域指定费用)
//        ///</summary>
//        public string Costtype { get; set; } // costtype

//        ///<summary>
//        /// 基本计价距离
//        ///</summary>
//        public int? BasicDistance { get; set; } // basicDistance

//        ///<summary>
//        /// 基本距离的的计价价格，
//        ///</summary>
//        public decimal? BasicPrice { get; set; } // basicPrice

//        ///<summary>
//        /// 超过基本距离每*miles计价
//        ///</summary>
//        public int? UnitDistance { get; set; } // unitDistance

//        ///<summary>
//        /// 超过基本距离,按指令的单价收费
//        ///</summary>
//        public decimal? UnitRate { get; set; } // unitRate

//        ///<summary>
//        /// Y/N-是否为优惠送餐。缺省为N
//        ///</summary>
//        public string IsDiscount { get; set; } // isDiscount

//        ///<summary>
//        /// 优惠的送餐距离
//        ///</summary>
//        public int? BasicDistance2 { get; set; } // basicDistance2

//        ///<summary>
//        /// 优惠送餐的最小订单额
//        ///</summary>
//        public decimal? MinOrderAmount { get; set; } // minOrderAmount

//        ///<summary>
//        /// 优惠金额
//        ///</summary>
//        public decimal? FreeAmount { get; set; } // freeAmount
        
//        public ShopdeliveryCost()
//        {
//            IsDiscount = "N";
//        }
//    }

//    // shopdiscount
//    public class Shopdiscount
//    {
//        public int Shopid { get; set; } // shopid (Primary key)

//        ///<summary>
//        /// 餐馆公告信息，可以餐厅管理员自行及时维护打折及其它信息
//        ///</summary>
//        public string Board { get; set; } // board

//        ///<summary>
//        /// 优惠/打折方式 0-全埸打折 1-按订单优惠 2-无整体打折
//        ///</summary>
//        public string Discountway { get; set; } // discountway

//        ///<summary>
//        /// 当订单总金额达多少时，才打扣
//        ///</summary>
//        public decimal? Minorderamt { get; set; } // minorderamt

//        ///<summary>
//        /// 打折率.此处存整数，计算时为百分比.
//        ///</summary>
//        public int? Discountrate { get; set; } // discountrate
//    }

//    // ShopExtInfoForApp
//    public class ShopExtInfoForApp
//    {
//        public int Shopid { get; set; } // shopid (Primary key)

//        ///<summary>
//        /// 创建时间
//        ///</summary>
//        public System.DateTime Createdt { get; set; } // createdt

//        ///<summary>
//        /// 是否接收协议（合同）Y/N
//        ///</summary>
//        public string Isaccepted { get; set; } // isaccepted

//        ///<summary>
//        /// 接收协议时间
//        ///</summary>
//        public System.DateTime? Acceptdt { get; set; } // acceptdt

//        ///<summary>
//        /// 接收协议用户登录名
//        ///</summary>
//        public string Acceptuserid { get; set; } // acceptuserid

//        ///<summary>
//        /// 推荐人的用户ID
//        ///</summary>
//        public int? Recuserid { get; set; } // recuserid

//        ///<summary>
//        /// 支付的费用
//        ///</summary>
//        public decimal? Recamt { get; set; } // recamt

//        ///<summary>
//        /// 是否己支付Y/N
//        ///</summary>
//        public string Ispaidrec { get; set; } // ispaidrec

//        ///<summary>
//        /// 支付费用的时间
//        ///</summary>
//        public System.DateTime? Recpaiddt { get; set; } // recpaiddt

//        ///<summary>
//        /// 操作支付的管理员名称
//        ///</summary>
//        public string Operatename { get; set; } // operatename

//        ///<summary>
//        /// 餐馆的状态pending/offline/online
//        ///</summary>
//        public string Shopstatus { get; set; } // shopstatus
//    }

//    // shopJZ
//    public class ShopJz
//    {
//        public int Jzid { get; set; } // jzid (Primary key)
//        public System.DateTime? Createdt { get; set; } // createdt
//        public System.DateTime? Jzstartdt { get; set; } // jzstartdt
//        public System.DateTime? Jzenddt { get; set; } // jzenddt
//        public int? Shopnum { get; set; } // shopnum
//        public decimal? Totalamt { get; set; } // totalamt
//        public decimal? Orderamt { get; set; } // orderamt
//        public decimal? Actualamt { get; set; } // actualamt
//        public int? Ordernumber { get; set; } // ordernumber
//        public decimal? Webamt { get; set; } // webamt
//        public decimal? Webactual { get; set; } // webactual
//        public decimal? Shopamt { get; set; } // shopamt
//        public decimal? Paytoshop { get; set; } // paytoshop
//        public string Str1 { get; set; } // str1
//        public string Str2 { get; set; } // str2
//        public int? Bkint1 { get; set; } // bkint1
//        public decimal? Bknum1 { get; set; } // bknum1
//        public string Createuser { get; set; } // createuser
        
//        public ShopJz()
//        {
//            Bkint1 = 0;
//            Bknum1 = 0m;
//        }
//    }

//    // shopJZDetail
//    public class ShopJzDetail
//    {
//        public int Id { get; set; } // id (Primary key)
//        public int Jzid { get; set; } // jzid
//        public int Shopid { get; set; } // shopid
//        public string Invoiceid { get; set; } // invoiceid
//        public System.DateTime? Frdt { get; set; } // frdt
//        public System.DateTime? Todt { get; set; } // todt
//        public System.DateTime? Creatdt { get; set; } // creatdt
//        public decimal? Amt1 { get; set; } // amt1
//        public int? Quan1 { get; set; } // quan1
//        public decimal? Web1 { get; set; } // web1
//        public decimal? Shop1 { get; set; } // shop1
//        public decimal? Amt2 { get; set; } // amt2
//        public int? Quan2 { get; set; } // quan2
//        public decimal? Web2 { get; set; } // web2
//        public decimal? Shop2 { get; set; } // shop2
//        public decimal? Amt3 { get; set; } // amt3
//        public int? Quan3 { get; set; } // quan3
//        public decimal? Web3 { get; set; } // web3
//        public decimal? Shop3 { get; set; } // shop3
//        public decimal? Webactualget { get; set; } // webactualget
//        public decimal? Shopactualget { get; set; } // shopactualget
//        public decimal? Num1 { get; set; } // num1
//        public decimal? Num2 { get; set; } // num2
//        public string Str1 { get; set; } // str1
//        public string Isnew { get; set; } // isnew
//        public string Ishx { get; set; } // ishx
//        public decimal? Amt1C { get; set; } // amt1c
        
//        public ShopJzDetail()
//        {
//            Isnew = "Y";
//            Ishx = "N";
//        }
//    }

//    // ShoppingCart
//    public class ShoppingCart
//    {

//        ///<summary>
//        /// 主索引键，自动增长号
//        ///</summary>
//        public int Cartid { get; set; } // cartid (Primary key)

//        ///<summary>
//        /// 顾客ID，如果是未登录用户，则为0
//        ///</summary>
//        public int? CustomerId { get; set; } // customerID

//        ///<summary>
//        /// 顾客的sessionID,唯一值
//        ///</summary>
//        public string CustomerSessionId { get; set; } // customerSessionID

//        ///<summary>
//        /// 购物蓝创建时间
//        ///</summary>
//        public System.DateTime? CreatedOn { get; set; } // CreatedOn

//        ///<summary>
//        /// 购物蓝最后更新时间
//        ///</summary>
//        public System.DateTime? UpdateOn { get; set; } // UpdateOn

//        ///<summary>
//        /// 此餐所属商家ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 主产品ID号
//        ///</summary>
//        public int ProductId { get; set; } // ProductID

//        ///<summary>
//        /// 此餐所含主食的ID号
//        ///</summary>
//        public int? Mainfoodid { get; set; } // mainfoodid

//        ///<summary>
//        /// 套餐产品ID号(主产品号可能有多个子产品),多个字产品用，号隔开
//        ///</summary>
//        public string SubProductId { get; set; } // SubProductID

//        ///<summary>
//        /// 主物品的数量
//        ///</summary>
//        public int? Quantity { get; set; } // Quantity
//        public string MenuOptionIDs { get; set; } // MenuOptionIDs
        
//        public ShoppingCart()
//        {
//            CustomerId = 0;
//            Quantity = 1;
//        }
//    }

//    // shoppingHoliday
//    public class ShoppingHoliday
//    {

//        ///<summary>
//        /// 表主键，自动增长
//        ///</summary>
//        public int Holidayid { get; set; } // holidayid (Primary key)

//        ///<summary>
//        /// 商店ID
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 假日开始时间
//        ///</summary>
//        public System.DateTime? FromDt { get; set; } // fromDT

//        ///<summary>
//        /// 假日结束时间
//        ///</summary>
//        public System.DateTime? ToDt { get; set; } // toDT
//    }

//    // shopTickets
//    public class ShopTicket
//    {

//        ///<summary>
//        /// 主鍵ID
//        ///</summary>
//        public int Id { get; set; } // id (Primary key)

//        ///<summary>
//        /// 消费券ID
//        ///</summary>
//        public string Ticketid { get; set; } // ticketid

//        ///<summary>
//        /// 优惠券的名字
//        ///</summary>
//        public string Ticketname { get; set; } // ticketname

//        ///<summary>
//        /// 消费券的描述
//        ///</summary>
//        public string Ticketdesc { get; set; } // ticketdesc

//        ///<summary>
//        /// 消费券面值金额.
//        ///</summary>
//        public int Ticketvalue { get; set; } // ticketvalue

//        ///<summary>
//        /// 券类型（备用）
//        ///</summary>
//        public string Tickettype { get; set; } // tickettype

//        ///<summary>
//        /// 券有效时间
//        ///</summary>
//        public System.DateTime? Starttime { get; set; } // starttime

//        ///<summary>
//        /// 券结束时间
//        ///</summary>
//        public System.DateTime? Endtime { get; set; } // endtime

//        ///<summary>
//        /// 券是否有效
//        ///</summary>
//        public string Isvalid { get; set; } // isvalid

//        ///<summary>
//        /// 生成人的用户ID（管理员ID）
//        ///</summary>
//        public string Operateid { get; set; } // operateid

//        ///<summary>
//        /// 优惠券的生成时间
//        ///</summary>
//        public System.DateTime? CreateDt { get; set; } // createDT

//        ///<summary>
//        /// 领用人的ID
//        ///</summary>
//        public int? Applyuid { get; set; } // applyuid

//        ///<summary>
//        /// 此券是否己经被使用。Y－被使用。N－尚未使用.
//        ///</summary>
//        public string Isused { get; set; } // isused

//        ///<summary>
//        /// 领用时间
//        ///</summary>
//        public System.DateTime? Applydt { get; set; } // applydt

//        ///<summary>
//        /// 领用者使用券时的订单号
//        ///</summary>
//        public int? ApplyOrderId { get; set; } // applyOrderID

//        ///<summary>
//        /// 在哪个商家使用了该券
//        ///</summary>
//        public int? Shopid { get; set; } // shopid
        
//        public ShopTicket()
//        {
//            Isused = "N";
//        }
//    }

//    // shoptransactiondetail
//    public class Shoptransactiondetail
//    {
//        public int Tid { get; set; } // tid (Primary key)
//        public string Invoiceid { get; set; } // invoiceid
//        public string Orderid { get; set; } // orderid
//        public System.DateTime? Orderdt { get; set; } // orderdt
//        public System.DateTime? Delieverdt { get; set; } // delieverdt
//        public decimal? Orderamt { get; set; } // orderamt
//        public string Paydesc { get; set; } // paydesc
//        public decimal? Comrate { get; set; } // comrate
//        public decimal? Webcom { get; set; } // webcom
//        public decimal? Shopyd { get; set; } // shopyd
//        public string Transtype { get; set; } // transtype
//        public decimal? Orderamtc { get; set; } // orderamtc
//    }

//    // shopviewtelrecord
//    public class Shopviewtelrecord
//    {
//        public decimal Infoid { get; set; } // infoid (Primary key)

//        ///<summary>
//        /// Restaurent id
//        ///</summary>
//        public int Shopid { get; set; } // shopid

//        ///<summary>
//        /// 电话查看时间
//        ///</summary>
//        public System.DateTime Viewdt { get; set; } // viewdt

//        ///<summary>
//        /// 电话查看次数
//        ///</summary>
//        public int? Viewcount { get; set; } // viewcount
//    }

//    // shopworktime
//    public class Shopworktime
//    {

//        ///<summary>
//        /// 商家ID
//        ///</summary>
//        public int Shopid { get; set; } // shopid (Primary key)

//        ///<summary>
//        /// 周一开/关店时间段一,e.g: 08:00 - 11:00
//        ///</summary>
//        public string MonFrToA { get; set; } // monFrToA

//        ///<summary>
//        /// 周一开/关店时间段二,e.g: 17:00 -03:00
//        ///</summary>
//        public string MonFrToB { get; set; } // monFrToB

//        ///<summary>
//        /// 周二开/关店时间段一,e.g: 08:00 - 11:00
//        ///</summary>
//        public string TuesFrToA { get; set; } // tuesFrToA

//        ///<summary>
//        /// 周二开/关店时间段2,e.g: 08:00 - 11:00
//        ///</summary>
//        public string TuesFrToB { get; set; } // tuesFrToB

//        ///<summary>
//        /// 周三开/关店时间段1,e.g: 08:00 - 11:00
//        ///</summary>
//        public string WedFrToA { get; set; } // wedFrToA

//        ///<summary>
//        /// 周三开/关店时间段B,e.g: 08:00 - 11:00
//        ///</summary>
//        public string WedFrToB { get; set; } // wedFrToB

//        ///<summary>
//        /// 周四开/关店时间段1,e.g: 08:00 - 11:00
//        ///</summary>
//        public string ThurFrToA { get; set; } // thurFrToA

//        ///<summary>
//        /// 周四开/关店时间段2,e.g: 08:00 - 11:00
//        ///</summary>
//        public string ThurFrToB { get; set; } // thurFrToB

//        ///<summary>
//        /// 周五开/关店时间段1,e.g: 08:00 - 11:00
//        ///</summary>
//        public string FriFrToA { get; set; } // friFrToA

//        ///<summary>
//        /// 周五开/关店时间段2,e.g: 08:00 - 11:00
//        ///</summary>
//        public string FriFrToB { get; set; } // friFrToB

//        ///<summary>
//        /// 周六开/关店时间段1,e.g: 08:00 - 11:00
//        ///</summary>
//        public string SatFrToA { get; set; } // satFrToA

//        ///<summary>
//        /// 周六开/关店时间段2,e.g: 08:00 - 11:00
//        ///</summary>
//        public string SatFrToB { get; set; } // satFrToB

//        ///<summary>
//        /// 周日开/关店时间段1,e.g: 08:00 - 11:00
//        ///</summary>
//        public string SunFrToA { get; set; } // sunFrToA

//        ///<summary>
//        /// 周日开/关店时间段2,e.g: 08:00 - 11:00
//        ///</summary>
//        public string SunFrToB { get; set; } // sunFrToB

//        ///<summary>
//        /// 备用字段
//        ///</summary>
//        public string Wt001 { get; set; } // wt001

//        ///<summary>
//        /// 是否提供午餐Y-是,N-否
//        ///</summary>
//        public string Haslunch { get; set; } // haslunch
//    }

//    // submenu
//    public class Submenu
//    {

//        ///<summary>
//        /// 子菜单主键ID
//        ///</summary>
//        public int Smid { get; set; } // smid (Primary key)

//        ///<summary>
//        /// 主菜单ID
//        ///</summary>
//        public int Mid { get; set; } // mid

//        ///<summary>
//        /// 子菜单名字(主语言：英语)
//        ///</summary>
//        public string MenuName { get; set; } // menuName

//        ///<summary>
//        /// 子菜单名字(第二语言)
//        ///</summary>
//        public string MenuName2 { get; set; } // menuName2

//        ///<summary>
//        /// 子菜单描述（主语言：英语）
//        ///</summary>
//        public string MenuDesc { get; set; } // menuDesc

//        ///<summary>
//        /// 子菜单描述（第二语言）
//        ///</summary>
//        public string MenuDesc2 { get; set; } // menuDesc2

//        ///<summary>
//        /// 子菜单项对应的价格
//        ///</summary>
//        public decimal? Price { get; set; } // price

//        ///<summary>
//        /// 子菜/配菜对应的分类.直接存放分类名称
//        ///</summary>
//        public string Submenucat { get; set; } // submenucat
//    }

//    // sysdiagrams
//    public class Sysdiagram
//    {
//        public string Name { get; set; } // name
//        public int PrincipalId { get; set; } // principal_id
//        public int DiagramId { get; set; } // diagram_id (Primary key)
//        public int? Version { get; set; } // version
//        public byte[] Definition { get; set; } // definition
//    }

//    // sysLog
//    public class SysLog
//    {

//        ///<summary>
//        /// 主键字段，自动增长
//        ///</summary>
//        public decimal Logid { get; set; } // logid (Primary key)

//        ///<summary>
//        /// 操作者用户ID
//        ///</summary>
//        public string Userid { get; set; } // userid

//        ///<summary>
//        /// 操作事由描述
//        ///</summary>
//        public string Actstr { get; set; } // actstr

//        ///<summary>
//        /// 操作时间
//        ///</summary>
//        public System.DateTime Actdt { get; set; } // actdt

//        ///<summary>
//        /// 日志重要度
//        ///</summary>
//        public string Priority { get; set; } // priority
//    }

//    // sysMsg
//    public class SysMsg
//    {

//        ///<summary>
//        /// 主键，自动增长键
//        ///</summary>
//        public int Msgid { get; set; } // msgid (Primary key)

//        ///<summary>
//        /// 消息主题
//        ///</summary>
//        public string Msgtitle { get; set; } // msgtitle

//        ///<summary>
//        /// 消息内容
//        ///</summary>
//        public string Msgcontent { get; set; } // msgcontent

//        ///<summary>
//        /// 消息发送时间
//        ///</summary>
//        public System.DateTime Msgdt { get; set; } // msgdt

//        ///<summary>
//        /// 消息发送对象的用户ID
//        ///</summary>
//        public int Msgto { get; set; } // msgto

//        ///<summary>
//        /// 消息是否己被对方阅读标记。Y－己读。N－未读
//        ///</summary>
//        public string Isread { get; set; } // isread

//        ///<summary>
//        /// 接收者阅读消息的时间
//        ///</summary>
//        public System.DateTime? Readdt { get; set; } // readdt

//        ///<summary>
//        /// 用户是否删除该消息。Y－己删;N－未删;用户在删时只更新这个字段，并不真删，下次用户看不到这条消息了，但网站管理员可以看到这个消息，并用标识为用户己经删除此条消息，网站管理员可以真正删除这条消息
//        ///</summary>
//        public string Isdelete { get; set; } // isdelete
        
//        public SysMsg()
//        {
//            Isread = "‘N’";
//            Isdelete = "N";
//        }
//    }

//    // UserCreditInfo
//    public class UserCreditInfo
//    {

//        ///<summary>
//        /// 流水号，自动增长。主键
//        ///</summary>
//        public decimal Balanceid { get; set; } // balanceid (Primary key)

//        ///<summary>
//        /// 用户ID
//        ///</summary>
//        public int Userid { get; set; } // userid

//        ///<summary>
//        /// 发生时间
//        ///</summary>
//        public System.DateTime Createdt { get; set; } // createdt

//        ///<summary>
//        /// 资金进出方向
//        ///</summary>
//        public string Moneydirection { get; set; } // moneydirection

//        ///<summary>
//        /// 发生金额
//        ///</summary>
//        public decimal? Amt { get; set; } // amt

//        ///<summary>
//        /// 备注信息
//        ///</summary>
//        public string Comment { get; set; } // comment

//        ///<summary>
//        /// 本次操作后的余额
//        ///</summary>
//        public decimal Balanceamt { get; set; } // balanceamt

//        ///<summary>
//        /// 相关联的餐馆ID
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 相关联的订单ID
//        ///</summary>
//        public string Orderid { get; set; } // orderid
//    }

//    // UserReg
//    public class UserReg
//    {

//        ///<summary>
//        /// 0是普通用户;T-Takeway餐馆管理用员;R-Restaurant用户;
//        ///</summary>
//        public string Utype { get; set; } // utype

//        ///<summary>
//        /// 性别:0.女/Miss; 1:男/Mr.
//        ///</summary>
//        public string Gender { get; set; } // gender

//        ///<summary>
//        /// 用户姓名
//        ///</summary>
//        public string Realname { get; set; } // realname

//        ///<summary>
//        /// 邮箱地址（登录名）
//        ///</summary>
//        public string Email { get; set; } // email

//        ///<summary>
//        /// 用户登录密码
//        ///</summary>
//        public string Pwd { get; set; } // pwd

//        ///<summary>
//        /// 密码保护问题
//        ///</summary>
//        public string Pwdquestion { get; set; } // pwdquestion

//        ///<summary>
//        /// 密码保护问题的答案
//        ///</summary>
//        public string Pwdanswer { get; set; } // pwdanswer

//        ///<summary>
//        /// 生日.格式如:1970/10/1
//        ///</summary>
//        public string Birthday { get; set; } // birthday

//        ///<summary>
//        /// 最后登录日期
//        ///</summary>
//        public System.DateTime? Lastlogindate { get; set; } // lastlogindate

//        ///<summary>
//        /// 最后登录IP
//        ///</summary>
//        public string LastloginIp { get; set; } // lastloginIP

//        ///<summary>
//        /// 用户是否被锁定。Y.锁定，用户将无法登录。 N: 未锁定，缺省值为'N'
//        ///</summary>
//        public string Islocked { get; set; } // islocked

//        ///<summary>
//        /// 用户目前总积分数.具体积分记录见积分详细表
//        ///</summary>
//        public int? Score { get; set; } // score
//        public int? Credits { get; set; } // credits

//        ///<summary>
//        /// 是否被列入黑名单. Y.是，N。否.缺省值为N
//        ///</summary>
//        public string Isblocked { get; set; } // isblocked

//        ///<summary>
//        /// 是否愿意通过邮件接受网站通知消息.Y愿意。N不愿意。缺省值为Y
//        ///</summary>
//        public string Isnoticed { get; set; } // isnoticed

//        ///<summary>
//        /// 帐号创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 用户登录错误次数, 累积登录超过6次则锁定此户。如果在后台解锁时，则将此次数清0
//        ///</summary>
//        public int? LoginErrTime { get; set; } // loginErrTime
//        public int Uid { get; set; } // uid (Primary key)
//        public string Houseno { get; set; } // houseno
//        public string Addr1 { get; set; } // addr1
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
        
//        public UserReg()
//        {
//            Islocked = "N";
//            Score = 0;
//            Credits = 0;
//            Isblocked = "N";
//            Isnoticed = "Y";
//            LoginErrTime = 0;
//        }
//    }

//    // userscore
//    public class Userscore
//    {

//        ///<summary>
//        /// 主键ID，自动增长
//        ///</summary>
//        public int Sid { get; set; } // sid (Primary key)

//        ///<summary>
//        /// 用户ID
//        ///</summary>
//        public int? Uid { get; set; } // uid

//        ///<summary>
//        /// 获取积分的时间
//        ///</summary>
//        public System.DateTime? Scoretime { get; set; } // scoretime

//        ///<summary>
//        /// 操作用户
//        ///</summary>
//        public string Operateuser { get; set; } // operateuser

//        ///<summary>
//        /// 积分值
//        ///</summary>
//        public int? Score { get; set; } // score

//        ///<summary>
//        /// 积分值正负值。+表示奖励积分，-表示消费积分
//        ///</summary>
//        public string Operation { get; set; } // operation

//        ///<summary>
//        /// 积分类型: 0.表示推荐用户得分，1.表示评价得分
//        ///</summary>
//        public string Scoretype { get; set; } // scoretype

//        ///<summary>
//        /// 积分事由描述
//        ///</summary>
//        public string Description { get; set; } // description
//    }

//    // voucherinfo
//    public class Voucherinfo
//    {
//        public int Voucherid { get; set; } // voucherid (Primary key)

//        ///<summary>
//        /// 优惠券代码
//        ///</summary>
//        public string Vouchercode { get; set; } // vouchercode

//        ///<summary>
//        /// 生效日期
//        ///</summary>
//        public System.DateTime? Fromdt { get; set; } // fromdt

//        ///<summary>
//        /// 失效日期
//        ///</summary>
//        public System.DateTime? Todt { get; set; } // todt

//        ///<summary>
//        /// 优惠方式(1:按比例优惠 2:按固定金额优惠)
//        ///</summary>
//        public string Discountopt { get; set; } // discountopt

//        ///<summary>
//        /// 优惠值
//        ///</summary>
//        public decimal? Discountamt { get; set; } // discountamt

//        ///<summary>
//        /// 起始金额
//        ///</summary>
//        public decimal? Basicamt { get; set; } // basicamt

//        ///<summary>
//        /// 有效区域
//        ///</summary>
//        public string Areacode { get; set; } // areacode

//        ///<summary>
//        /// 销售人员名字
//        ///</summary>
//        public string Salesname { get; set; } // salesname

//        ///<summary>
//        /// 哪个用户可用,为0表示不限定用户
//        ///</summary>
//        public int? Userid { get; set; } // userid

//        ///<summary>
//        /// 指定餐馆可用0表示，不限餐馆
//        ///</summary>
//        public int? Shopid { get; set; } // shopid

//        ///<summary>
//        /// 这个voucher的可用次数
//        ///</summary>
//        public int? Vouchercount { get; set; } // vouchercount

//        ///<summary>
//        /// 每个用户可用此voucher次数
//        ///</summary>
//        public int? Usesperuser { get; set; } // usesperuser

//        ///<summary>
//        /// 创建时间
//        ///</summary>
//        public System.DateTime? Createdt { get; set; } // createdt

//        ///<summary>
//        /// 创建人
//        ///</summary>
//        public string Createuser { get; set; } // createuser

//        ///<summary>
//        /// 关于此优惠券的说明
//        ///</summary>
//        public string Comment { get; set; } // comment

//        ///<summary>
//        /// 此记录是否被删除0-未删 1-己删除
//        ///</summary>
//        public string Isdelete { get; set; } // isdelete

//        ///<summary>
//        /// 是否己使用。0未使用1己使用
//        ///</summary>
//        public string Isused { get; set; } // isused
//        public decimal? Creditback { get; set; } // creditback
        
//        public Voucherinfo()
//        {
//            Discountopt = "2";
//            Isdelete = "0";
//        }
//    }

//    // vwAppUserProfile
//    public class VwAppUserProfile
//    {
//        public string Operatecode { get; set; } // operatecode
//        public System.DateTime? Offdutytodt { get; set; } // offdutytodt
//        public string Onduty { get; set; } // onduty
//        public string Infoalertfile { get; set; } // infoalertfile
//        public string Neworderalertfile { get; set; } // neworderalertfile
//        public string Istakeorder { get; set; } // istakeorder
//        public string Devicetoken { get; set; } // devicetoken
//        public int Appuserid { get; set; } // appuserid
//        public int? Shopid { get; set; } // shopid
//        public string Loginname { get; set; } // loginname
//        public string Password { get; set; } // password
//        public string Usertype { get; set; } // usertype
//        public string Username { get; set; } // username
//        public string Status { get; set; } // status
//        public System.DateTime? Logindt { get; set; } // logindt
//        public System.DateTime? Createdt { get; set; } // createdt
//        public string Createuser { get; set; } // createuser
//        public string Loginip { get; set; } // loginip
//        public string Loginstatus { get; set; } // loginstatus
//        public int? LoginErrCount { get; set; } // LoginErrCount
//        public string Apptokenstr { get; set; } // apptokenstr
//    }

//    // vw_customerreview
//    public class VwCustomerreview
//    {
//        public string Sname { get; set; } // sname
//        public string Sname2 { get; set; } // sname2
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public int Reviewid { get; set; } // reviewid
//        public decimal? Rate1 { get; set; } // rate1
//        public decimal? Rate2 { get; set; } // rate2
//        public decimal? Rate3 { get; set; } // rate3
//        public int Shopid { get; set; } // shopid
//        public string Townname { get; set; } // townname
//        public string Email { get; set; } // email
//        public System.DateTime? ReviewDate { get; set; } // reviewDate
//        public string Orderid { get; set; } // orderid
//        public string Comment { get; set; } // comment
//        public string Username { get; set; } // username
//        public int? Uid { get; set; } // uid
//        public decimal? Rate4 { get; set; } // rate4
//        public string Reviewtype { get; set; } // reviewtype
//        public int? Objid { get; set; } // objid
//    }

//    // vwGetAppDeviceInfo
//    public class VwGetAppDeviceInfo
//    {
//        public int Deviceid { get; set; } // deviceid
//        public string Devicetoken { get; set; } // devicetoken
//        public string Devicetype { get; set; } // devicetype
//        public string Deviceversion { get; set; } // deviceversion
//        public System.DateTime? Registdt { get; set; } // registdt
//        public string Channels { get; set; } // channels
//        public System.DateTime? LastHeartbeatAt { get; set; } // LastHeartbeatAt
//        public string Loginname { get; set; } // loginname
//        public int? Shopid { get; set; } // shopid
//    }

//    // vwGetAppRestInfo
//    public class VwGetAppRestInfo
//    {
//        public int Shopid { get; set; } // shopid
//        public System.DateTime Createdt { get; set; } // createdt
//        public string Isaccepted { get; set; } // isaccepted
//        public System.DateTime? Acceptdt { get; set; } // acceptdt
//        public string Acceptuserid { get; set; } // acceptuserid
//        public int? Recuserid { get; set; } // recuserid
//        public decimal? Recamt { get; set; } // recamt
//        public string Ispaidrec { get; set; } // ispaidrec
//        public System.DateTime? Recpaiddt { get; set; } // recpaiddt
//        public string Operatename { get; set; } // operatename
//        public string Shopstatus { get; set; } // shopstatus
//        public string Sname { get; set; } // sname
//        public string Cityname { get; set; } // cityname
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Contactname { get; set; } // contactname
//        public string ContactTel { get; set; } // contactTel
//    }

//    // vwGetOrderInfo
//    public class VwGetOrderInfo
//    {
//        public int Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string OrderId { get; set; } // OrderID
//        public string Useremail { get; set; } // useremail
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt
//        public string Deliveryway { get; set; } // deliveryway
//        public string Sname2 { get; set; } // sname2
//        public string Ispaid { get; set; } // ispaid
//        public string Payway { get; set; } // payway
//        public string Isnew { get; set; } // isnew
//        public System.DateTime? Pickupdt { get; set; } // pickupdt
//        public int Uid { get; set; } // uid
//        public string Orderstatustxt { get; set; } // orderstatustxt
//        public string Tel1 { get; set; } // tel1
//        public decimal? Totalamount { get; set; } // totalamount
//    }

//    // vwGetOrderInfoForAdmin
//    public class VwGetOrderInfoForAdmin
//    {
//        public int Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string Cityname { get; set; } // cityname
//        public string OrderId { get; set; } // OrderID
//        public string Useremail { get; set; } // useremail
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt
//        public string Orderstatus { get; set; } // orderstatus
//        public string Deliveryway { get; set; } // deliveryway
//        public string Sname2 { get; set; } // sname2
//        public string Ispaid { get; set; } // ispaid
//        public string Payway { get; set; } // payway
//        public string Isnew { get; set; } // isnew
//        public System.DateTime? Pickupdt { get; set; } // pickupdt
//        public int Uid { get; set; } // uid
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Orderstatustxt { get; set; } // orderstatustxt
//        public System.DateTime? Isonline { get; set; } // isonline
//        public string Acceptorder { get; set; } // acceptorder
//        public string Isjz { get; set; } // isjz
//        public string IsCancelled { get; set; } // isCancelled
//        public decimal? Comrate { get; set; } // comrate
//        public decimal? Totalamount { get; set; } // totalamount
//    }

//    // vwGetOrderListForApp
//    public class VwGetOrderListForApp
//    {
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Addr3 { get; set; } // addr3
//        public System.DateTime? Deliverdt { get; set; } // deliverdt
//        public int Shopid { get; set; } // shopid
//        public string OrderId { get; set; } // OrderID
//        public string Payway { get; set; } // payway
//        public string Deliveryway { get; set; } // deliveryway
//        public System.DateTime? Pickupdt { get; set; } // pickupdt
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt
//        public string IsCancelled { get; set; } // isCancelled
//        public string Isnew { get; set; } // isnew
//        public string Ispaid { get; set; } // ispaid
//        public System.DateTime? OrderCancelledDt { get; set; } // orderCancelledDT
//        public string Townname { get; set; } // townname
//        public decimal? Totalamount { get; set; } // totalamount
//    }

//    // vwGetShopInfo
//    public class VwGetShopInfo
//    {
//        public string Loginname { get; set; } // loginname
//        public int Uid { get; set; } // uid
//        public string Sname { get; set; } // sname
//        public int? Shopid { get; set; } // shopid
//        public string Sname2 { get; set; } // sname2
//        public string Mealtype { get; set; } // mealtype
//        public string ServiceType { get; set; } // serviceType
//        public string Tel1 { get; set; } // tel1
//        public string Tel2 { get; set; } // tel2
//        public string Fax { get; set; } // fax
//        public string Email { get; set; } // email
//        public string Gotnotice { get; set; } // gotnotice
//        public string Contactname { get; set; } // contactname
//        public string ContactTel { get; set; } // contactTel
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Addr3 { get; set; } // addr3
//        public string Cityname { get; set; } // cityname
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Logo { get; set; } // logo
//        public string Vat { get; set; } // VAT
//        public string Description { get; set; } // description
//        public decimal? Star1 { get; set; } // star1
//        public decimal? Star2 { get; set; } // star2
//        public decimal? Star3 { get; set; } // star3
//        public decimal? Star4 { get; set; } // star4
//        public System.DateTime? UpdateTime { get; set; } // updateTime
//        public string Flag1 { get; set; } // flag1
//        public string Alias { get; set; } // alias
//        public string MonFrToA { get; set; } // monFrToA
//        public string MonFrToB { get; set; } // monFrToB
//        public string TuesFrToB { get; set; } // tuesFrToB
//        public string TuesFrToA { get; set; } // tuesFrToA
//        public string WedFrToA { get; set; } // wedFrToA
//        public string WedFrToB { get; set; } // wedFrToB
//        public string ThurFrToA { get; set; } // thurFrToA
//        public string ThurFrToB { get; set; } // thurFrToB
//        public string FriFrToA { get; set; } // friFrToA
//        public string FriFrToB { get; set; } // friFrToB
//        public string SatFrToA { get; set; } // satFrToA
//        public string SatFrToB { get; set; } // satFrToB
//        public string SunFrToA { get; set; } // sunFrToA
//        public string SunFrToB { get; set; } // sunFrToB
//        public string Utype { get; set; } // utype
//        public string Islocked { get; set; } // islocked
//        public decimal? DeliveryMinOrder { get; set; } // DeliveryMinOrder
//        public string DeliveryLastOt { get; set; } // DeliveryLastOT
//        public string Deliverytime { get; set; } // Deliverytime
//        public string DeliveryWay { get; set; } // deliveryWay
//        public string Acceptorder { get; set; } // acceptorder
//        public string Acceptpay { get; set; } // acceptpay
//        public string Haslunch { get; set; } // haslunch
//        public string ServiceTypeL { get; set; } // serviceTypeL
//        public int? SuggestOnlineNum { get; set; } // suggestOnlineNum
//        public string AcceptCustomerOpt { get; set; } // acceptCustomerOpt
//        public decimal? Webcommision { get; set; } // webcommision
//        public string Shopstatus { get; set; } // shopstatus
//    }

//    // vwGetShopInfo2
//    public class VwGetShopInfo2
//    {
//        public string Loginname { get; set; } // loginname
//        public int Uid { get; set; } // uid
//        public string Islocked { get; set; } // islocked
//        public string LastloginIp { get; set; } // lastloginIP
//        public System.DateTime? Lastlogindate { get; set; } // lastlogindate
//        public System.DateTime? Createdt { get; set; } // createdt
//        public string Sname { get; set; } // sname
//        public int? Shopid { get; set; } // shopid
//        public string Sname2 { get; set; } // sname2
//        public string Mealtype { get; set; } // mealtype
//        public string ServiceType { get; set; } // serviceType
//        public string Tel1 { get; set; } // tel1
//        public string Tel2 { get; set; } // tel2
//        public string Fax { get; set; } // fax
//        public string Email { get; set; } // email
//        public string Gotnotice { get; set; } // gotnotice
//        public string Contactname { get; set; } // contactname
//        public string ContactTel { get; set; } // contactTel
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Addr3 { get; set; } // addr3
//        public string Cityname { get; set; } // cityname
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Logo { get; set; } // logo
//        public string Vat { get; set; } // VAT
//        public string Description { get; set; } // description
//        public decimal? Star1 { get; set; } // star1
//        public decimal? Star2 { get; set; } // star2
//        public decimal? Star3 { get; set; } // star3
//        public decimal? Star4 { get; set; } // star4
//        public System.DateTime? UpdateTime { get; set; } // updateTime
//        public string Flag1 { get; set; } // flag1
//        public string Alias { get; set; } // alias
//        public string Acceptorder { get; set; } // acceptorder
//        public string Utype { get; set; } // utype
//        public System.DateTime? Isonline { get; set; } // isonline
//        public int? SuggestOnlineNum { get; set; } // suggestOnlineNum
//        public string AcceptCustomerOpt { get; set; } // acceptCustomerOpt
//    }

//    // vwGetShopJZDetail
//    public class VwGetShopJzDetail
//    {
//        public int Id { get; set; } // id
//        public int Jzid { get; set; } // jzid
//        public int Shopid { get; set; } // shopid
//        public string Invoiceid { get; set; } // invoiceid
//        public System.DateTime? Frdt { get; set; } // frdt
//        public System.DateTime? Todt { get; set; } // todt
//        public System.DateTime? Creatdt { get; set; } // creatdt
//        public decimal? Amt1 { get; set; } // amt1
//        public decimal? Web1 { get; set; } // web1
//        public decimal? Shop1 { get; set; } // shop1
//        public decimal? Amt2 { get; set; } // amt2
//        public decimal? Web2 { get; set; } // web2
//        public decimal? Shop2 { get; set; } // shop2
//        public decimal? Amt3 { get; set; } // amt3
//        public int? Quan3 { get; set; } // quan3
//        public decimal? Web3 { get; set; } // web3
//        public decimal? Shop3 { get; set; } // shop3
//        public decimal? Webactualget { get; set; } // webactualget
//        public decimal? Shopactualget { get; set; } // shopactualget
//        public decimal? Num1 { get; set; } // num1
//        public decimal? Num2 { get; set; } // num2
//        public string Str1 { get; set; } // str1
//        public string Isnew { get; set; } // isnew
//        public string Ishx { get; set; } // ishx
//        public string Shoploginname { get; set; } // shoploginname
//        public int? Ordernum { get; set; } // ordernum
//    }

//    // vwGetUserBalanceSummary
//    public class VwGetUserBalanceSummary
//    {
//        public string Utype { get; set; } // utype
//        public int Userid { get; set; } // userid
//        public decimal Balanceamt { get; set; } // balanceamt
//        public string Email { get; set; } // email
//    }

//    // vwGetUserFavShopInfo
//    public class VwGetUserFavShopInfo
//    {
//        public string Cityname { get; set; } // cityname
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public int Fid { get; set; } // fid
//        public int Uid { get; set; } // uid
//        public string Ftype { get; set; } // ftype
//        public int? Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string Logo { get; set; } // logo
//        public string Alias { get; set; } // alias
//    }

//    // vwGetUserInfo
//    public class VwGetUserInfo
//    {
//        public int Uid { get; set; } // uid
//        public string Utype { get; set; } // utype
//        public string Gender { get; set; } // gender
//        public string Realname { get; set; } // realname
//        public string Email { get; set; } // email
//        public string Pwd { get; set; } // pwd
//        public string Pwdquestion { get; set; } // pwdquestion
//        public string Pwdanswer { get; set; } // pwdanswer
//        public string Birthday { get; set; } // birthday
//        public System.DateTime? Lastlogindate { get; set; } // lastlogindate
//        public string LastloginIp { get; set; } // lastloginIP
//        public string Islocked { get; set; } // islocked
//        public int? Score { get; set; } // score
//        public string Isblocked { get; set; } // isblocked
//        public string Isnoticed { get; set; } // isnoticed
//        public System.DateTime? Createdt { get; set; } // createdt
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Cityname { get; set; } // cityname
//        public int? LoginErrTime { get; set; } // loginErrTime
//        public string Mobile { get; set; } // mobile
//        public int? Credits { get; set; } // credits
//    }

//    // vwOrdersValid
//    public class VwOrdersValid
//    {
//        public string OrderId { get; set; } // OrderID
//        public int Shopid { get; set; } // shopid
//        public int Uid { get; set; } // uid
//        public string Useremail { get; set; } // useremail
//        public int? Amount { get; set; } // amount
//        public decimal? Unitprice { get; set; } // unitprice
//        public string Payway { get; set; } // payway
//        public string Ispaid { get; set; } // ispaid
//        public string Ticketnumber { get; set; } // ticketnumber
//        public int? Ticketvalue { get; set; } // ticketvalue
//        public string Deliveryway { get; set; } // deliveryway
//        public System.DateTime? Pickupdt { get; set; } // pickupdt
//        public string Comments { get; set; } // comments
//        public string Orderstatus { get; set; } // orderstatus
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt
//        public System.DateTime? OrderUpdatedt { get; set; } // orderUpdatedt
//        public string IsCancelled { get; set; } // isCancelled
//        public System.DateTime? OrderCancelledDt { get; set; } // orderCancelledDT
//        public string CancelComments { get; set; } // cancelComments
//        public decimal? Totalamount { get; set; } // totalamount
//        public decimal? Totalprice1 { get; set; } // totalprice1
//        public decimal? DiscountRate { get; set; } // discountRate
//        public decimal? Afterdiscount { get; set; } // afterdiscount
//        public decimal? Deliverycharge { get; set; } // deliverycharge
//        public decimal? ServiceCharge { get; set; } // serviceCharge
//        public decimal? CreditcardCharge { get; set; } // creditcardCharge
//        public decimal? Tips { get; set; } // tips
//        public string Isjz { get; set; } // isjz
//        public System.DateTime? Jzdt { get; set; } // jzdt
//        public decimal? Actualamount { get; set; } // actualamount
//        public string UserIp { get; set; } // userIP
//        public string Isnew { get; set; } // isnew
//        public decimal? Comrate { get; set; } // comrate
//    }

//    // vwShopOrders
//    public class VwShopOrder
//    {
//        public int Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Cityname { get; set; } // cityname
//        public string Expr1 { get; set; } // Expr1
//        public string Tel1 { get; set; } // tel1
//        public int? Count { get; set; } // count
//        public decimal? Sum { get; set; } // sum
//    }

//    // vwShopsValid
//    public class VwShopsValid
//    {
//        public int Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string Sname2 { get; set; } // sname2
//        public string Mealtype { get; set; } // mealtype
//        public string ServiceType { get; set; } // serviceType
//        public string ServiceTypeL { get; set; } // serviceTypeL
//        public string Tel1 { get; set; } // tel1
//        public string Tel2 { get; set; } // tel2
//        public string Fax { get; set; } // fax
//        public string Email { get; set; } // email
//        public string Gotnotice { get; set; } // gotnotice
//        public string Contactname { get; set; } // contactname
//        public string ContactTel { get; set; } // contactTel
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Addr3 { get; set; } // addr3
//        public string Cityname { get; set; } // cityname
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public string Longitude { get; set; } // longitude
//        public string Latitude { get; set; } // latitude
//        public string Logo { get; set; } // logo
//        public string Vat { get; set; } // VAT
//        public string Mapstr { get; set; } // mapstr
//        public string Description { get; set; } // description
//        public decimal? Star1 { get; set; } // star1
//        public decimal? Star2 { get; set; } // star2
//        public decimal? Star3 { get; set; } // star3
//        public decimal? Star4 { get; set; } // star4
//        public System.DateTime? UpdateTime { get; set; } // updateTime
//        public string Flag1 { get; set; } // flag1
//        public string Alias { get; set; } // alias
//        public string Acceptpay { get; set; } // acceptpay
//        public string Orderlang { get; set; } // orderlang
//        public string Acceptorder { get; set; } // acceptorder
//        public string DeliveryWay { get; set; } // deliveryWay
//        public string Deliverytime { get; set; } // Deliverytime
//        public string DeliveryLastOt { get; set; } // DeliveryLastOT
//        public decimal? DeliveryMinOrder { get; set; } // DeliveryMinOrder
//        public string Bankname { get; set; } // bankname
//        public string Bankusername { get; set; } // bankusername
//        public string Banksortcode { get; set; } // banksortcode
//        public string Bankno { get; set; } // bankno
//        public decimal? Webcommision { get; set; } // webcommision
//        public System.DateTime? Expireddt { get; set; } // expireddt
//        public string Isblocked { get; set; } // isblocked
//        public int Uid { get; set; } // uid
//    }

//    // vwSysMsg
//    public class VwSysMsg
//    {
//        public int Msgto { get; set; } // msgto
//        public int Msgid { get; set; } // msgid
//        public string Msgtitle { get; set; } // msgtitle
//        public System.DateTime Msgdt { get; set; } // msgdt
//        public string Msgcontent { get; set; } // msgcontent
//        public string Isread { get; set; } // isread
//        public string Isdelete { get; set; } // isdelete
//        public System.DateTime? Readdt { get; set; } // readdt
//        public string Email { get; set; } // email
//    }

//    // vwUser2Device
//    public class VwUser2Device
//    {
//        public int? Shopid { get; set; } // shopid
//        public int? Appuserid { get; set; } // appuserid
//        public string Devicetoken { get; set; } // devicetoken
//        public string Devicetype { get; set; } // devicetype
//        public string Deviceversion { get; set; } // deviceversion
//        public System.DateTime? Registdt { get; set; } // registdt
//        public string Channels { get; set; } // channels
//        public System.DateTime? LastHeartbeatAt { get; set; } // LastHeartbeatAt
//        public int Deviceid { get; set; } // deviceid
//    }

//    // vwUserBalanceSummary
//    public class VwUserBalanceSummary
//    {
//        public decimal Balanceid { get; set; } // balanceid
//        public int Userid { get; set; } // userid
//        public System.DateTime Createdt { get; set; } // createdt
//        public string Moneydirection { get; set; } // moneydirection
//        public decimal? Amt { get; set; } // amt
//        public string Comment { get; set; } // comment
//        public decimal Balanceamt { get; set; } // balanceamt
//        public int? Shopid { get; set; } // shopid
//        public string Orderid { get; set; } // orderid
//    }

//    // vwValidOrders
//    public class VwValidOrder
//    {
//        public string OrderId { get; set; } // OrderID
//        public string Payway { get; set; } // payway
//        public int Shopid { get; set; } // shopid
//        public int Uid { get; set; } // uid
//        public string Ispaid { get; set; } // ispaid
//        public string Deliveryway { get; set; } // deliveryway
//        public System.DateTime? Pickupdt { get; set; } // pickupdt
//        public System.DateTime? Ordercreatedt { get; set; } // ordercreatedt
//        public string IsCancelled { get; set; } // isCancelled
//        public decimal? Totalamount { get; set; } // totalamount
//        public decimal? Totalprice1 { get; set; } // totalprice1
//        public decimal? Afterdiscount { get; set; } // afterdiscount
//        public decimal? Deliverycharge { get; set; } // deliverycharge
//        public decimal? CreditcardCharge { get; set; } // creditcardCharge
//        public decimal? Tips { get; set; } // tips
//        public decimal? Actualamount { get; set; } // actualamount
//        public string Isjz { get; set; } // isjz
//        public decimal? Comrate { get; set; } // comrate
//    }

//    // vwValidShops
//    public class VwValidShop
//    {
//        public int Shopid { get; set; } // shopid
//        public string Sname { get; set; } // sname
//        public string Sname2 { get; set; } // sname2
//        public string Tel1 { get; set; } // tel1
//        public string Tel2 { get; set; } // tel2
//        public string ContactTel { get; set; } // contactTel
//        public string Addr1 { get; set; } // addr1
//        public string Addr2 { get; set; } // addr2
//        public string Cityname { get; set; } // cityname
//        public string Postcode1 { get; set; } // postcode1
//        public string Postcode2 { get; set; } // postcode2
//        public decimal? Webcommision { get; set; } // webcommision
//        public System.DateTime? Expireddt { get; set; } // expireddt
//        public string Islocked { get; set; } // islocked
//        public string Acceptpay { get; set; } // acceptpay
//    }

//    // vwviewtel
//    public class Vwviewtel
//    {
//        public decimal Infoid { get; set; } // infoid
//        public int Shopid { get; set; } // shopid
//        public System.DateTime Viewdt { get; set; } // viewdt
//        public int? Viewcount { get; set; } // viewcount
//        public string Sname { get; set; } // sname
//        public string Sname2 { get; set; } // sname2
//    }


//    // ************************************************************************
//    // POCO Configuration

//    // adminAcc
//    public class AdminAccConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AdminAcc>
//    {
//        public AdminAccConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AdminAccConfiguration(string schema)
//        {
//            ToTable(schema + ".adminAcc");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Loginname).HasColumnName("loginname").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Loginpwd).HasColumnName("loginpwd").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Createtime).HasColumnName("createtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Rightcode).HasColumnName("rightcode").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//            Property(x => x.Lastlogindt).HasColumnName("lastlogindt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Lastloginip).HasColumnName("lastloginip").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Isvalid).HasColumnName("isvalid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isadmin).HasColumnName("isadmin").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // adv
//    public class AdvConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Adv>
//    {
//        public AdvConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AdvConfiguration(string schema)
//        {
//            ToTable(schema + ".adv");
//            HasKey(x => x.Advid);

//            Property(x => x.Advid).HasColumnName("advid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Pc).HasColumnName("pc").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Shoploginname).HasColumnName("shoploginname").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Starttime).HasColumnName("starttime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Endtime).HasColumnName("endtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Urllink).HasColumnName("urllink").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
//            Property(x => x.AdvPic).HasColumnName("advPic").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Indexno).HasColumnName("indexno").IsOptional().HasColumnType("int");
//            Property(x => x.Clicknum).HasColumnName("clicknum").IsOptional().HasColumnType("int");
//            Property(x => x.Recdate).HasColumnName("recdate").IsOptional().HasColumnType("datetime");
//            Property(x => x.Advposition).HasColumnName("advposition").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // advsearch
//    public class AdvsearchConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Advsearch>
//    {
//        public AdvsearchConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AdvsearchConfiguration(string schema)
//        {
//            ToTable(schema + ".advsearch");
//            HasKey(x => x.Advid);

//            Property(x => x.Advid).HasColumnName("advid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Postcode).HasColumnName("postcode").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Indexno).HasColumnName("indexno").IsOptional().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Startdt).HasColumnName("startdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Enddt).HasColumnName("enddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // AppUserInfo
//    public class AppUserInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AppUserInfo>
//    {
//        public AppUserInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AppUserInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".AppUserInfo");
//            HasKey(x => x.Appuserid);

//            Property(x => x.Appuserid).HasColumnName("appuserid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Loginname).HasColumnName("loginname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Password).HasColumnName("password").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Usertype).HasColumnName("usertype").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Username).HasColumnName("username").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Status).HasColumnName("status").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Logindt).HasColumnName("logindt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Loginip).HasColumnName("loginip").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Loginstatus).HasColumnName("loginstatus").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(1);
//            Property(x => x.LoginErrCount).HasColumnName("LoginErrCount").IsOptional().HasColumnType("int");
//            Property(x => x.Apptokenstr).HasColumnName("apptokenstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // AppUserSetting
//    public class AppUserSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AppUserSetting>
//    {
//        public AppUserSettingConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AppUserSettingConfiguration(string schema)
//        {
//            ToTable(schema + ".AppUserSetting");
//            HasKey(x => x.Appuserid);

//            Property(x => x.Appuserid).HasColumnName("appuserid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Operatecode).HasColumnName("operatecode").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Istakeorder).HasColumnName("istakeorder").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Neworderalertfile).HasColumnName("neworderalertfile").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Infoalertfile).HasColumnName("infoalertfile").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Onduty).HasColumnName("onduty").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Offdutytodt).HasColumnName("offdutytodt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Langopt).HasColumnName("langopt").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // AppUserToDevice
//    public class AppUserToDeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AppUserToDevice>
//    {
//        public AppUserToDeviceConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public AppUserToDeviceConfiguration(string schema)
//        {
//            ToTable(schema + ".AppUserToDevice");
//            HasKey(x => x.Infoid);

//            Property(x => x.Infoid).HasColumnName("infoid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Appuserid).HasColumnName("appuserid").IsOptional().HasColumnType("int");
//        }
//    }

//    // blocklist
//    public class BlocklistConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Blocklist>
//    {
//        public BlocklistConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public BlocklistConfiguration(string schema)
//        {
//            ToTable(schema + ".blocklist");
//            HasKey(x => x.Blockid);

//            Property(x => x.Blockid).HasColumnName("blockid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Email).HasColumnName("email").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(100);
//            Property(x => x.Mobile).HasColumnName("mobile").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Landline).HasColumnName("landline").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Reason).HasColumnName("reason").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//        }
//    }

//    // cashreturn
//    public class CashreturnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cashreturn>
//    {
//        public CashreturnConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public CashreturnConfiguration(string schema)
//        {
//            ToTable(schema + ".cashreturn");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsOptional().HasColumnType("int");
//            Property(x => x.Cashid).HasColumnName("cashid").IsOptional().HasColumnType("int");
//            Property(x => x.Amount).HasColumnName("amount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Atime).HasColumnName("atime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Cardid).HasColumnName("cardid").IsOptional().HasColumnType("int");
//            Property(x => x.Status).HasColumnName("status").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//        }
//    }

//    // commission
//    public class CommissionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Commission>
//    {
//        public CommissionConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public CommissionConfiguration(string schema)
//        {
//            ToTable(schema + ".commission");
//            HasKey(x => x.Shopid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Starttime).HasColumnName("starttime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Endtime).HasColumnName("endtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Amount).HasColumnName("amount").IsRequired().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.ModifiedDt).HasColumnName("modifiedDt").IsOptional().HasColumnType("datetime");
//        }
//    }

//    // creditCard
//    public class CreditCardConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CreditCard>
//    {
//        public CreditCardConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public CreditCardConfiguration(string schema)
//        {
//            ToTable(schema + ".creditCard");
//            HasKey(x => x.Cardid);

//            Property(x => x.Cardid).HasColumnName("cardid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Acct).HasColumnName("ACCT").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.AcctType).HasColumnName("AcctType").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Street).HasColumnName("Street").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.City).HasColumnName("city").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.State).HasColumnName("state").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Country).HasColumnName("country").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Zip).HasColumnName("zip").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.CardIssue).HasColumnName("cardIssue").IsOptional().HasColumnType("int");
//            Property(x => x.CardStart).HasColumnName("cardStart").IsOptional().HasColumnType("nvarchar").HasMaxLength(15);
//            Property(x => x.ExpDate).HasColumnName("expDate").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.FirstName).HasColumnName("firstName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.LastName).HasColumnName("lastName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Cvv2).HasColumnName("CVV2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.CreateDt).HasColumnName("createDT").IsOptional().HasColumnType("datetime");
//        }
//    }

//    // customerReview
//    public class CustomerReviewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CustomerReview>
//    {
//        public CustomerReviewConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public CustomerReviewConfiguration(string schema)
//        {
//            ToTable(schema + ".customerReview");
//            HasKey(x => x.Reviewid);

//            Property(x => x.Reviewid).HasColumnName("reviewid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsOptional().HasColumnType("int");
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Rate1).HasColumnName("rate1").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Rate2).HasColumnName("rate2").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Rate3).HasColumnName("rate3").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Rate4).HasColumnName("rate4").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.ReviewDate).HasColumnName("reviewDate").IsOptional().HasColumnType("datetime");
//            Property(x => x.Reviewtype).HasColumnName("reviewtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Objid).HasColumnName("objid").IsOptional().HasColumnType("int");
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.ReplyMsg).HasColumnName("replyMsg").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.ReplyDt).HasColumnName("replyDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Username).HasColumnName("username").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // deliveryAddr
//    public class DeliveryAddrConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DeliveryAddr>
//    {
//        public DeliveryAddrConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public DeliveryAddrConfiguration(string schema)
//        {
//            ToTable(schema + ".deliveryAddr");
//            HasKey(x => x.Addrid);

//            Property(x => x.Addrid).HasColumnName("addrid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Username).HasColumnName("username").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Addrname).HasColumnName("addrname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr1).HasColumnName("addr1").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsRequired().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Tel).HasColumnName("tel").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Mobile).HasColumnName("mobile").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // deviceinfo
//    public class DeviceinfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Deviceinfo>
//    {
//        public DeviceinfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public DeviceinfoConfiguration(string schema)
//        {
//            ToTable(schema + ".deviceinfo");
//            HasKey(x => x.Deviceid);

//            Property(x => x.Deviceid).HasColumnName("deviceid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Devicetype).HasColumnName("devicetype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deviceversion).HasColumnName("deviceversion").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Registdt).HasColumnName("registdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Channels).HasColumnName("channels").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.LastHeartbeatAt).HasColumnName("LastHeartbeatAt").IsOptional().HasColumnType("datetime");
//        }
//    }

//    // favourites
//    public class FavouriteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Favourite>
//    {
//        public FavouriteConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public FavouriteConfiguration(string schema)
//        {
//            ToTable(schema + ".favourites");
//            HasKey(x => x.Fid);

//            Property(x => x.Fid).HasColumnName("fid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Ftype).HasColumnName("ftype").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Mid).HasColumnName("mid").IsOptional().HasColumnType("int");
//            Property(x => x.CreateDt).HasColumnName("createDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // invitefriend
//    public class InvitefriendConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Invitefriend>
//    {
//        public InvitefriendConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public InvitefriendConfiguration(string schema)
//        {
//            ToTable(schema + ".invitefriend");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Iemail).HasColumnName("iemail").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Iusername).HasColumnName("iusername").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Idatatime).HasColumnName("idatatime").IsOptional().HasColumnType("datetime");
//            Property(x => x.InviteCode).HasColumnName("inviteCode").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.IsReg).HasColumnName("isReg").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.IsScore).HasColumnName("isScore").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isvalid).HasColumnName("isvalid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Iorderid).HasColumnName("iorderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//        }
//    }

//    // memberCash
//    public class MemberCashConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MemberCash>
//    {
//        public MemberCashConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MemberCashConfiguration(string schema)
//        {
//            ToTable(schema + ".memberCash");
//            HasKey(x => x.Cashid);

//            Property(x => x.Cashid).HasColumnName("cashid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
//            Property(x => x.Amount).HasColumnName("amount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Atime).HasColumnName("atime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Action).HasColumnName("action").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Adminuid).HasColumnName("adminuid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // menu
//    public class MenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menu>
//    {
//        public MenuConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuConfiguration(string schema)
//        {
//            ToTable(schema + ".menu");
//            HasKey(x => x.Mid);

//            Property(x => x.Mid).HasColumnName("mid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.MenuCat).HasColumnName("menuCat").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.MenuName).HasColumnName("menuName").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.MenuName2).HasColumnName("menuName2").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.MenuDesc).HasColumnName("menuDesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.MenuDesc2).HasColumnName("menuDesc2").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Price1).HasColumnName("price1").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Price2).HasColumnName("price2").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Star).HasColumnName("star").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Menutype).HasColumnName("menutype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Menulogo).HasColumnName("menulogo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Discountway).HasColumnName("discountway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Menucode).HasColumnName("menucode").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.ServicePeriod).HasColumnName("servicePeriod").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Displayweekday).HasColumnName("displayweekday").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.HasSideOrder).HasColumnName("hasSideOrder").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.HasPl).HasColumnName("hasPL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Standardpl).HasColumnName("standardpl").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//            Property(x => x.CreateDt).HasColumnName("CreateDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.UpdateDt).HasColumnName("UpdateDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Indexnum).HasColumnName("indexnum").IsOptional().HasColumnType("numeric").HasPrecision(8,1);
//            Property(x => x.Mealamt).HasColumnName("mealamt").IsOptional().HasColumnType("int");
//            Property(x => x.Menuoptioncat).HasColumnName("menuoptioncat").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//        }
//    }

//    // menubasic
//    public class MenubasicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menubasic>
//    {
//        public MenubasicConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenubasicConfiguration(string schema)
//        {
//            ToTable(schema + ".menubasic");
//            HasKey(x => x.Basicmenuid);

//            Property(x => x.Basicmenuid).HasColumnName("basicmenuid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Menutype1).HasColumnName("menutype1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menutype2).HasColumnName("menutype2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Mname).HasColumnName("mname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mname2).HasColumnName("mname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Price1).HasColumnName("price1").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.Price2).HasColumnName("price2").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.Menudesc).HasColumnName("menudesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menudesc2).HasColumnName("menudesc2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menucode).HasColumnName("menucode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Menu001).HasColumnName("menu001").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Indexnum).HasColumnName("indexnum").IsOptional().HasColumnType("numeric").HasPrecision(8,1);
//        }
//    }

//    // MenuBasicTemplate
//    public class MenuBasicTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MenuBasicTemplate>
//    {
//        public MenuBasicTemplateConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuBasicTemplateConfiguration(string schema)
//        {
//            ToTable(schema + ".MenuBasicTemplate");
//            HasKey(x => x.Basicmenuid);

//            Property(x => x.Basicmenuid).HasColumnName("basicmenuid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Menutype1).HasColumnName("menutype1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menutype2).HasColumnName("menutype2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mname).HasColumnName("mname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mname2).HasColumnName("mname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Price1).HasColumnName("price1").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Price2).HasColumnName("price2").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Menudesc2).HasColumnName("menudesc2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menudesc).HasColumnName("menudesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menucode).HasColumnName("menucode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Menu001).HasColumnName("menu001").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // menuCat
//    public class MenuCatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MenuCat>
//    {
//        public MenuCatConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuCatConfiguration(string schema)
//        {
//            ToTable(schema + ".menuCat");
//            HasKey(x => x.Catid);

//            Property(x => x.Catid).HasColumnName("catid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.CatName).HasColumnName("catName").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.CatName2).HasColumnName("catName2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Description2).HasColumnName("description2").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.ServicePeriod).HasColumnName("servicePeriod").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Displayweekday).HasColumnName("displayweekday").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Pcsetting).HasColumnName("pcsetting").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.CreateDt).HasColumnName("createDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.ModifiedDt).HasColumnName("modifiedDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Indexnum).HasColumnName("indexnum").IsOptional().HasColumnType("numeric").HasPrecision(8,1);
//            Property(x => x.Logostr).HasColumnName("logostr").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//        }
//    }

//    // menuCatBasicMenu
//    public class MenuCatBasicMenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MenuCatBasicMenu>
//    {
//        public MenuCatBasicMenuConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuCatBasicMenuConfiguration(string schema)
//        {
//            ToTable(schema + ".menuCatBasicMenu");
//            HasKey(x => x.Indexid);

//            Property(x => x.Indexid).HasColumnName("indexid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Catid).HasColumnName("catid").IsRequired().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Menutype1).HasColumnName("menutype1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Menutype2).HasColumnName("menutype2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Basicmenuids).HasColumnName("basicmenuids").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//        }
//    }

//    // menucattemplate
//    public class MenucattemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menucattemplate>
//    {
//        public MenucattemplateConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenucattemplateConfiguration(string schema)
//        {
//            ToTable(schema + ".menucattemplate");
//            HasKey(x => x.Catid);

//            Property(x => x.Catid).HasColumnName("catid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Indexnum).HasColumnName("indexnum").IsOptional().HasColumnType("numeric").HasPrecision(7,1);
//            Property(x => x.Catname).HasColumnName("catname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Catname2).HasColumnName("catname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cat001).HasColumnName("cat001").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // menuoptionalcat
//    public class MenuoptionalcatConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menuoptionalcat>
//    {
//        public MenuoptionalcatConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuoptionalcatConfiguration(string schema)
//        {
//            ToTable(schema + ".menuoptionalcat");
//            HasKey(x => new { x.Optioncatid, x.Shopid });

//            Property(x => x.Optioncatid).HasColumnName("optioncatid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Optionname).HasColumnName("optionname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Optionname2).HasColumnName("optionname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Flag).HasColumnName("flag").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Indexnum).HasColumnName("indexnum").IsOptional().HasColumnType("numeric").HasPrecision(8,1);
//            Property(x => x.Optiondesc).HasColumnName("optiondesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
//        }
//    }

//    // menuPrice
//    public class MenuPriceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MenuPrice>
//    {
//        public MenuPriceConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenuPriceConfiguration(string schema)
//        {
//            ToTable(schema + ".menuPrice");
//            HasKey(x => x.Pid);

//            Property(x => x.Pid).HasColumnName("pid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Mid).HasColumnName("mid").IsRequired().HasColumnType("int");
//            Property(x => x.Price).HasColumnName("price").IsOptional().HasColumnType("numeric");
//            Property(x => x.Dtfrom).HasColumnName("dtfrom").IsOptional().HasColumnType("smalldatetime");
//            Property(x => x.Dtto).HasColumnName("dtto").IsOptional().HasColumnType("smalldatetime");
//            Property(x => x.Ptype).HasColumnName("ptype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // menusideorder
//    public class MenusideorderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menusideorder>
//    {
//        public MenusideorderConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MenusideorderConfiguration(string schema)
//        {
//            ToTable(schema + ".menusideorder");
//            HasKey(x => x.Sideorderid);

//            Property(x => x.Sideorderid).HasColumnName("sideorderid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Mid).HasColumnName("mid").IsOptional().HasColumnType("int");
//            Property(x => x.Mname).HasColumnName("mname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mname2).HasColumnName("mname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Price1).HasColumnName("price1").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.Price2).HasColumnName("price2").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.DiscountPeriod).HasColumnName("discountPeriod").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // multilangMenu
//    public class MultilangMenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MultilangMenu>
//    {
//        public MultilangMenuConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public MultilangMenuConfiguration(string schema)
//        {
//            ToTable(schema + ".multilangMenu");
//            HasKey(x => new { x.Menuid, x.Menuname });

//            Property(x => x.Menuid).HasColumnName("menuid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Menuname).HasColumnName("menuname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Name1).HasColumnName("name1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name2).HasColumnName("name2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name3).HasColumnName("name3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name4).HasColumnName("name4").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name5).HasColumnName("name5").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name6).HasColumnName("name6").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Name7).HasColumnName("name7").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // newshopregis
//    public class NewshopregiConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Newshopregi>
//    {
//        public NewshopregiConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public NewshopregiConfiguration(string schema)
//        {
//            ToTable(schema + ".newshopregis");
//            HasKey(x => x.Regisid);

//            Property(x => x.Regisid).HasColumnName("regisid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopname).HasColumnName("shopname").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode).HasColumnName("postcode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Contactperson).HasColumnName("contactperson").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Tele).HasColumnName("tele").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Regisdt).HasColumnName("regisdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.SalesUserName).HasColumnName("SalesUserName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.IsJoined).HasColumnName("IsJoined").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(1);
//            Property(x => x.Comments).HasColumnName("Comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(2000);
//        }
//    }

//    // onlineUser
//    public class OnlineUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OnlineUser>
//    {
//        public OnlineUserConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OnlineUserConfiguration(string schema)
//        {
//            ToTable(schema + ".onlineUser");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Urealname).HasColumnName("urealname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.LoginTime).HasColumnName("loginTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.LastUpdateTime).HasColumnName("lastUpdateTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // orders
//    public class OrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Order>
//    {
//        public OrderConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderConfiguration(string schema)
//        {
//            ToTable(schema + ".orders");
//            HasKey(x => x.OrderId);

//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Useremail).HasColumnName("useremail").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Amount).HasColumnName("amount").IsOptional().HasColumnType("int");
//            Property(x => x.Unitprice).HasColumnName("unitprice").IsOptional().HasColumnType("decimal").HasPrecision(10,4);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ticketnumber).HasColumnName("ticketnumber").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ticketvalue).HasColumnName("ticketvalue").IsOptional().HasColumnType("int");
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Orderstatus).HasColumnName("orderstatus").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.OrderUpdatedt).HasColumnName("orderUpdatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.IsCancelled).HasColumnName("isCancelled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.OrderCancelledDt).HasColumnName("orderCancelledDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.CancelComments).HasColumnName("cancelComments").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Totalprice1).HasColumnName("totalprice1").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.DiscountRate).HasColumnName("discountRate").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Afterdiscount).HasColumnName("afterdiscount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Deliverycharge).HasColumnName("deliverycharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.ServiceCharge).HasColumnName("serviceCharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.CreditcardCharge).HasColumnName("creditcardCharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Tips).HasColumnName("tips").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Isjz).HasColumnName("isjz").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Jzdt).HasColumnName("jzdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Actualamount).HasColumnName("actualamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.UserIp).HasColumnName("userIP").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comrate).HasColumnName("comrate").IsOptional().HasColumnType("decimal").HasPrecision(6,2);
//            Property(x => x.Shopcardcharge).HasColumnName("shopcardcharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Paidwithcredit).HasColumnName("paidwithcredit").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Vouchercode).HasColumnName("vouchercode").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Creditback).HasColumnName("creditback").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//        }
//    }

//    // ordercomments
//    public class OrdercommentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ordercomment>
//    {
//        public OrdercommentConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrdercommentConfiguration(string schema)
//        {
//            ToTable(schema + ".ordercomments");
//            HasKey(x => x.Cid);

//            Property(x => x.Cid).HasColumnName("cid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Msgtype).HasColumnName("msgtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Msgcont).HasColumnName("msgcont").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Msgreply).HasColumnName("msgreply").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Replydt).HasColumnName("replydt").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
//        }
//    }

//    // ordercz
//    public class OrderczConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ordercz>
//    {
//        public OrderczConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderczConfiguration(string schema)
//        {
//            ToTable(schema + ".ordercz");
//            HasKey(x => x.Czid);

//            Property(x => x.Czid).HasColumnName("czid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Czdt).HasColumnName("czdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Orderid).HasColumnName("orderid").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Amt).HasColumnName("amt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Operateid).HasColumnName("operateid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // orderdelivery
//    public class OrderdeliveryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Orderdelivery>
//    {
//        public OrderdeliveryConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderdeliveryConfiguration(string schema)
//        {
//            ToTable(schema + ".orderdelivery");
//            HasKey(x => x.Orderid);

//            Property(x => x.Orderid).HasColumnName("orderid").IsRequired().HasColumnType("nvarchar").HasMaxLength(30).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deliverdt).HasColumnName("deliverdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Deliverpeople).HasColumnName("deliverpeople").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(300);
//        }
//    }

//    // orderitem
//    public class OrderitemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Orderitem>
//    {
//        public OrderitemConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderitemConfiguration(string schema)
//        {
//            ToTable(schema + ".orderitem");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Mid).HasColumnName("mid").IsRequired().HasColumnType("int");
//            Property(x => x.Submenuid).HasColumnName("submenuid").IsRequired().HasColumnType("int");
//            Property(x => x.Menucode).HasColumnName("menucode").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.MenuName).HasColumnName("menuName").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.MenuName2).HasColumnName("menuName2").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Amount).HasColumnName("amount").IsOptional().HasColumnType("int");
//            Property(x => x.Price1).HasColumnName("price1").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Discountprice).HasColumnName("discountprice").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Totalprice).HasColumnName("totalprice").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Menulogo).HasColumnName("menulogo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Menutype).HasColumnName("menutype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.MenuNameE).HasColumnName("menuNameE").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.MenuName2E).HasColumnName("menuName2E").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//        }
//    }

//    // ordernotice
//    public class OrdernoticeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Ordernotice>
//    {
//        public OrdernoticeConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrdernoticeConfiguration(string schema)
//        {
//            ToTable(schema + ".ordernotice");
//            HasKey(x => x.Scode);

//            Property(x => x.Scode).HasColumnName("scode").IsRequired().HasColumnType("nvarchar").HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Orderid).HasColumnName("orderid").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.ExpiredDt).HasColumnName("ExpiredDT").IsRequired().HasColumnType("datetime");
//            Property(x => x.Accessdt).HasColumnName("accessdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Accessip).HasColumnName("accessip").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Isread).HasColumnName("isread").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // orderoperation
//    public class OrderoperationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Orderoperation>
//    {
//        public OrderoperationConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderoperationConfiguration(string schema)
//        {
//            ToTable(schema + ".orderoperation");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Actionstr).HasColumnName("actionstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Actiondt).HasColumnName("actiondt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Actionuser).HasColumnName("actionuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // orderpayment
//    public class OrderpaymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Orderpayment>
//    {
//        public OrderpaymentConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public OrderpaymentConfiguration(string schema)
//        {
//            ToTable(schema + ".orderpayment");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Cardnumber).HasColumnName("cardnumber").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Cardtype).HasColumnName("cardtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Name1).HasColumnName("name1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Name2).HasColumnName("name2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Paidtime).HasColumnName("paidtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Applytime).HasColumnName("applytime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Confirmtime).HasColumnName("confirmtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Paidamount).HasColumnName("paidamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.ResultDesc).HasColumnName("resultDesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//            Property(x => x.Isret).HasColumnName("isret").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Securauthstr).HasColumnName("securauthstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//        }
//    }

//    // pushNoticeQueue
//    public class PushNoticeQueueConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PushNoticeQueue>
//    {
//        public PushNoticeQueueConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public PushNoticeQueueConfiguration(string schema)
//        {
//            ToTable(schema + ".pushNoticeQueue");
//            HasKey(x => x.Pushid);

//            Property(x => x.Pushid).HasColumnName("pushid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Payload).HasColumnName("payload").IsOptional().HasColumnType("nvarchar").HasMaxLength(2000);
//            Property(x => x.Pushcount).HasColumnName("pushcount").IsOptional().HasColumnType("int");
//            Property(x => x.Lastpushdt).HasColumnName("lastpushdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Channels).HasColumnName("channels").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Priority).HasColumnName("Priority").IsOptional().HasColumnType("int");
//            Property(x => x.LastError).HasColumnName("LastError").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//            Property(x => x.Noticetype).HasColumnName("noticetype").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//        }
//    }

//    // recommend
//    public class RecommendConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Recommend>
//    {
//        public RecommendConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public RecommendConfiguration(string schema)
//        {
//            ToTable(schema + ".recommend");
//            HasKey(x => x.RecId);

//            Property(x => x.RecId).HasColumnName("recID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.RecUid).HasColumnName("recUid").IsOptional().HasColumnType("int");
//            Property(x => x.RecName).HasColumnName("recName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Shopname).HasColumnName("shopname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryArea).HasColumnName("DeliveryArea").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr).HasColumnName("addr").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Tel).HasColumnName("tel").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ishandled).HasColumnName("ishandled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Status).HasColumnName("status").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.RecDate).HasColumnName("recDate").IsOptional().HasColumnType("datetime");
//        }
//    }

//    // RecPaidAmountInfo
//    public class RecPaidAmountInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RecPaidAmountInfo>
//    {
//        public RecPaidAmountInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public RecPaidAmountInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".RecPaidAmountInfo");
//            HasKey(x => x.Infoid);

//            Property(x => x.Infoid).HasColumnName("infoid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Basicamt).HasColumnName("basicamt").IsRequired().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.Fromdt).HasColumnName("fromdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Todt).HasColumnName("todt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Basicamt2).HasColumnName("basicamt2").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//        }
//    }

//    // serviceTicket
//    public class ServiceTicketConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceTicket>
//    {
//        public ServiceTicketConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ServiceTicketConfiguration(string schema)
//        {
//            ToTable(schema + ".serviceTicket");
//            HasKey(x => x.Ticketid);

//            Property(x => x.Ticketid).HasColumnName("ticketid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Userid).HasColumnName("userid").IsOptional().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Tele).HasColumnName("tele").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Isnormal).HasColumnName("isnormal").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ismanager).HasColumnName("ismanager").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Iscritical).HasColumnName("iscritical").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//            Property(x => x.Status).HasColumnName("status").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Createuser).HasColumnName("createuser").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Updatedt).HasColumnName("updatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Modifyuser).HasColumnName("modifyuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // shop
//    public class ShopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Shop>
//    {
//        public ShopConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopConfiguration(string schema)
//        {
//            ToTable(schema + ".shop");
//            HasKey(x => x.Shopid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mealtype).HasColumnName("mealtype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ServiceType).HasColumnName("serviceType").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.ServiceTypeL).HasColumnName("serviceTypeL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Fax).HasColumnName("fax").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Gotnotice).HasColumnName("gotnotice").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Longitude).HasColumnName("longitude").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Latitude).HasColumnName("latitude").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Logo).HasColumnName("logo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Vat).HasColumnName("VAT").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Mapstr).HasColumnName("mapstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//            Property(x => x.Star1).HasColumnName("star1").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star2).HasColumnName("star2").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star3).HasColumnName("star3").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star4).HasColumnName("star4").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.UpdateTime).HasColumnName("updateTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag1).HasColumnName("flag1").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Alias).HasColumnName("alias").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Acceptpay).HasColumnName("acceptpay").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Orderlang).HasColumnName("orderlang").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Acceptorder).HasColumnName("acceptorder").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.DeliveryWay).HasColumnName("deliveryWay").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Deliverytime).HasColumnName("Deliverytime").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryLastOt).HasColumnName("DeliveryLastOT").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryMinOrder).HasColumnName("DeliveryMinOrder").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Bankname).HasColumnName("bankname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Bankusername).HasColumnName("bankusername").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Banksortcode).HasColumnName("banksortcode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Bankno).HasColumnName("bankno").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Webcommision).HasColumnName("webcommision").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Expireddt).HasColumnName("expireddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Bgpicture).HasColumnName("bgpicture").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cardchargeopt).HasColumnName("cardchargeopt").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Fixchargeamt).HasColumnName("fixchargeamt").IsOptional().HasColumnType("numeric").HasPrecision(4,2);
//            Property(x => x.Ratiochargeamt).HasColumnName("ratiochargeamt").IsOptional().HasColumnType("numeric").HasPrecision(4,2);
//            Property(x => x.SuggestOnlineNum).HasColumnName("suggestOnlineNum").IsOptional().HasColumnType("int");
//            Property(x => x.AcceptCustomerOpt).HasColumnName("acceptCustomerOpt").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(50);
//        }
//    }

//    // shopDelieveryArea
//    public class ShopDelieveryAreaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopDelieveryArea>
//    {
//        public ShopDelieveryAreaConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopDelieveryAreaConfiguration(string schema)
//        {
//            ToTable(schema + ".shopDelieveryArea");
//            HasKey(x => x.Did);

//            Property(x => x.Did).HasColumnName("did").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.DelieveryCost).HasColumnName("delieveryCost").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.CreateDt).HasColumnName("createDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag1).HasColumnName("flag1").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Bak001).HasColumnName("bak001").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // shopdeliveryCost
//    public class ShopdeliveryCostConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopdeliveryCost>
//    {
//        public ShopdeliveryCostConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopdeliveryCostConfiguration(string schema)
//        {
//            ToTable(schema + ".shopdeliveryCost");
//            HasKey(x => x.Costid);

//            Property(x => x.Costid).HasColumnName("costid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Costtype).HasColumnName("costtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.BasicDistance).HasColumnName("basicDistance").IsOptional().HasColumnType("int");
//            Property(x => x.BasicPrice).HasColumnName("basicPrice").IsOptional().HasColumnType("decimal").HasPrecision(10,2);
//            Property(x => x.UnitDistance).HasColumnName("unitDistance").IsOptional().HasColumnType("int");
//            Property(x => x.UnitRate).HasColumnName("unitRate").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.IsDiscount).HasColumnName("isDiscount").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.BasicDistance2).HasColumnName("basicDistance2").IsOptional().HasColumnType("int");
//            Property(x => x.MinOrderAmount).HasColumnName("minOrderAmount").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.FreeAmount).HasColumnName("freeAmount").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//        }
//    }

//    // shopdiscount
//    public class ShopdiscountConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Shopdiscount>
//    {
//        public ShopdiscountConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopdiscountConfiguration(string schema)
//        {
//            ToTable(schema + ".shopdiscount");
//            HasKey(x => x.Shopid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Board).HasColumnName("board").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Discountway).HasColumnName("discountway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Minorderamt).HasColumnName("minorderamt").IsOptional().HasColumnType("decimal").HasPrecision(10,2);
//            Property(x => x.Discountrate).HasColumnName("discountrate").IsOptional().HasColumnType("int");
//        }
//    }

//    // ShopExtInfoForApp
//    public class ShopExtInfoForAppConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopExtInfoForApp>
//    {
//        public ShopExtInfoForAppConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopExtInfoForAppConfiguration(string schema)
//        {
//            ToTable(schema + ".ShopExtInfoForApp");
//            HasKey(x => x.Shopid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.Createdt).HasColumnName("createdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Isaccepted).HasColumnName("isaccepted").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Acceptdt).HasColumnName("acceptdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Acceptuserid).HasColumnName("acceptuserid").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Recuserid).HasColumnName("recuserid").IsOptional().HasColumnType("int");
//            Property(x => x.Recamt).HasColumnName("recamt").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Ispaidrec).HasColumnName("ispaidrec").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Recpaiddt).HasColumnName("recpaiddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Operatename).HasColumnName("operatename").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopstatus).HasColumnName("shopstatus").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // shopJZ
//    public class ShopJzConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopJz>
//    {
//        public ShopJzConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopJzConfiguration(string schema)
//        {
//            ToTable(schema + ".shopJZ");
//            HasKey(x => x.Jzid);

//            Property(x => x.Jzid).HasColumnName("jzid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Jzstartdt).HasColumnName("jzstartdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Jzenddt).HasColumnName("jzenddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Shopnum).HasColumnName("shopnum").IsOptional().HasColumnType("int");
//            Property(x => x.Totalamt).HasColumnName("totalamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Orderamt).HasColumnName("orderamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Actualamt).HasColumnName("actualamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Ordernumber).HasColumnName("ordernumber").IsOptional().HasColumnType("int");
//            Property(x => x.Webamt).HasColumnName("webamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Webactual).HasColumnName("webactual").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shopamt).HasColumnName("shopamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Paytoshop).HasColumnName("paytoshop").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Str1).HasColumnName("str1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Str2).HasColumnName("str2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Bkint1).HasColumnName("bkint1").IsOptional().HasColumnType("int");
//            Property(x => x.Bknum1).HasColumnName("bknum1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // shopJZDetail
//    public class ShopJzDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopJzDetail>
//    {
//        public ShopJzDetailConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopJzDetailConfiguration(string schema)
//        {
//            ToTable(schema + ".shopJZDetail");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Jzid).HasColumnName("jzid").IsRequired().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Invoiceid).HasColumnName("invoiceid").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Frdt).HasColumnName("frdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Todt).HasColumnName("todt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Creatdt).HasColumnName("creatdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Amt1).HasColumnName("amt1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Quan1).HasColumnName("quan1").IsOptional().HasColumnType("int");
//            Property(x => x.Web1).HasColumnName("web1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop1).HasColumnName("shop1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Amt2).HasColumnName("amt2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Quan2).HasColumnName("quan2").IsOptional().HasColumnType("int");
//            Property(x => x.Web2).HasColumnName("web2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop2).HasColumnName("shop2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Amt3).HasColumnName("amt3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Quan3).HasColumnName("quan3").IsOptional().HasColumnType("int");
//            Property(x => x.Web3).HasColumnName("web3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop3).HasColumnName("shop3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Webactualget).HasColumnName("webactualget").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shopactualget).HasColumnName("shopactualget").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Num1).HasColumnName("num1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Num2).HasColumnName("num2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Str1).HasColumnName("str1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ishx).HasColumnName("ishx").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Amt1C).HasColumnName("amt1c").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//        }
//    }

//    // ShoppingCart
//    public class ShoppingCartConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShoppingCart>
//    {
//        public ShoppingCartConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShoppingCartConfiguration(string schema)
//        {
//            ToTable(schema + ".ShoppingCart");
//            HasKey(x => x.Cartid);

//            Property(x => x.Cartid).HasColumnName("cartid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.CustomerId).HasColumnName("customerID").IsOptional().HasColumnType("int");
//            Property(x => x.CustomerSessionId).HasColumnName("customerSessionID").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.CreatedOn).HasColumnName("CreatedOn").IsOptional().HasColumnType("datetime");
//            Property(x => x.UpdateOn).HasColumnName("UpdateOn").IsOptional().HasColumnType("datetime");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.ProductId).HasColumnName("ProductID").IsRequired().HasColumnType("int");
//            Property(x => x.Mainfoodid).HasColumnName("mainfoodid").IsOptional().HasColumnType("int");
//            Property(x => x.SubProductId).HasColumnName("SubProductID").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//            Property(x => x.Quantity).HasColumnName("Quantity").IsOptional().HasColumnType("int");
//            Property(x => x.MenuOptionIDs).HasColumnName("MenuOptionIDs").IsOptional().HasColumnType("nvarchar").HasMaxLength(1000);
//        }
//    }

//    // shoppingHoliday
//    public class ShoppingHolidayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShoppingHoliday>
//    {
//        public ShoppingHolidayConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShoppingHolidayConfiguration(string schema)
//        {
//            ToTable(schema + ".shoppingHoliday");
//            HasKey(x => x.Holidayid);

//            Property(x => x.Holidayid).HasColumnName("holidayid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.FromDt).HasColumnName("fromDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.ToDt).HasColumnName("toDT").IsOptional().HasColumnType("datetime");
//        }
//    }

//    // shopTickets
//    public class ShopTicketConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShopTicket>
//    {
//        public ShopTicketConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopTicketConfiguration(string schema)
//        {
//            ToTable(schema + ".shopTickets");
//            HasKey(x => x.Id);

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Ticketid).HasColumnName("ticketid").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ticketname).HasColumnName("ticketname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ticketdesc).HasColumnName("ticketdesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ticketvalue).HasColumnName("ticketvalue").IsRequired().HasColumnType("int");
//            Property(x => x.Tickettype).HasColumnName("tickettype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Starttime).HasColumnName("starttime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Endtime).HasColumnName("endtime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Isvalid).HasColumnName("isvalid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Operateid).HasColumnName("operateid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.CreateDt).HasColumnName("createDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Applyuid).HasColumnName("applyuid").IsOptional().HasColumnType("int");
//            Property(x => x.Isused).HasColumnName("isused").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Applydt).HasColumnName("applydt").IsOptional().HasColumnType("datetime");
//            Property(x => x.ApplyOrderId).HasColumnName("applyOrderID").IsOptional().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//        }
//    }

//    // shoptransactiondetail
//    public class ShoptransactiondetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Shoptransactiondetail>
//    {
//        public ShoptransactiondetailConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShoptransactiondetailConfiguration(string schema)
//        {
//            ToTable(schema + ".shoptransactiondetail");
//            HasKey(x => x.Tid);

//            Property(x => x.Tid).HasColumnName("tid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Invoiceid).HasColumnName("invoiceid").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Orderdt).HasColumnName("orderdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Delieverdt).HasColumnName("delieverdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Orderamt).HasColumnName("orderamt").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Paydesc).HasColumnName("paydesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Comrate).HasColumnName("comrate").IsOptional().HasColumnType("decimal").HasPrecision(5,2);
//            Property(x => x.Webcom).HasColumnName("webcom").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Shopyd).HasColumnName("shopyd").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Transtype).HasColumnName("transtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Orderamtc).HasColumnName("orderamtc").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//        }
//    }

//    // shopviewtelrecord
//    public class ShopviewtelrecordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Shopviewtelrecord>
//    {
//        public ShopviewtelrecordConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopviewtelrecordConfiguration(string schema)
//        {
//            ToTable(schema + ".shopviewtelrecord");
//            HasKey(x => x.Infoid);

//            Property(x => x.Infoid).HasColumnName("infoid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Viewdt).HasColumnName("viewdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Viewcount).HasColumnName("viewcount").IsOptional().HasColumnType("int");
//        }
//    }

//    // shopworktime
//    public class ShopworktimeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Shopworktime>
//    {
//        public ShopworktimeConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public ShopworktimeConfiguration(string schema)
//        {
//            ToTable(schema + ".shopworktime");
//            HasKey(x => x.Shopid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
//            Property(x => x.MonFrToA).HasColumnName("monFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.MonFrToB).HasColumnName("monFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.TuesFrToA).HasColumnName("tuesFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.TuesFrToB).HasColumnName("tuesFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.WedFrToA).HasColumnName("wedFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.WedFrToB).HasColumnName("wedFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.ThurFrToA).HasColumnName("thurFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.ThurFrToB).HasColumnName("thurFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.FriFrToA).HasColumnName("friFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.FriFrToB).HasColumnName("friFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SatFrToA).HasColumnName("satFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SatFrToB).HasColumnName("satFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SunFrToA).HasColumnName("sunFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SunFrToB).HasColumnName("sunFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.Wt001).HasColumnName("wt001").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Haslunch).HasColumnName("haslunch").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // submenu
//    public class SubmenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Submenu>
//    {
//        public SubmenuConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public SubmenuConfiguration(string schema)
//        {
//            ToTable(schema + ".submenu");
//            HasKey(x => x.Smid);

//            Property(x => x.Smid).HasColumnName("smid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Mid).HasColumnName("mid").IsRequired().HasColumnType("int");
//            Property(x => x.MenuName).HasColumnName("menuName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.MenuName2).HasColumnName("menuName2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.MenuDesc).HasColumnName("menuDesc").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.MenuDesc2).HasColumnName("menuDesc2").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Price).HasColumnName("price").IsOptional().HasColumnType("numeric").HasPrecision(8,2);
//            Property(x => x.Submenucat).HasColumnName("submenucat").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//        }
//    }

//    // sysdiagrams
//    public class SysdiagramConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sysdiagram>
//    {
//        public SysdiagramConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public SysdiagramConfiguration(string schema)
//        {
//            ToTable(schema + ".sysdiagrams");
//            HasKey(x => x.DiagramId);

//            Property(x => x.Name).HasColumnName("name").IsRequired().HasColumnType("nvarchar").HasMaxLength(128);
//            Property(x => x.PrincipalId).HasColumnName("principal_id").IsRequired().HasColumnType("int");
//            Property(x => x.DiagramId).HasColumnName("diagram_id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Version).HasColumnName("version").IsOptional().HasColumnType("int");
//            Property(x => x.Definition).HasColumnName("definition").IsOptional().HasColumnType("varbinary");
//        }
//    }

//    // sysLog
//    public class SysLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SysLog>
//    {
//        public SysLogConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public SysLogConfiguration(string schema)
//        {
//            ToTable(schema + ".sysLog");
//            HasKey(x => x.Logid);

//            Property(x => x.Logid).HasColumnName("logid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Userid).HasColumnName("userid").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Actstr).HasColumnName("actstr").IsRequired().HasColumnType("nvarchar").HasMaxLength(800);
//            Property(x => x.Actdt).HasColumnName("actdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Priority).HasColumnName("priority").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//        }
//    }

//    // sysMsg
//    public class SysMsgConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SysMsg>
//    {
//        public SysMsgConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public SysMsgConfiguration(string schema)
//        {
//            ToTable(schema + ".sysMsg");
//            HasKey(x => x.Msgid);

//            Property(x => x.Msgid).HasColumnName("msgid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Msgtitle).HasColumnName("msgtitle").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Msgcontent).HasColumnName("msgcontent").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Msgdt).HasColumnName("msgdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Msgto).HasColumnName("msgto").IsRequired().HasColumnType("int");
//            Property(x => x.Isread).HasColumnName("isread").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Readdt).HasColumnName("readdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Isdelete).HasColumnName("isdelete").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//        }
//    }

//    // UserCreditInfo
//    public class UserCreditInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserCreditInfo>
//    {
//        public UserCreditInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public UserCreditInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".UserCreditInfo");
//            HasKey(x => x.Balanceid);

//            Property(x => x.Balanceid).HasColumnName("balanceid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Userid).HasColumnName("userid").IsRequired().HasColumnType("int");
//            Property(x => x.Createdt).HasColumnName("createdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Moneydirection).HasColumnName("moneydirection").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(2);
//            Property(x => x.Amt).HasColumnName("amt").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Balanceamt).HasColumnName("balanceamt").IsRequired().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//        }
//    }

//    // UserReg
//    public class UserRegConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserReg>
//    {
//        public UserRegConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public UserRegConfiguration(string schema)
//        {
//            ToTable(schema + ".UserReg");
//            HasKey(x => x.Uid);

//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Gender).HasColumnName("gender").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Realname).HasColumnName("realname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Email).HasColumnName("email").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Pwd).HasColumnName("pwd").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Pwdquestion).HasColumnName("pwdquestion").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Pwdanswer).HasColumnName("pwdanswer").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Birthday).HasColumnName("birthday").IsOptional().HasColumnType("nvarchar").HasMaxLength(25);
//            Property(x => x.Lastlogindate).HasColumnName("lastlogindate").IsOptional().HasColumnType("datetime");
//            Property(x => x.LastloginIp).HasColumnName("lastloginIP").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Islocked).HasColumnName("islocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Score).HasColumnName("score").IsOptional().HasColumnType("int");
//            Property(x => x.Credits).HasColumnName("credits").IsOptional().HasColumnType("int");
//            Property(x => x.Isblocked).HasColumnName("isblocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isnoticed).HasColumnName("isnoticed").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.LoginErrTime).HasColumnName("loginErrTime").IsOptional().HasColumnType("int");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Houseno).HasColumnName("houseno").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//        }
//    }

//    // userscore
//    public class UserscoreConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Userscore>
//    {
//        public UserscoreConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public UserscoreConfiguration(string schema)
//        {
//            ToTable(schema + ".userscore");
//            HasKey(x => x.Sid);

//            Property(x => x.Sid).HasColumnName("sid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Uid).HasColumnName("uid").IsOptional().HasColumnType("int");
//            Property(x => x.Scoretime).HasColumnName("scoretime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Operateuser).HasColumnName("operateuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Score).HasColumnName("score").IsOptional().HasColumnType("int");
//            Property(x => x.Operation).HasColumnName("operation").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Scoretype).HasColumnName("scoretype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//        }
//    }

//    // voucherinfo
//    public class VoucherinfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Voucherinfo>
//    {
//        public VoucherinfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VoucherinfoConfiguration(string schema)
//        {
//            ToTable(schema + ".voucherinfo");
//            HasKey(x => x.Voucherid);

//            Property(x => x.Voucherid).HasColumnName("voucherid").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Vouchercode).HasColumnName("vouchercode").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Fromdt).HasColumnName("fromdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Todt).HasColumnName("todt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Discountopt).HasColumnName("discountopt").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Discountamt).HasColumnName("discountamt").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Basicamt).HasColumnName("basicamt").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Areacode).HasColumnName("areacode").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Salesname).HasColumnName("salesname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Userid).HasColumnName("userid").IsOptional().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Vouchercount).HasColumnName("vouchercount").IsOptional().HasColumnType("int");
//            Property(x => x.Usesperuser).HasColumnName("usesperuser").IsOptional().HasColumnType("int");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Isdelete).HasColumnName("isdelete").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(1);
//            Property(x => x.Isused).HasColumnName("isused").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(1);
//            Property(x => x.Creditback).HasColumnName("creditback").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//        }
//    }

//    // vwAppUserProfile
//    public class VwAppUserProfileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwAppUserProfile>
//    {
//        public VwAppUserProfileConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwAppUserProfileConfiguration(string schema)
//        {
//            ToTable(schema + ".vwAppUserProfile");
//            HasKey(x => new { x.Appuserid, x.Usertype });

//            Property(x => x.Operatecode).HasColumnName("operatecode").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Offdutytodt).HasColumnName("offdutytodt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Onduty).HasColumnName("onduty").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Infoalertfile).HasColumnName("infoalertfile").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Neworderalertfile).HasColumnName("neworderalertfile").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Istakeorder).HasColumnName("istakeorder").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Appuserid).HasColumnName("appuserid").IsRequired().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Loginname).HasColumnName("loginname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Password).HasColumnName("password").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Usertype).HasColumnName("usertype").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Username).HasColumnName("username").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Status).HasColumnName("status").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Logindt).HasColumnName("logindt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createuser).HasColumnName("createuser").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Loginip).HasColumnName("loginip").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Loginstatus).HasColumnName("loginstatus").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(1);
//            Property(x => x.LoginErrCount).HasColumnName("LoginErrCount").IsOptional().HasColumnType("int");
//            Property(x => x.Apptokenstr).HasColumnName("apptokenstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // vw_customerreview
//    public class VwCustomerreviewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwCustomerreview>
//    {
//        public VwCustomerreviewConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwCustomerreviewConfiguration(string schema)
//        {
//            ToTable(schema + ".vw_customerreview");
//            HasKey(x => new { x.Sname, x.Reviewid, x.Shopid });

//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Reviewid).HasColumnName("reviewid").IsRequired().HasColumnType("int");
//            Property(x => x.Rate1).HasColumnName("rate1").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Rate2).HasColumnName("rate2").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Rate3).HasColumnName("rate3").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ReviewDate).HasColumnName("reviewDate").IsOptional().HasColumnType("datetime");
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Username).HasColumnName("username").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Uid).HasColumnName("uid").IsOptional().HasColumnType("int");
//            Property(x => x.Rate4).HasColumnName("rate4").IsOptional().HasColumnType("decimal").HasPrecision(2,1);
//            Property(x => x.Reviewtype).HasColumnName("reviewtype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Objid).HasColumnName("objid").IsOptional().HasColumnType("int");
//        }
//    }

//    // vwGetAppDeviceInfo
//    public class VwGetAppDeviceInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetAppDeviceInfo>
//    {
//        public VwGetAppDeviceInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetAppDeviceInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetAppDeviceInfo");
//            HasKey(x => x.Deviceid);

//            Property(x => x.Deviceid).HasColumnName("deviceid").IsRequired().HasColumnType("int");
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Devicetype).HasColumnName("devicetype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deviceversion).HasColumnName("deviceversion").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Registdt).HasColumnName("registdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Channels).HasColumnName("channels").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.LastHeartbeatAt).HasColumnName("LastHeartbeatAt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Loginname).HasColumnName("loginname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//        }
//    }

//    // vwGetAppRestInfo
//    public class VwGetAppRestInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetAppRestInfo>
//    {
//        public VwGetAppRestInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetAppRestInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetAppRestInfo");
//            HasKey(x => new { x.Shopid, x.Createdt, x.Sname });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Createdt).HasColumnName("createdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Isaccepted).HasColumnName("isaccepted").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Acceptdt).HasColumnName("acceptdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Acceptuserid).HasColumnName("acceptuserid").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Recuserid).HasColumnName("recuserid").IsOptional().HasColumnType("int");
//            Property(x => x.Recamt).HasColumnName("recamt").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Ispaidrec).HasColumnName("ispaidrec").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Recpaiddt).HasColumnName("recpaiddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Operatename).HasColumnName("operatename").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopstatus).HasColumnName("shopstatus").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // vwGetOrderInfo
//    public class VwGetOrderInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetOrderInfo>
//    {
//        public VwGetOrderInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetOrderInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetOrderInfo");
//            HasKey(x => new { x.Shopid, x.OrderId, x.Uid });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Useremail).HasColumnName("useremail").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Orderstatustxt).HasColumnName("orderstatustxt").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(13,4);
//        }
//    }

//    // vwGetOrderInfoForAdmin
//    public class VwGetOrderInfoForAdminConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetOrderInfoForAdmin>
//    {
//        public VwGetOrderInfoForAdminConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetOrderInfoForAdminConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetOrderInfoForAdmin");
//            HasKey(x => new { x.Shopid, x.OrderId, x.Uid });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Useremail).HasColumnName("useremail").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Orderstatus).HasColumnName("orderstatus").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Orderstatustxt).HasColumnName("orderstatustxt").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Isonline).HasColumnName("isonline").IsOptional().HasColumnType("datetime");
//            Property(x => x.Acceptorder).HasColumnName("acceptorder").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Isjz).HasColumnName("isjz").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.IsCancelled).HasColumnName("isCancelled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comrate).HasColumnName("comrate").IsOptional().HasColumnType("decimal").HasPrecision(6,2);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(13,4);
//        }
//    }

//    // vwGetOrderListForApp
//    public class VwGetOrderListForAppConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetOrderListForApp>
//    {
//        public VwGetOrderListForAppConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetOrderListForAppConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetOrderListForApp");
//            HasKey(x => new { x.Shopid, x.OrderId });

//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Deliverdt).HasColumnName("deliverdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.IsCancelled).HasColumnName("isCancelled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.OrderCancelledDt).HasColumnName("orderCancelledDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.Townname).HasColumnName("townname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(13,4);
//        }
//    }

//    // vwGetShopInfo
//    public class VwGetShopInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetShopInfo>
//    {
//        public VwGetShopInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetShopInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetShopInfo");
//            HasKey(x => new { x.Loginname, x.Uid, x.Shopstatus });

//            Property(x => x.Loginname).HasColumnName("loginname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mealtype).HasColumnName("mealtype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ServiceType).HasColumnName("serviceType").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Fax).HasColumnName("fax").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Gotnotice).HasColumnName("gotnotice").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Logo).HasColumnName("logo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Vat).HasColumnName("VAT").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//            Property(x => x.Star1).HasColumnName("star1").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star2).HasColumnName("star2").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star3).HasColumnName("star3").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star4).HasColumnName("star4").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.UpdateTime).HasColumnName("updateTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag1).HasColumnName("flag1").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Alias).HasColumnName("alias").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.MonFrToA).HasColumnName("monFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.MonFrToB).HasColumnName("monFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.TuesFrToB).HasColumnName("tuesFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.TuesFrToA).HasColumnName("tuesFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.WedFrToA).HasColumnName("wedFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.WedFrToB).HasColumnName("wedFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.ThurFrToA).HasColumnName("thurFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.ThurFrToB).HasColumnName("thurFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.FriFrToA).HasColumnName("friFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.FriFrToB).HasColumnName("friFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SatFrToA).HasColumnName("satFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SatFrToB).HasColumnName("satFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SunFrToA).HasColumnName("sunFrToA").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.SunFrToB).HasColumnName("sunFrToB").IsOptional().HasColumnType("nvarchar").HasMaxLength(80);
//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Islocked).HasColumnName("islocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.DeliveryMinOrder).HasColumnName("DeliveryMinOrder").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.DeliveryLastOt).HasColumnName("DeliveryLastOT").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deliverytime).HasColumnName("Deliverytime").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryWay).HasColumnName("deliveryWay").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Acceptorder).HasColumnName("acceptorder").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Acceptpay).HasColumnName("acceptpay").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Haslunch).HasColumnName("haslunch").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.ServiceTypeL).HasColumnName("serviceTypeL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.SuggestOnlineNum).HasColumnName("suggestOnlineNum").IsOptional().HasColumnType("int");
//            Property(x => x.AcceptCustomerOpt).HasColumnName("acceptCustomerOpt").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(50);
//            Property(x => x.Webcommision).HasColumnName("webcommision").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Shopstatus).HasColumnName("shopstatus").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
//        }
//    }

//    // vwGetShopInfo2
//    public class VwGetShopInfo2Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetShopInfo2>
//    {
//        public VwGetShopInfo2Configuration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetShopInfo2Configuration(string schema)
//        {
//            ToTable(schema + ".vwGetShopInfo2");
//            HasKey(x => new { x.Loginname, x.Uid });

//            Property(x => x.Loginname).HasColumnName("loginname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Islocked).HasColumnName("islocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.LastloginIp).HasColumnName("lastloginIP").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Lastlogindate).HasColumnName("lastlogindate").IsOptional().HasColumnType("datetime");
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Sname).HasColumnName("sname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mealtype).HasColumnName("mealtype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ServiceType).HasColumnName("serviceType").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Fax).HasColumnName("fax").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Gotnotice).HasColumnName("gotnotice").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Logo).HasColumnName("logo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Vat).HasColumnName("VAT").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//            Property(x => x.Star1).HasColumnName("star1").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star2).HasColumnName("star2").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star3).HasColumnName("star3").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star4).HasColumnName("star4").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.UpdateTime).HasColumnName("updateTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag1).HasColumnName("flag1").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Alias).HasColumnName("alias").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Acceptorder).HasColumnName("acceptorder").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isonline).HasColumnName("isonline").IsOptional().HasColumnType("datetime");
//            Property(x => x.SuggestOnlineNum).HasColumnName("suggestOnlineNum").IsOptional().HasColumnType("int");
//            Property(x => x.AcceptCustomerOpt).HasColumnName("acceptCustomerOpt").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(50);
//        }
//    }

//    // vwGetShopJZDetail
//    public class VwGetShopJzDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetShopJzDetail>
//    {
//        public VwGetShopJzDetailConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetShopJzDetailConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetShopJZDetail");
//            HasKey(x => new { x.Id, x.Jzid, x.Shopid, x.Ishx });

//            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Jzid).HasColumnName("jzid").IsRequired().HasColumnType("int");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Invoiceid).HasColumnName("invoiceid").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Frdt).HasColumnName("frdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Todt).HasColumnName("todt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Creatdt).HasColumnName("creatdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Amt1).HasColumnName("amt1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Web1).HasColumnName("web1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop1).HasColumnName("shop1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Amt2).HasColumnName("amt2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Web2).HasColumnName("web2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop2).HasColumnName("shop2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Amt3).HasColumnName("amt3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Quan3).HasColumnName("quan3").IsOptional().HasColumnType("int");
//            Property(x => x.Web3).HasColumnName("web3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shop3).HasColumnName("shop3").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Webactualget).HasColumnName("webactualget").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Shopactualget).HasColumnName("shopactualget").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Num1).HasColumnName("num1").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Num2).HasColumnName("num2").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
//            Property(x => x.Str1).HasColumnName("str1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ishx).HasColumnName("ishx").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Shoploginname).HasColumnName("shoploginname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Ordernum).HasColumnName("ordernum").IsOptional().HasColumnType("int");
//        }
//    }

//    // vwGetUserBalanceSummary
//    public class VwGetUserBalanceSummaryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetUserBalanceSummary>
//    {
//        public VwGetUserBalanceSummaryConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetUserBalanceSummaryConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetUserBalanceSummary");
//            HasKey(x => new { x.Userid, x.Balanceamt, x.Email });

//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Userid).HasColumnName("userid").IsRequired().HasColumnType("int");
//            Property(x => x.Balanceamt).HasColumnName("balanceamt").IsRequired().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Email).HasColumnName("email").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // vwGetUserFavShopInfo
//    public class VwGetUserFavShopInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetUserFavShopInfo>
//    {
//        public VwGetUserFavShopInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetUserFavShopInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetUserFavShopInfo");
//            HasKey(x => new { x.Fid, x.Uid, x.Sname });

//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Fid).HasColumnName("fid").IsRequired().HasColumnType("int");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Ftype).HasColumnName("ftype").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Logo).HasColumnName("logo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Alias).HasColumnName("alias").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // vwGetUserInfo
//    public class VwGetUserInfoConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwGetUserInfo>
//    {
//        public VwGetUserInfoConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwGetUserInfoConfiguration(string schema)
//        {
//            ToTable(schema + ".vwGetUserInfo");
//            HasKey(x => new { x.Uid, x.Email });

//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Utype).HasColumnName("utype").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Gender).HasColumnName("gender").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Realname).HasColumnName("realname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Email).HasColumnName("email").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Pwd).HasColumnName("pwd").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Pwdquestion).HasColumnName("pwdquestion").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Pwdanswer).HasColumnName("pwdanswer").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
//            Property(x => x.Birthday).HasColumnName("birthday").IsOptional().HasColumnType("nvarchar").HasMaxLength(25);
//            Property(x => x.Lastlogindate).HasColumnName("lastlogindate").IsOptional().HasColumnType("datetime");
//            Property(x => x.LastloginIp).HasColumnName("lastloginIP").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Islocked).HasColumnName("islocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Score).HasColumnName("score").IsOptional().HasColumnType("int");
//            Property(x => x.Isblocked).HasColumnName("isblocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isnoticed).HasColumnName("isnoticed").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Createdt).HasColumnName("createdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.LoginErrTime).HasColumnName("loginErrTime").IsOptional().HasColumnType("int");
//            Property(x => x.Mobile).HasColumnName("mobile").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Credits).HasColumnName("credits").IsOptional().HasColumnType("int");
//        }
//    }

//    // vwOrdersValid
//    public class VwOrdersValidConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOrdersValid>
//    {
//        public VwOrdersValidConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwOrdersValidConfiguration(string schema)
//        {
//            ToTable(schema + ".vwOrdersValid");
//            HasKey(x => new { x.OrderId, x.Shopid, x.Uid });

//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Useremail).HasColumnName("useremail").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Amount).HasColumnName("amount").IsOptional().HasColumnType("int");
//            Property(x => x.Unitprice).HasColumnName("unitprice").IsOptional().HasColumnType("decimal").HasPrecision(10,4);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Ticketnumber).HasColumnName("ticketnumber").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ticketvalue).HasColumnName("ticketvalue").IsOptional().HasColumnType("int");
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Comments).HasColumnName("comments").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Orderstatus).HasColumnName("orderstatus").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.OrderUpdatedt).HasColumnName("orderUpdatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.IsCancelled).HasColumnName("isCancelled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.OrderCancelledDt).HasColumnName("orderCancelledDT").IsOptional().HasColumnType("datetime");
//            Property(x => x.CancelComments).HasColumnName("cancelComments").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Totalprice1).HasColumnName("totalprice1").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.DiscountRate).HasColumnName("discountRate").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Afterdiscount).HasColumnName("afterdiscount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Deliverycharge).HasColumnName("deliverycharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.ServiceCharge).HasColumnName("serviceCharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.CreditcardCharge).HasColumnName("creditcardCharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Tips).HasColumnName("tips").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Isjz).HasColumnName("isjz").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Jzdt).HasColumnName("jzdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Actualamount).HasColumnName("actualamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.UserIp).HasColumnName("userIP").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Isnew).HasColumnName("isnew").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comrate).HasColumnName("comrate").IsOptional().HasColumnType("decimal").HasPrecision(6,2);
//        }
//    }

//    // vwShopOrders
//    public class VwShopOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopOrder>
//    {
//        public VwShopOrderConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwShopOrderConfiguration(string schema)
//        {
//            ToTable(schema + ".vwShopOrders");
//            HasKey(x => new { x.Shopid, x.Sname });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Expr1).HasColumnName("Expr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(101);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Count).HasColumnName("count").IsOptional().HasColumnType("int");
//            Property(x => x.Sum).HasColumnName("sum").IsOptional().HasColumnType("numeric").HasPrecision(38,4);
//        }
//    }

//    // vwShopsValid
//    public class VwShopsValidConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwShopsValid>
//    {
//        public VwShopsValidConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwShopsValidConfiguration(string schema)
//        {
//            ToTable(schema + ".vwShopsValid");
//            HasKey(x => new { x.Shopid, x.Sname, x.Uid });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Mealtype).HasColumnName("mealtype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ServiceType).HasColumnName("serviceType").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.ServiceTypeL).HasColumnName("serviceTypeL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Fax).HasColumnName("fax").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Email).HasColumnName("email").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Gotnotice).HasColumnName("gotnotice").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Contactname).HasColumnName("contactname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr3).HasColumnName("addr3").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Longitude).HasColumnName("longitude").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Latitude).HasColumnName("latitude").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.Logo).HasColumnName("logo").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Vat).HasColumnName("VAT").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Mapstr).HasColumnName("mapstr").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Description).HasColumnName("description").IsOptional().HasColumnType("nvarchar").HasMaxLength(3000);
//            Property(x => x.Star1).HasColumnName("star1").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star2).HasColumnName("star2").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star3).HasColumnName("star3").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.Star4).HasColumnName("star4").IsOptional().HasColumnType("numeric").HasPrecision(5,1);
//            Property(x => x.UpdateTime).HasColumnName("updateTime").IsOptional().HasColumnType("datetime");
//            Property(x => x.Flag1).HasColumnName("flag1").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Alias).HasColumnName("alias").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Acceptpay).HasColumnName("acceptpay").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Orderlang).HasColumnName("orderlang").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//            Property(x => x.Acceptorder).HasColumnName("acceptorder").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
//            Property(x => x.DeliveryWay).HasColumnName("deliveryWay").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Deliverytime).HasColumnName("Deliverytime").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryLastOt).HasColumnName("DeliveryLastOT").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.DeliveryMinOrder).HasColumnName("DeliveryMinOrder").IsOptional().HasColumnType("decimal").HasPrecision(8,2);
//            Property(x => x.Bankname).HasColumnName("bankname").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Bankusername).HasColumnName("bankusername").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Banksortcode).HasColumnName("banksortcode").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Bankno).HasColumnName("bankno").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Webcommision).HasColumnName("webcommision").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Expireddt).HasColumnName("expireddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Isblocked).HasColumnName("isblocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//        }
//    }

//    // vwSysMsg
//    public class VwSysMsgConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwSysMsg>
//    {
//        public VwSysMsgConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwSysMsgConfiguration(string schema)
//        {
//            ToTable(schema + ".vwSysMsg");
//            HasKey(x => new { x.Msgto, x.Msgid, x.Msgtitle, x.Msgdt, x.Msgcontent, x.Email });

//            Property(x => x.Msgto).HasColumnName("msgto").IsRequired().HasColumnType("int");
//            Property(x => x.Msgid).HasColumnName("msgid").IsRequired().HasColumnType("int");
//            Property(x => x.Msgtitle).HasColumnName("msgtitle").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Msgdt).HasColumnName("msgdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Msgcontent).HasColumnName("msgcontent").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Isread).HasColumnName("isread").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Isdelete).HasColumnName("isdelete").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Readdt).HasColumnName("readdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Email).HasColumnName("email").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }

//    // vwUser2Device
//    public class VwUser2DeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwUser2Device>
//    {
//        public VwUser2DeviceConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwUser2DeviceConfiguration(string schema)
//        {
//            ToTable(schema + ".vwUser2Device");
//            HasKey(x => x.Deviceid);

//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Appuserid).HasColumnName("appuserid").IsOptional().HasColumnType("int");
//            Property(x => x.Devicetoken).HasColumnName("devicetoken").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Devicetype).HasColumnName("devicetype").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Deviceversion).HasColumnName("deviceversion").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Registdt).HasColumnName("registdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Channels).HasColumnName("channels").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.LastHeartbeatAt).HasColumnName("LastHeartbeatAt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Deviceid).HasColumnName("deviceid").IsRequired().HasColumnType("int");
//        }
//    }

//    // vwUserBalanceSummary
//    public class VwUserBalanceSummaryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwUserBalanceSummary>
//    {
//        public VwUserBalanceSummaryConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwUserBalanceSummaryConfiguration(string schema)
//        {
//            ToTable(schema + ".vwUserBalanceSummary");
//            HasKey(x => new { x.Balanceid, x.Userid, x.Createdt, x.Moneydirection, x.Balanceamt });

//            Property(x => x.Balanceid).HasColumnName("balanceid").IsRequired().HasColumnType("numeric").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
//            Property(x => x.Userid).HasColumnName("userid").IsRequired().HasColumnType("int");
//            Property(x => x.Createdt).HasColumnName("createdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Moneydirection).HasColumnName("moneydirection").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(2);
//            Property(x => x.Amt).HasColumnName("amt").IsOptional().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Comment).HasColumnName("comment").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
//            Property(x => x.Balanceamt).HasColumnName("balanceamt").IsRequired().HasColumnType("numeric").HasPrecision(10,2);
//            Property(x => x.Shopid).HasColumnName("shopid").IsOptional().HasColumnType("int");
//            Property(x => x.Orderid).HasColumnName("orderid").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
//        }
//    }

//    // vwValidOrders
//    public class VwValidOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwValidOrder>
//    {
//        public VwValidOrderConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwValidOrderConfiguration(string schema)
//        {
//            ToTable(schema + ".vwValidOrders");
//            HasKey(x => new { x.OrderId, x.Shopid, x.Uid });

//            Property(x => x.OrderId).HasColumnName("OrderID").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
//            Property(x => x.Payway).HasColumnName("payway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Uid).HasColumnName("uid").IsRequired().HasColumnType("int");
//            Property(x => x.Ispaid).HasColumnName("ispaid").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Deliveryway).HasColumnName("deliveryway").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Pickupdt).HasColumnName("pickupdt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Ordercreatedt).HasColumnName("ordercreatedt").IsOptional().HasColumnType("datetime");
//            Property(x => x.IsCancelled).HasColumnName("isCancelled").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Totalamount).HasColumnName("totalamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Totalprice1).HasColumnName("totalprice1").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Afterdiscount).HasColumnName("afterdiscount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Deliverycharge).HasColumnName("deliverycharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.CreditcardCharge).HasColumnName("creditcardCharge").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Tips).HasColumnName("tips").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Actualamount).HasColumnName("actualamount").IsOptional().HasColumnType("numeric").HasPrecision(10,4);
//            Property(x => x.Isjz).HasColumnName("isjz").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Comrate).HasColumnName("comrate").IsOptional().HasColumnType("decimal").HasPrecision(6,2);
//        }
//    }

//    // vwValidShops
//    public class VwValidShopConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwValidShop>
//    {
//        public VwValidShopConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwValidShopConfiguration(string schema)
//        {
//            ToTable(schema + ".vwValidShops");
//            HasKey(x => new { x.Shopid, x.Sname });

//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Tel1).HasColumnName("tel1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Tel2).HasColumnName("tel2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.ContactTel).HasColumnName("contactTel").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Addr1).HasColumnName("addr1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Addr2).HasColumnName("addr2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Cityname).HasColumnName("cityname").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Postcode1).HasColumnName("postcode1").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Postcode2).HasColumnName("postcode2").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
//            Property(x => x.Webcommision).HasColumnName("webcommision").IsOptional().HasColumnType("numeric").HasPrecision(5,2);
//            Property(x => x.Expireddt).HasColumnName("expireddt").IsOptional().HasColumnType("datetime");
//            Property(x => x.Islocked).HasColumnName("islocked").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
//            Property(x => x.Acceptpay).HasColumnName("acceptpay").IsOptional().HasColumnType("nvarchar").HasMaxLength(10);
//        }
//    }

//    // vwviewtel
//    public class VwviewtelConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Vwviewtel>
//    {
//        public VwviewtelConfiguration()
//            : this("dbo")
//        {
//        }
 
//        public VwviewtelConfiguration(string schema)
//        {
//            ToTable(schema + ".vwviewtel");
//            HasKey(x => new { x.Infoid, x.Shopid, x.Viewdt, x.Sname });

//            Property(x => x.Infoid).HasColumnName("infoid").IsRequired().HasColumnType("numeric");
//            Property(x => x.Shopid).HasColumnName("shopid").IsRequired().HasColumnType("int");
//            Property(x => x.Viewdt).HasColumnName("viewdt").IsRequired().HasColumnType("datetime");
//            Property(x => x.Viewcount).HasColumnName("viewcount").IsOptional().HasColumnType("int");
//            Property(x => x.Sname).HasColumnName("sname").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
//            Property(x => x.Sname2).HasColumnName("sname2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
//        }
//    }


//    // ************************************************************************
//    // Stored procedure return models

//    public class GetShopByPostCodeReturnModel
//    {
//        public System.String loginname { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String sname { get; set; }
//        public System.Int32? shopid { get; set; }
//        public System.String sname2 { get; set; }
//        public System.String mealtype { get; set; }
//        public System.String serviceType { get; set; }
//        public System.String tel1 { get; set; }
//        public System.String tel2 { get; set; }
//        public System.String fax { get; set; }
//        public System.String email { get; set; }
//        public System.String gotnotice { get; set; }
//        public System.String contactname { get; set; }
//        public System.String contactTel { get; set; }
//        public System.String addr1 { get; set; }
//        public System.String addr2 { get; set; }
//        public System.String addr3 { get; set; }
//        public System.String cityname { get; set; }
//        public System.String postcode1 { get; set; }
//        public System.String postcode2 { get; set; }
//        public System.String logo { get; set; }
//        public System.String VAT { get; set; }
//        public System.String description { get; set; }
//        public System.Decimal? star1 { get; set; }
//        public System.Decimal? star2 { get; set; }
//        public System.Decimal? star3 { get; set; }
//        public System.Decimal? star4 { get; set; }
//        public System.DateTime? updateTime { get; set; }
//        public System.String flag1 { get; set; }
//        public System.String alias { get; set; }
//        public System.String monFrToA { get; set; }
//        public System.String monFrToB { get; set; }
//        public System.String tuesFrToB { get; set; }
//        public System.String tuesFrToA { get; set; }
//        public System.String wedFrToA { get; set; }
//        public System.String wedFrToB { get; set; }
//        public System.String thurFrToA { get; set; }
//        public System.String thurFrToB { get; set; }
//        public System.String friFrToA { get; set; }
//        public System.String friFrToB { get; set; }
//        public System.String satFrToA { get; set; }
//        public System.String satFrToB { get; set; }
//        public System.String sunFrToA { get; set; }
//        public System.String sunFrToB { get; set; }
//        public System.String utype { get; set; }
//        public System.String islocked { get; set; }
//        public System.Decimal? DeliveryMinOrder { get; set; }
//        public System.String DeliveryLastOT { get; set; }
//        public System.String Deliverytime { get; set; }
//        public System.String deliveryWay { get; set; }
//        public System.String acceptorder { get; set; }
//        public System.String acceptpay { get; set; }
//        public System.String haslunch { get; set; }
//        public System.String serviceTypeL { get; set; }
//        public System.Int32? suggestOnlineNum { get; set; }
//        public System.String acceptCustomerOpt { get; set; }
//        public System.Decimal? webcommision { get; set; }
//        public System.String shopstatus { get; set; }
//        public System.Int32? indexno { get; set; }
//        public System.String minCost { get; set; }
//    }

//    public class SpGetMenuInfosReturnModel
//    {
//        public class ResultSetModel1
//        {
//            public System.Int32 mid { get; set; }
//            public System.Int32 shopid { get; set; }
//            public System.String menuCat { get; set; }
//            public System.String menuName { get; set; }
//            public System.String menuName2 { get; set; }
//            public System.String menuDesc { get; set; }
//            public System.String menuDesc2 { get; set; }
//            public System.Decimal? price1 { get; set; }
//            public System.Decimal? price2 { get; set; }
//            public System.Decimal? star { get; set; }
//            public System.String menutype { get; set; }
//            public System.String menulogo { get; set; }
//            public System.String discountway { get; set; }
//            public System.String menucode { get; set; }
//            public System.String servicePeriod { get; set; }
//            public System.String displayweekday { get; set; }
//            public System.String hasSideOrder { get; set; }
//            public System.String hasPL { get; set; }
//            public System.String standardpl { get; set; }
//            public System.DateTime? CreateDT { get; set; }
//            public System.DateTime? UpdateDT { get; set; }
//            public System.String flag { get; set; }
//            public System.Decimal? indexnum { get; set; }
//            public System.Int32? mealamt { get; set; }
//            public System.String menuoptioncat { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel1> ResultSet1;

//        public class ResultSetModel2
//        {
//            public System.Int32 mid { get; set; }
//            public System.Int32 shopid { get; set; }
//            public System.String menuCat { get; set; }
//            public System.String menuName { get; set; }
//            public System.String menuName2 { get; set; }
//            public System.String menuDesc { get; set; }
//            public System.String menuDesc2 { get; set; }
//            public System.Decimal? price1 { get; set; }
//            public System.Decimal? price2 { get; set; }
//            public System.Decimal? star { get; set; }
//            public System.String menutype { get; set; }
//            public System.String menulogo { get; set; }
//            public System.String discountway { get; set; }
//            public System.String menucode { get; set; }
//            public System.String servicePeriod { get; set; }
//            public System.String displayweekday { get; set; }
//            public System.String hasSideOrder { get; set; }
//            public System.String hasPL { get; set; }
//            public System.String standardpl { get; set; }
//            public System.DateTime? CreateDT { get; set; }
//            public System.DateTime? UpdateDT { get; set; }
//            public System.String flag { get; set; }
//            public System.Decimal? indexnum { get; set; }
//            public System.Int32? mealamt { get; set; }
//            public System.String menuoptioncat { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel2> ResultSet2;

//    }

//    public class SpGetPlInfoReturnModel
//    {
//        public class ResultSetModel1
//        {
//            public System.Int32 basicmenuid { get; set; }
//            public System.Int32 shopid { get; set; }
//            public System.String menutype1 { get; set; }
//            public System.String menutype2 { get; set; }
//            public System.String mname { get; set; }
//            public System.String mname2 { get; set; }
//            public System.Decimal? price1 { get; set; }
//            public System.Decimal? price2 { get; set; }
//            public System.String menudesc { get; set; }
//            public System.String menudesc2 { get; set; }
//            public System.String menucode { get; set; }
//            public System.String flag { get; set; }
//            public System.String menu001 { get; set; }
//            public System.Decimal? indexnum { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel1> ResultSet1;

//        public class ResultSetModel2
//        {
//            public System.Int32 basicmenuid { get; set; }
//            public System.Int32 shopid { get; set; }
//            public System.String menutype1 { get; set; }
//            public System.String menutype2 { get; set; }
//            public System.String mname { get; set; }
//            public System.String mname2 { get; set; }
//            public System.Decimal? price1 { get; set; }
//            public System.Decimal? price2 { get; set; }
//            public System.String menudesc { get; set; }
//            public System.String menudesc2 { get; set; }
//            public System.String menucode { get; set; }
//            public System.String flag { get; set; }
//            public System.String menu001 { get; set; }
//            public System.Decimal? indexnum { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel2> ResultSet2;

//    }

//    public class SpUserRegExistReturnModel
//    {
//        public System.Int32 uid { get; set; }
//    }

//    public class UpCreditCardGetListReturnModel
//    {
//        public System.Int32 cardid { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String ACCT { get; set; }
//        public System.String AcctType { get; set; }
//        public System.String Street { get; set; }
//        public System.String city { get; set; }
//        public System.String state { get; set; }
//        public System.String country { get; set; }
//        public System.String zip { get; set; }
//        public System.Int32? cardIssue { get; set; }
//        public System.String cardStart { get; set; }
//        public System.String expDate { get; set; }
//        public System.String firstName { get; set; }
//        public System.String lastName { get; set; }
//        public System.String CVV2 { get; set; }
//        public System.DateTime? createDT { get; set; }
//    }

//    public class UpDeliveryAddrGetListReturnModel
//    {
//        public System.Int32 addrid { get; set; }
//        public System.String username { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String addrname { get; set; }
//        public System.String addr1 { get; set; }
//        public System.String addr2 { get; set; }
//        public System.String addr3 { get; set; }
//        public System.String cityname { get; set; }
//        public System.String postcode1 { get; set; }
//        public System.String postcode2 { get; set; }
//        public System.String tel { get; set; }
//        public System.String comments { get; set; }
//        public System.String flag { get; set; }
//        public System.String mobile { get; set; }
//    }

//    public class UpDeliveryAddrGetModelByIdReturnModel
//    {
//        public System.Int32 addrid { get; set; }
//        public System.String username { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String addrname { get; set; }
//        public System.String addr1 { get; set; }
//        public System.String addr2 { get; set; }
//        public System.String addr3 { get; set; }
//        public System.String cityname { get; set; }
//        public System.String postcode1 { get; set; }
//        public System.String postcode2 { get; set; }
//        public System.String tel { get; set; }
//        public System.String comments { get; set; }
//        public System.String flag { get; set; }
//        public System.String mobile { get; set; }
//    }

//    public class UpFavouritesGetModelReturnModel
//    {
//        public System.Int32 fid { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String ftype { get; set; }
//        public System.Int32? shopid { get; set; }
//        public System.Int32? mid { get; set; }
//        public System.DateTime? createDT { get; set; }
//        public System.String flag { get; set; }
//    }

//    public class UpGetUserEmailReturnModel
//    {
//        public class ResultSetModel1
//        {
//            public System.String uname { get; set; }
//            public System.String email { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel1> ResultSet1;

//        public class ResultSetModel2
//        {
//            public System.String uname { get; set; }
//            public System.String email { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel2> ResultSet2;

//    }

//    public class UpRecommendGetModelReturnModel
//    {
//        public System.Int32 recID { get; set; }
//        public System.Int32? recUid { get; set; }
//        public System.String recName { get; set; }
//        public System.String shopname { get; set; }
//        public System.String townname { get; set; }
//        public System.String addr { get; set; }
//        public System.String tel { get; set; }
//        public System.String ishandled { get; set; }
//        public System.String status { get; set; }
//        public System.DateTime? recDate { get; set; }
//    }

//    public class UpShopGetModelReturnModel
//    {
//        public System.Int32 shopid { get; set; }
//        public System.String sname { get; set; }
//        public System.String sname2 { get; set; }
//        public System.String mealtype { get; set; }
//        public System.String serviceType { get; set; }
//        public System.String serviceTypeL { get; set; }
//        public System.String tel1 { get; set; }
//        public System.String tel2 { get; set; }
//        public System.String fax { get; set; }
//        public System.String email { get; set; }
//        public System.String gotnotice { get; set; }
//        public System.String contactname { get; set; }
//        public System.String contactTel { get; set; }
//        public System.String addr1 { get; set; }
//        public System.String addr2 { get; set; }
//        public System.String addr3 { get; set; }
//        public System.String cityname { get; set; }
//        public System.String postcode1 { get; set; }
//        public System.String postcode2 { get; set; }
//        public System.String longitude { get; set; }
//        public System.String latitude { get; set; }
//        public System.String logo { get; set; }
//        public System.String VAT { get; set; }
//        public System.String mapstr { get; set; }
//        public System.String description { get; set; }
//        public System.Decimal? star1 { get; set; }
//        public System.Decimal? star2 { get; set; }
//        public System.Decimal? star3 { get; set; }
//        public System.Decimal? star4 { get; set; }
//        public System.DateTime? updateTime { get; set; }
//        public System.String flag1 { get; set; }
//        public System.String alias { get; set; }
//        public System.String acceptpay { get; set; }
//        public System.String orderlang { get; set; }
//        public System.String acceptorder { get; set; }
//        public System.String deliveryWay { get; set; }
//        public System.String Deliverytime { get; set; }
//        public System.String DeliveryLastOT { get; set; }
//        public System.Decimal? DeliveryMinOrder { get; set; }
//        public System.String bankname { get; set; }
//        public System.String bankusername { get; set; }
//        public System.String banksortcode { get; set; }
//        public System.String bankno { get; set; }
//        public System.Decimal? webcommision { get; set; }
//        public System.DateTime? expireddt { get; set; }
//        public System.String bgpicture { get; set; }
//        public System.String cardchargeopt { get; set; }
//        public System.Decimal? fixchargeamt { get; set; }
//        public System.Decimal? ratiochargeamt { get; set; }
//        public System.Int32? suggestOnlineNum { get; set; }
//        public System.String acceptCustomerOpt { get; set; }
//    }

//    public class UpShoppingHolidayGetListReturnModel
//    {
//        public System.Int32 holidayid { get; set; }
//        public System.Int32? shopid { get; set; }
//        public System.DateTime? fromDT { get; set; }
//        public System.DateTime? toDT { get; set; }
//    }

//    public class UpSysMsgGetModelReturnModel
//    {
//        public System.Int32 msgid { get; set; }
//        public System.String msgtitle { get; set; }
//        public System.String msgcontent { get; set; }
//        public System.DateTime msgdt { get; set; }
//        public System.Int32 msgto { get; set; }
//        public System.String isread { get; set; }
//        public System.DateTime? readdt { get; set; }
//    }

//    public class UpUserregGetInfoByUidReturnModel
//    {
//        public System.String utype { get; set; }
//        public System.String gender { get; set; }
//        public System.String realname { get; set; }
//        public System.String email { get; set; }
//        public System.String pwd { get; set; }
//        public System.String pwdquestion { get; set; }
//        public System.String pwdanswer { get; set; }
//        public System.String birthday { get; set; }
//        public System.DateTime? lastlogindate { get; set; }
//        public System.String lastloginIP { get; set; }
//        public System.String islocked { get; set; }
//        public System.Int32? score { get; set; }
//        public System.Int32? credits { get; set; }
//        public System.String isblocked { get; set; }
//        public System.String isnoticed { get; set; }
//        public System.DateTime? createdt { get; set; }
//        public System.Int32? loginErrTime { get; set; }
//        public System.Int32 uid { get; set; }
//        public System.String houseno { get; set; }
//        public System.String addr1 { get; set; }
//        public System.String postcode1 { get; set; }
//        public System.String postcode2 { get; set; }
//    }

//    public class UpUserregGetpwdByMailReturnModel
//    {
//        public System.String pwd { get; set; }
//    }

//    public class UpUserregGetPwdQuestionReturnModel
//    {
//        public class ResultSetModel1
//        {
//            public System.String pwdquestion { get; set; }
//            public System.String pwdanswer { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel1> ResultSet1;

//        public class ResultSetModel2
//        {
//            public System.String pwdquestion { get; set; }
//            public System.String pwdanswer { get; set; }
//        }
//        public System.Collections.Generic.List<ResultSetModel2> ResultSet2;

//    }

//    public class UpUserscoreGetListReturnModel
//    {
//        public System.Int32 sid { get; set; }
//        public System.Int32? uid { get; set; }
//        public System.DateTime? scoretime { get; set; }
//        public System.String operateuser { get; set; }
//        public System.Int32? score { get; set; }
//        public System.String operation { get; set; }
//        public System.String scoretype { get; set; }
//        public System.String description { get; set; }
//    }

//    public class UpUserscoreGetModelReturnModel
//    {
//        public System.Int32 sid { get; set; }
//        public System.Int32? uid { get; set; }
//        public System.DateTime? scoretime { get; set; }
//        public System.String operateuser { get; set; }
//        public System.Int32? score { get; set; }
//        public System.String operation { get; set; }
//        public System.String scoretype { get; set; }
//        public System.String description { get; set; }
//    }

//}
//// </auto-generated>

